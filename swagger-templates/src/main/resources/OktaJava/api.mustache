{{!
    Copyright 2017 Okta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
}}
{{>licenseInfo}}
package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import java.util.LinkedHashMap;
import com.okta.sdk.ds.DataStore;

{{#operations}}
/**
* The {@code Client} is the main entry point to the Okta Java SDK.  A JVM project wishing to
* communicate with the Okta REST API service must build a {@code Client} instance.  After obtaining
* a {@code Client instance}, the REST API may be used by making simple Java calls on objects returned from
* the Client (or any children objects obtained therein).
* <p>
* For example:
* <pre>
* Client client = Clients.builder().build();
*
* client.getUser(userId)
* </pre>
* @see <a href="https://developer.okta.com/docs/guides/create-an-api-token/overview">Communicating with Okta: Get your API Token</a>
* @see DataStore
* @since 0.5.0
*/
@javax.annotation.Generated(value = "{{generatorClass}}",
                            date  = "{{generatedDate}}")
public interface {{classname}} extends DataStore {

    /**
    * Returns the internal {@link DataStore} of the client.  It is typically not necessary to invoke this method as
    * the Client implements the {@link DataStore} API and will delegate to this instance automatically.
    *
    * @return the client's internal {@link DataStore}.
    */
    DataStore getDataStore();

{{#operation}}
{{^vendorExtensions.moved}}
    /**
    * {{summary}}
    * {{notes}}
    {{#allParams}}
    * @param {{paramName}} {{description}}{{#required}} (required){{/required}}{{^required}} (optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}
    {{/allParams}}
    {{#returnType}}
    * @return {{returnType}}
    {{/returnType}}
    */
    @javax.annotation.Generated(
            value    = "{{generatorClass}}",
            date     = "{{generatedDate}}",
            comments = "{{httpMethod}} - {{path}}")
    {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{operationId}}({{#allParams}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});

    {{#vendorExtensions.hasOptional}}
    /**
    * {{summary}}
    * {{notes}}
    {{#vendorExtensions.nonOptionalParams}}
    * @param {{paramName}} {{description}} (required)
    {{/vendorExtensions.nonOptionalParams}}
    {{#returnType}}
    * @return {{returnType}}
    {{/returnType}}
    */
    @javax.annotation.Generated(
            value    = "{{generatorClass}}",
            date     = "{{generatedDate}}",
            comments = "{{httpMethod}} - {{path}}")
    {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{operationId}}({{#vendorExtensions.nonOptionalParams}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/vendorExtensions.nonOptionalParams}});
    {{/vendorExtensions.hasOptional}}

{{#vendorExtensions.hasBackwardsCompatibleParams}}
{{#vendorExtensions.backwardsCompatibleParamsEntrySet}}
    /**
    * {{summary}}
    * {{notes}}
    {{#value}}
    * @param {{paramName}} {{description}} (required)
    {{/value}}
    {{#returnType}}
    * @return {{returnType}}
    {{/returnType}}
    */
    @javax.annotation.Generated(
            value    = "{{generatorClass}}",
            date     = "{{generatedDate}}",
            comments = "{{httpMethod}} - {{path}}")
    {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{operationId}}({{#value}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/value}});

{{/vendorExtensions.backwardsCompatibleParamsEntrySet}}
{{/vendorExtensions.hasBackwardsCompatibleParams}}

{{/vendorExtensions.moved}}
{{/operation}}
}
{{/operations}}
