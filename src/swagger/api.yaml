#
# Copyright 2017 Okta
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

{
  "swagger": "2.0",
  "info": {
    "title": "Okta API",
    "description": "Allows customers to easily access the Okta API",
    "termsOfService": "http://developer.okta.com/terms/",
    "contact": {
      "name": "Okta Developer Team",
      "email": "devex-public@okta.com",
      "url": "http://developer.okta.com/"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "externalDocs": {
    "description": "Find more info here",
    "url": "http://developer.okta.com/docs/api/getting_started/design_principles.html"
  },
  "host": "your-subdomain.okta.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "api_token": {
      "description": "SSWS {API Token}",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "paths": {
    "/api/v1/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Enumerates groups in your organization with pagination. A subset of groups can be returned that match a supported filter expression or query.",
        "operationId": "listGroups",
        "parameters": [
          {
            "description": "Searches the name property of groups for matching value",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "description": "Filter expression for groups",
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "description": "Specifies the pagination cursor for the next page of groups",
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "description": "Specifies the number of group results in a page",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGroup"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "List Groups",
        "tags": [
          "Group"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Adds a new group with `OKTA_GROUP` type to your organization.",
        "operationId": "createGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "Add Group",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Lists all group rules for your organization.",
        "operationId": "listRules",
        "parameters": [
          {
            "default": -1,
            "description": "Specifies the number of rule results in a page",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Specifies the pagination cursor for the next page of rules",
            "in": "query",
            "name": "after",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/GroupMembershipMediationRule"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "List Group Rules",
        "tags": [
          "Group"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a group rule to dynamically add users to the specified group if they match the condition",
        "operationId": "createRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "Create Group Rule",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules/{ruleId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "removeUsers",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules/{ruleId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules/{ruleId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivateRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getUserGroupStats",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroupStats"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listGroupUsers",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/users/{userId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "removeUserFromGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "addUserToGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Lists users in your organization with pagination in most cases.  A subset of users can be returned that match a supported filter expression or search criteria.",
        "operationId": "listUsers",
        "parameters": [
          {
            "description": "Finds a user that matches firstName, lastName, and email properties",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "description": "Specifies the pagination cursor for the next page of users",
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "description": "Specifies the number of results returned",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "Filters users with a supported expression for a subset of properties",
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "description": "Searches for users with a supported filtering  expression for most properties",
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "List Users",
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new user in your Okta organization with or without credentials.",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "default": true,
            "description": "Executes activation lifecycle operation when creating the user",
            "in": "query",
            "name": "activate",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Indicates whether to create a user with a specified authentication provider",
            "in": "query",
            "name": "provider",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "Create User",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivateOrDeleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateUserWithDefaults",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/appLinks": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listAppLinks",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "in": "query",
            "name": "showAll",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AppLink"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/credentials/change_password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "changePassword",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordCredentials"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/credentials/change_recovery_question": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "changeRecoveryQuestion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/credentials/forgot_password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "forgotPasswordWithRecoveryAnswer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "in": "query",
            "name": "sendEmail",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseCredentialsObject"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listUserGroups",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGroup"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "in": "query",
            "name": "sendEmail",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActivationToken"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "lifecycleDeactivateUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/forgot_password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "forgotPassword",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "in": "query",
            "name": "sendEmail",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResetPasswordToken"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/reset_factors": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "resetAllFactors",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/suspend": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "suspendUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/unlock": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "unlockUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/unsuspend": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "unsuspendUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listAssignedRoles",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/MediationRoleAssignment"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "assignRoleToUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediationRoleAssignment"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationRoleAssignment"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles/{roleId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "unassignRoleFromUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getRoleForUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationRoleAssignment"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles/{roleId}/targets/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listGroupTargetsForRole",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGroup"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "removeGroupTargetFromRole",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "addGroupTargetToRole",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "ActivationToken": {
      "properties": {
        "activationToken": {
          "type": "string"
        },
        "activationUrl": {
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "AppLink": {
      "properties": {
        "appAssignmentId": {
          "type": "string"
        },
        "appInstanceId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "credentialsSetup": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "linkUrl": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        },
        "sortOrder": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "AssignUserToGroupsMediationAction": {
      "properties": {
        "groupIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuthProvider": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "enum": [
            "orn:okta:authn:provider:directory:activedirectory",
            "orn:okta:authn:provider:federation",
            "orn:okta:authn:provider:directory:ldap",
            "orn:okta:authn:provider:okta",
            "orn:okta:authn:provider:social",
            "orn:okta:authn:provider:okta:import"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "BaseCredentialsObject": {
      "properties": {},
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "ChangePasswordCredentials": {
      "properties": {
        "newPassword": {
          "$ref": "#/definitions/PasswordCredential"
        },
        "oldPassword": {
          "$ref": "#/definitions/PasswordCredential"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "EmbeddedObject": {
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FactorDevice": {
      "properties": {
        "id": {
          "type": "string"
        },
        "links": {
          "type": "object"
        },
        "status": {
          "enum": [
            "PENDING_ACTIVATION",
            "ACTIVE",
            "INACTIVE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationActions": {
      "properties": {
        "assignUserToGroups": {
          "$ref": "#/definitions/AssignUserToGroupsMediationAction"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationConditions": {
      "properties": {
        "expression": {
          "$ref": "#/definitions/GroupMembershipMediationExpressionCondition"
        },
        "groups": {
          "$ref": "#/definitions/GroupMembershipMediationGroupCondition"
        },
        "people": {
          "$ref": "#/definitions/GroupMembershipMediationPeopleCondition"
        },
        "users": {
          "$ref": "#/definitions/GroupMembershipMediationUserCondition"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationExpressionCondition": {
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationGroupCondition": {
      "properties": {
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationPeopleCondition": {
      "properties": {
        "groups": {
          "$ref": "#/definitions/GroupMembershipMediationGroupCondition"
        },
        "users": {
          "$ref": "#/definitions/GroupMembershipMediationUserCondition"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationRule": {
      "properties": {
        "actions": {
          "$ref": "#/definitions/GroupMembershipMediationActions"
        },
        "conditions": {
          "$ref": "#/definitions/GroupMembershipMediationConditions"
        },
        "created": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "INVALID"
          ],
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-crud": [
        {
          "alias": "update",
          "arguments": [
            {
              "dest": "ruleId",
              "src": "id"
            },
            {
              "dest": "body",
              "self": true
            }
          ],
          "operationId": "updateRule"
        },
        {
          "alias": "delete",
          "arguments": [
            {
              "dest": "ruleId",
              "src": "id"
            }
          ],
          "operationId": "deleteRule"
        }
      ],
      "x-okta-operations": [
        {
          "alias": "activate",
          "arguments": [
            {
              "dest": "ruleId",
              "src": "id"
            }
          ],
          "operationId": "activateRule"
        },
        {
          "alias": "deactivate",
          "arguments": [
            {
              "dest": "ruleId",
              "src": "id"
            }
          ],
          "operationId": "deactivateRule"
        }
      ]
    },
    "GroupMembershipMediationUserCondition": {
      "properties": {
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HashedPassword": {
      "properties": {},
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "Link": {
      "properties": {
        "hints": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LinksUnion": {
      "properties": {},
      "type": "object"
    },
    "MediationRoleAssignment": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "label": {
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "PasswordCredential": {
      "properties": {
        "hash": {
          "$ref": "#/definitions/HashedPassword"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "RecoveryQuestionCredential": {
      "properties": {
        "answer": {
          "type": "string"
        },
        "question": {
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "ResetPasswordToken": {
      "properties": {
        "resetPasswordUrl": {
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "User": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "activated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/UserCredentials"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastLogin": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "passwordChanged": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile"
        },
        "status": {
          "enum": [
            "STAGED",
            "PROVISIONED",
            "ACTIVE",
            "RECOVERY",
            "PASSWORD_EXPIRED",
            "LOCKED_OUT",
            "DEPROVISIONED",
            "SUSPENDED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "statusChanged": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "transitioningToStatus": {
          "enum": [
            "STAGED",
            "PROVISIONED",
            "ACTIVE",
            "RECOVERY",
            "PASSWORD_EXPIRED",
            "LOCKED_OUT",
            "DEPROVISIONED",
            "SUSPENDED"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-crud": [
        {
          "alias": "create",
          "arguments": [
            {
              "dest": "body",
              "self": true
            }
          ],
          "operationId": "createUser"
        },
        {
          "alias": "read",
          "arguments": [],
          "operationId": "getUser"
        },
        {
          "alias": "update",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            },
            {
              "dest": "body",
              "self": true
            }
          ],
          "operationId": "updateUser"
        },
        {
          "alias": "delete",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            },
            {
              "dest": "body",
              "self": true
            }
          ],
          "operationId": "deactivateOrDeleteUser"
        }
      ],
      "x-okta-operations": [
        {
          "alias": "updateUserWithDefaults",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "updateUserWithDefaults"
        },
        {
          "alias": "listAppLinks",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "listAppLinks"
        },
        {
          "alias": "changePassword",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "changePassword"
        },
        {
          "alias": "changeRecoveryQuestion",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "changeRecoveryQuestion"
        },
        {
          "alias": "forgotPasswordWithRecoveryAnswer",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "forgotPasswordWithRecoveryAnswer"
        },
        {
          "alias": "listAssignedRoles",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "listAssignedRoles"
        },
        {
          "alias": "assignRoleToUser",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "assignRoleToUser"
        },
        {
          "alias": "unassignRoleFromUser",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "unassignRoleFromUser"
        },
        {
          "alias": "getRoleForUser",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "getRoleForUser"
        },
        {
          "alias": "listGroupTargetsForRole",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "listGroupTargetsForRole"
        },
        {
          "alias": "removeGroupTargetFromRole",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "removeGroupTargetFromRole"
        },
        {
          "alias": "addGroupTargetToRole",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "addGroupTargetToRole"
        },
        {
          "alias": "listGroups",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "listUserGroups"
        },
        {
          "alias": "activate",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "activateUser"
        },
        {
          "alias": "deactivate",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "lifecycleDeactivateUser"
        },
        {
          "alias": "suspend",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "suspendUser"
        },
        {
          "alias": "unsuspend",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "unsuspendUser"
        },
        {
          "alias": "unlock",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "unlockUser"
        },
        {
          "alias": "forgotPassword",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "forgotPassword"
        },
        {
          "alias": "resetFactors",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "resetAllFactors"
        },
        {
          "alias": "addToGroup",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "addUserToGroup"
        }
      ],
      "x-okta-tags": [
        "User"
      ]
    },
    "UserCredentials": {
      "properties": {
        "password": {
          "$ref": "#/definitions/PasswordCredential"
        },
        "provider": {
          "$ref": "#/definitions/AuthProvider",
          "readOnly": true
        },
        "recovery_question": {
          "$ref": "#/definitions/RecoveryQuestionCredential"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "User"
      ]
    },
    "UserGroup": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "$ref": "#/definitions/EmbeddedObject"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/LinksUnion"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastMembershipUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "objectClass": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "profile": {
          "$ref": "#/definitions/UserGroupProfile"
        },
        "type": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-crud": [
        {
          "alias": "update",
          "arguments": [
            {
              "dest": "groupId",
              "src": "id"
            },
            {
              "dest": "body",
              "self": true
            }
          ],
          "operationId": "updateGroup"
        },
        {
          "alias": "delete",
          "arguments": [
            {
              "dest": "groupId",
              "src": "id"
            }
          ],
          "operationId": "deleteGroup"
        }
      ],
      "x-okta-operations": [
        {
          "alias": "getUserGroupStats",
          "arguments": [
            {
              "dest": "groupId",
              "src": "id"
            }
          ],
          "operationId": "getUserGroupStats"
        },
        {
          "alias": "removeUserFromGroup",
          "arguments": [
            {
              "dest": "groupId",
              "src": "id"
            }
          ],
          "operationId": "removeUserFromGroup"
        },
        {
          "alias": "listUsers",
          "arguments": [
            {
              "dest": "groupId",
              "src": "id"
            }
          ],
          "operationId": "listGroupUsers"
        }
      ],
      "x-okta-tags": [
        "Group"
      ]
    },
    "UserGroupProfile": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "Group"
      ]
    },
    "UserGroupStats": {
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "appsCount": {
          "type": "integer"
        },
        "groupPushMappingsCount": {
          "type": "integer"
        },
        "usersCount": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-okta-tags": [
        "Group"
      ]
    },
    "UserProfile": {
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "secondEmail": {
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-extensible": true,
      "x-okta-tags": [
        "User"
      ]
    }
  }
}