#
# Copyright 2020-Present Okta, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
swagger: '2.0'
info:
  title: Okta API
  description: Allows customers to easily access the Okta API
  termsOfService: 'http://developer.okta.com/terms/'
  contact:
    name: Okta Developer Team
    email: devex-public@okta.com
    url: 'http://developer.okta.com/'
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 2.2.1
externalDocs:
  description: Find more info here
  url: 'http://developer.okta.com/docs/api/getting_started/design_principles.html'
host: your-subdomain.okta.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  api_token:
    description: 'SSWS {API Token}'
    in: header
    name: Authorization
    type: apiKey
paths:
  /api/v1/apps:
    get:
      consumes:
        - application/json
      description: >-
        Enumerates apps added to your organization with pagination. A subset of
        apps can be returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
        - in: query
          name: q
          type: string
        - description: Specifies the pagination cursor for the next page of apps
          in: query
          name: after
          type: string
        - default: -1
          description: Specifies the number of results for a page
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            Filters apps by status, user.id, group.id or credentials.signing.kid
            expression
          in: query
          name: filter
          type: string
        - description: >-
            Traverses users link relationship and optionally embeds Application
            User resource
          in: query
          name: expand
          type: string
        - default: false
          in: query
          name: includeNonDeleted
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Application'
            type: array
      security:
        - api_token: []
      summary: List Applications
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: Adds a new application to your Okta organization.
      operationId: createApplication
      parameters:
        - in: body
          name: application
          required: true
          schema:
            $ref: '#/definitions/Application'
        - default: true
          description: Executes activation lifecycle operation when creating the app
          in: query
          name: activate
          type: boolean
        - in: header
          name: OktaAccessGateway-Agent
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
      security:
        - api_token: []
      summary: Add Application
      tags:
        - Application
  '/api/v1/apps/{appId}':
    delete:
      consumes:
        - application/json
      description: Removes an inactive application.
      operationId: deleteApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Delete Application
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Fetches an application from your Okta organization by `id`.
      operationId: getApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
      security:
        - api_token: []
      summary: Get Application
      tags:
        - Application
    put:
      consumes:
        - application/json
      description: Updates an application in your organization.
      operationId: updateApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: body
          name: application
          required: true
          schema:
            $ref: '#/definitions/Application'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
      security:
        - api_token: []
      summary: Update Application
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/csrs':
    get:
      consumes:
        - application/json
      description: Enumerates Certificate Signing Requests for an application
      operationId: listCsrsForApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Csr'
            type: array
      security:
        - api_token: []
      summary: List Certificate Signing Requests for Application
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: >-
        Generates a new key pair and returns the Certificate Signing Request for
        it.
      operationId: generateCsrForApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: body
          name: metadata
          required: true
          schema:
            $ref: '#/definitions/CsrMetadata'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Csr'
      security:
        - api_token: []
      summary: Generate Certificate Signing Request for Application
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/csrs/{csrId}':
    delete:
      consumes:
        - application/json
      operationId: revokeCsrFromApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: csrId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Application
    get:
      consumes:
        - application/json
      operationId: getCsrForApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: csrId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Csr'
      security:
        - api_token: []
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish':
    post:
      consumes:
        - application/json
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: csrId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      tags:
        - Application
      x-okta-multi-operation:
        - consumes:
            - application/x-x509-ca-cert
          encoding: base64
          operationId: publishCerCert
          parameters:
            - in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/x-x509-ca-cert
          operationId: publishBinaryCerCert
          parameters:
            - format: binary
              in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/pkix-cert
          encoding: base64
          operationId: publishDerCert
          parameters:
            - in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/pkix-cert
          operationId: publishBinaryDerCert
          parameters:
            - format: binary
              in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/x-pem-file
          operationId: publishBinaryPemCert
          parameters:
            - format: binary
              in: body
              name: certificate
              required: true
              type: string
  '/api/v1/apps/{appId}/credentials/keys':
    get:
      consumes:
        - application/json
      description: Enumerates key credentials for an application
      operationId: listApplicationKeys
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/JsonWebKey'
            type: array
      security:
        - api_token: []
      summary: List Key Credentials for Application
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/keys/generate':
    post:
      consumes:
        - application/json
      description: Generates a new X.509 certificate for an application key credential
      operationId: generateApplicationKey
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: validityYears
          type: integer
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/keys/{keyId}':
    get:
      consumes:
        - application/json
      description: Gets a specific application key credential by kid
      operationId: getApplicationKey
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Get Key Credential for Application
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/keys/{keyId}/clone':
    post:
      consumes:
        - application/json
      description: >-
        Clones a X.509 certificate for an application key credential from a
        source application to target application.
      operationId: cloneApplicationKey
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
        - description: Unique key of the target Application
          in: query
          name: targetAid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Clone Application Key Credential
      tags:
        - Application
  '/api/v1/apps/{appId}/grants':
    get:
      consumes:
        - application/json
      description: Lists all scope consent grants for the application
      operationId: listScopeConsentGrants
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2ScopeConsentGrant'
            type: array
      security:
        - api_token: []
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: Grants consent for the application to request an OAuth 2.0 Okta scope
      operationId: grantConsentToScope
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: body
          name: oAuth2ScopeConsentGrant
          required: true
          schema:
            $ref: '#/definitions/OAuth2ScopeConsentGrant'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OAuth2ScopeConsentGrant'
      security:
        - api_token: []
      tags:
        - Application
  '/api/v1/apps/{appId}/grants/{grantId}':
    delete:
      consumes:
        - application/json
      description: Revokes permission for the application to request the given scope
      operationId: revokeScopeConsentGrant
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: grantId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Fetches a single scope consent grant for the application
      operationId: getScopeConsentGrant
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: grantId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2ScopeConsentGrant'
      security:
        - api_token: []
      tags:
        - Application
  '/api/v1/apps/{appId}/groups':
    get:
      consumes:
        - application/json
      description: Enumerates group assignments for an application.
      operationId: listApplicationGroupAssignments
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: q
          type: string
        - description: Specifies the pagination cursor for the next page of assignments
          in: query
          name: after
          type: string
        - default: -1
          description: Specifies the number of results for a page
          format: int32
          in: query
          name: limit
          type: integer
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/ApplicationGroupAssignment'
            type: array
      security:
        - api_token: []
      summary: List Groups Assigned to Application
      tags:
        - Application
  '/api/v1/apps/{appId}/groups/{groupId}':
    delete:
      consumes:
        - application/json
      description: Removes a group assignment from an application.
      operationId: deleteApplicationGroupAssignment
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Remove Group from Application
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Fetches an application group assignment
      operationId: getApplicationGroupAssignment
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApplicationGroupAssignment'
      security:
        - api_token: []
      summary: Get Assigned Group for Application
      tags:
        - Application
    put:
      consumes:
        - application/json
      description: Assigns a group to an application
      operationId: createApplicationGroupAssignment
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
        - in: body
          name: applicationGroupAssignment
          schema:
            $ref: '#/definitions/ApplicationGroupAssignment'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApplicationGroupAssignment'
      security:
        - api_token: []
      summary: Assign Group to Application
      tags:
        - Application
  '/api/v1/apps/{appId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates an inactive application.
      operationId: activateApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Activate Application
      tags:
        - Application
  '/api/v1/apps/{appId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates an active application.
      operationId: deactivateApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Deactivate Application
      tags:
        - Application
  '/api/v1/apps/{appId}/tokens':
    delete:
      consumes:
        - application/json
      description: Revokes all tokens for the specified application
      operationId: revokeOAuth2TokensForApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Lists all tokens for the application
      operationId: listOAuth2TokensForApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: expand
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2Token'
            type: array
      security:
        - api_token: []
      tags:
        - Application
  '/api/v1/apps/{appId}/tokens/{tokenId}':
    delete:
      consumes:
        - application/json
      description: Revokes the specified token for the specified application
      operationId: revokeOAuth2TokenForApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Gets a token for the specified application
      operationId: getOAuth2TokenForApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2Token'
      security:
        - api_token: []
      tags:
        - Application
  '/api/v1/apps/{appId}/users':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all assigned [application users](#application-user-model) for
        an application.
      operationId: listApplicationUsers
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: q
          type: string
        - in: query
          name: query_scope
          type: string
        - description: specifies the pagination cursor for the next page of assignments
          in: query
          name: after
          type: string
        - default: -1
          description: specifies the number of results for a page
          format: int32
          in: query
          name: limit
          type: integer
        - in: query
          name: filter
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AppUser'
            type: array
      security:
        - api_token: []
      summary: List Users Assigned to Application
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: >-
        Assigns an user to an application with
        [credentials](#application-user-credentials-object) and an app-specific
        [profile](#application-user-profile-object). Profile mappings defined
        for the application are first applied before applying any profile
        properties specified in the request.
      operationId: assignUserToApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: body
          name: appUser
          required: true
          schema:
            $ref: '#/definitions/AppUser'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppUser'
      security:
        - api_token: []
      summary: Assign User to Application for SSO & Provisioning
      tags:
        - Application
  '/api/v1/apps/{appId}/users/{userId}':
    delete:
      consumes:
        - application/json
      description: Removes an assignment for a user from an application.
      operationId: deleteApplicationUser
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          in: query
          name: sendEmail
          type: boolean
          x-okta-added-version: 1.5.0
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Remove User from Application
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Fetches a specific user assignment for application by `id`.
      operationId: getApplicationUser
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppUser'
      security:
        - api_token: []
      summary: Get Assigned User for Application
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: Updates a user's profile for an application
      operationId: updateApplicationUser
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - in: body
          name: appUser
          required: true
          schema:
            $ref: '#/definitions/AppUser'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppUser'
      security:
        - api_token: []
      summary: Update Application Profile for Assigned User
      tags:
        - Application
  /api/v1/authorizationServers:
    get:
      consumes:
        - application/json
      description: Success
      operationId: listAuthorizationServers
      parameters:
        - in: query
          name: q
          type: string
        - in: query
          name: limit
          type: string
        - in: query
          name: after
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AuthorizationServer'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    post:
      consumes:
        - application/json
      description: Success
      operationId: createAuthorizationServer
      parameters:
        - in: body
          name: authorizationServer
          required: true
          schema:
            $ref: '#/definitions/AuthorizationServer'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServer'
        '201':
          description: Created
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: deleteAuthorizationServer
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    get:
      consumes:
        - application/json
      description: Success
      operationId: getAuthorizationServer
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServer'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    put:
      consumes:
        - application/json
      description: Success
      operationId: updateAuthorizationServer
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: body
          name: authorizationServer
          required: true
          schema:
            $ref: '#/definitions/AuthorizationServer'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServer'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/claims':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listOAuth2Claims
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2Claim'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    post:
      consumes:
        - application/json
      description: Success
      operationId: createOAuth2Claim
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: body
          name: oAuth2Claim
          required: true
          schema:
            $ref: '#/definitions/OAuth2Claim'
      produces:
        - application/json
      responses:
        '200':
          description: Created
          schema:
            $ref: '#/definitions/OAuth2Claim'
        '201':
          description: Success
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/claims/{claimId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: deleteOAuth2Claim
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: claimId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    get:
      consumes:
        - application/json
      description: Success
      operationId: getOAuth2Claim
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: claimId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2Claim'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    put:
      consumes:
        - application/json
      description: Success
      operationId: updateOAuth2Claim
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: claimId
          required: true
          type: string
        - in: body
          name: oAuth2Claim
          required: true
          schema:
            $ref: '#/definitions/OAuth2Claim'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2Claim'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/clients':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listOAuth2ClientsForAuthorizationServer
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2Client'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: revokeRefreshTokensForAuthorizationServerAndClient
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    get:
      consumes:
        - application/json
      description: Success
      operationId: listRefreshTokensForAuthorizationServerAndClient
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: query
          name: expand
          type: string
        - in: query
          name: after
          type: string
        - default: -1
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2RefreshToken'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: revokeRefreshTokenForAuthorizationServerAndClient
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    get:
      consumes:
        - application/json
      description: Success
      operationId: getRefreshTokenForAuthorizationServerAndClient
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2RefreshToken'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/credentials/keys':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listAuthorizationServerKeys
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/JsonWebKey'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate':
    post:
      consumes:
        - application/json
      description: Success
      operationId: rotateAuthorizationServerKeys
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: body
          name: use
          required: true
          schema:
            $ref: '#/definitions/JwkUse'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/JsonWebKey'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Success
      operationId: activateAuthorizationServer
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Success
      operationId: deactivateAuthorizationServer
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/policies':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listAuthorizationServerPolicies
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AuthorizationServerPolicy'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    post:
      consumes:
        - application/json
      description: Success
      operationId: createAuthorizationServerPolicy
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: body
          name: policy
          required: true
          schema:
            $ref: '#/definitions/AuthorizationServerPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServerPolicy'
        '201':
          description: Created
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/policies/{policyId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: deleteAuthorizationServerPolicy
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    get:
      consumes:
        - application/json
      description: Success
      operationId: getAuthorizationServerPolicy
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServerPolicy'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    put:
      consumes:
        - application/json
      description: Success
      operationId: updateAuthorizationServerPolicy
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: policyId
          required: true
          type: string
        - in: body
          name: policy
          required: true
          schema:
            $ref: '#/definitions/AuthorizationServerPolicy'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServerPolicy'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all policy rules for the specified Custom Authorization
        Server and Policy.
      operationId: listAuthorizationServerPolicyRules
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: authServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AuthorizationServerPolicyRule'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    post:
      consumes:
        - application/json
      description: >-
        Creates a policy rule for the specified Custom Authorization Server and
        Policy.
      operationId: createAuthorizationServerPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: authServerId
          required: true
          type: string
        - in: body
          name: policyRule
          required: true
          schema:
            $ref: '#/definitions/AuthorizationServerPolicyRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServerPolicyRule'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}':
    delete:
      consumes:
        - application/json
      description: >-
        Deletes a Policy Rule defined in the specified Custom Authorization
        Server and Policy.
      operationId: deleteAuthorizationServerPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    get:
      consumes:
        - application/json
      description: >-
        Returns a Policy Rule by ID that is defined in the specified Custom
        Authorization Server and Policy.
      operationId: getAuthorizationServerPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServerPolicyRule'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    put:
      consumes:
        - application/json
      description: >-
        Updates the configuration of the Policy Rule defined in the specified
        Custom Authorization Server and Policy.
      operationId: updateAuthorizationServerPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
        - in: body
          name: policyRule
          required: true
          schema:
            $ref: '#/definitions/AuthorizationServerPolicyRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizationServerPolicyRule'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/scopes':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listOAuth2Scopes
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: query
          name: q
          type: string
        - in: query
          name: filter
          type: string
        - in: query
          name: cursor
          type: string
        - default: -1
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2Scope'
            type: array
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    post:
      consumes:
        - application/json
      description: Success
      operationId: createOAuth2Scope
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: body
          name: oAuth2Scope
          required: true
          schema:
            $ref: '#/definitions/OAuth2Scope'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2Scope'
        '201':
          description: Success
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  '/api/v1/authorizationServers/{authServerId}/scopes/{scopeId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: deleteOAuth2Scope
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: scopeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    get:
      consumes:
        - application/json
      description: Success
      operationId: getOAuth2Scope
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: scopeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2Scope'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
    put:
      consumes:
        - application/json
      description: Success
      operationId: updateOAuth2Scope
      parameters:
        - in: path
          name: authServerId
          required: true
          type: string
        - in: path
          name: scopeId
          required: true
          type: string
        - in: body
          name: oAuth2Scope
          required: true
          schema:
            $ref: '#/definitions/OAuth2Scope'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2Scope'
      security:
        - api_token: []
      tags:
        - AuthorizationServer
  /api/v1/eventHooks:
    get:
      consumes:
        - application/json
      description: Success
      operationId: listEventHooks
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/EventHook'
            type: array
      security:
        - api_token: []
      tags:
        - EventHook
    post:
      consumes:
        - application/json
      description: Success
      operationId: createEventHook
      parameters:
        - in: body
          name: eventHook
          required: true
          schema:
            $ref: '#/definitions/EventHook'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventHook'
      security:
        - api_token: []
      tags:
        - EventHook
  '/api/v1/eventHooks/{eventHookId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: deleteEventHook
      parameters:
        - in: path
          name: eventHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - EventHook
    get:
      consumes:
        - application/json
      description: Success
      operationId: getEventHook
      parameters:
        - in: path
          name: eventHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventHook'
      security:
        - api_token: []
      tags:
        - EventHook
    put:
      consumes:
        - application/json
      description: Success
      operationId: updateEventHook
      parameters:
        - in: path
          name: eventHookId
          required: true
          type: string
        - in: body
          name: eventHook
          required: true
          schema:
            $ref: '#/definitions/EventHook'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventHook'
      security:
        - api_token: []
      tags:
        - EventHook
  '/api/v1/eventHooks/{eventHookId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Success
      operationId: activateEventHook
      parameters:
        - in: path
          name: eventHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventHook'
      security:
        - api_token: []
      tags:
        - EventHook
  '/api/v1/eventHooks/{eventHookId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Success
      operationId: deactivateEventHook
      parameters:
        - in: path
          name: eventHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventHook'
      security:
        - api_token: []
      tags:
        - EventHook
  '/api/v1/eventHooks/{eventHookId}/lifecycle/verify':
    post:
      consumes:
        - application/json
      description: Success
      operationId: verifyEventHook
      parameters:
        - in: path
          name: eventHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventHook'
      security:
        - api_token: []
      tags:
        - EventHook
  /api/v1/features:
    get:
      consumes:
        - application/json
      description: Success
      operationId: listFeatures
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Feature'
            type: array
      security:
        - api_token: []
      tags:
        - Feature
  '/api/v1/features/{featureId}':
    get:
      consumes:
        - application/json
      description: Success
      operationId: getFeature
      parameters:
        - in: path
          name: featureId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Feature'
      security:
        - api_token: []
      tags:
        - Feature
  '/api/v1/features/{featureId}/dependencies':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listFeatureDependencies
      parameters:
        - in: path
          name: featureId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Feature'
            type: array
      security:
        - api_token: []
      tags:
        - Feature
  '/api/v1/features/{featureId}/dependents':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listFeatureDependents
      parameters:
        - in: path
          name: featureId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Feature'
            type: array
      security:
        - api_token: []
      tags:
        - Feature
  '/api/v1/features/{featureId}/{lifecycle}':
    post:
      consumes:
        - application/json
      description: Success
      operationId: updateFeatureLifecycle
      parameters:
        - in: path
          name: featureId
          required: true
          type: string
        - in: path
          name: lifecycle
          required: true
          type: string
        - in: query
          name: mode
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Feature'
      security:
        - api_token: []
      tags:
        - Feature
  /api/v1/groups:
    get:
      consumes:
        - application/json
      description: >-
        Enumerates groups in your organization with pagination. A subset of
        groups can be returned that match a supported filter expression or
        query.
      operationId: listGroups
      parameters:
        - description: Searches the name property of groups for matching value
          in: query
          name: q
          type: string
        - description: Filter expression for groups
          in: query
          name: filter
          type: string
        - description: Specifies the pagination cursor for the next page of groups
          in: query
          name: after
          type: string
        - default: 10000
          description: Specifies the number of group results in a page
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            If specified, it causes additional metadata to be included in the
            response.
          in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_token: []
      summary: List Groups
      tags:
        - Group
    post:
      consumes:
        - application/json
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: createGroup
      parameters:
        - in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/Group'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
      security:
        - api_token: []
      summary: Add Group
      tags:
        - Group
  /api/v1/groups/rules:
    get:
      consumes:
        - application/json
      description: Lists all group rules for your organization.
      operationId: listGroupRules
      parameters:
        - default: 50
          description: Specifies the number of rule results in a page
          format: int32
          in: query
          name: limit
          type: integer
        - description: Specifies the pagination cursor for the next page of rules
          in: query
          name: after
          type: string
        - description: Specifies the keyword to search fules for
          in: query
          name: search
          type: string
        - description: 'If specified as `groupIdToGroupNameMap`, then show group names'
          in: query
          name: expand
          type: string
          x-okta-added-version: 1.3.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/GroupRule'
            type: array
      security:
        - api_token: []
      summary: List Group Rules
      tags:
        - Group
    post:
      consumes:
        - application/json
      description: >-
        Creates a group rule to dynamically add users to the specified group if
        they match the condition
      operationId: createGroupRule
      parameters:
        - in: body
          name: groupRule
          required: true
          schema:
            $ref: '#/definitions/GroupRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GroupRule'
      security:
        - api_token: []
      summary: Create Group Rule
      tags:
        - Group
  '/api/v1/groups/rules/{ruleId}':
    delete:
      consumes:
        - application/json
      description: Removes a specific group rule by id from your organization
      operationId: deleteGroupRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: Accepted
      security:
        - api_token: []
      summary: Delete a group Rule
      tags:
        - Group
    get:
      consumes:
        - application/json
      description: Fetches a specific group rule by id from your organization
      operationId: getGroupRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GroupRule'
      security:
        - api_token: []
      summary: Get Group Rule
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: Updates a group rule. Only `INACTIVE` rules can be updated.
      operationId: updateGroupRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
        - in: body
          name: groupRule
          required: true
          schema:
            $ref: '#/definitions/GroupRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GroupRule'
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/rules/{ruleId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates a specific group rule by id from your organization
      operationId: activateGroupRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Activate a group Rule
      tags:
        - Group
  '/api/v1/groups/rules/{ruleId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates a specific group rule by id from your organization
      operationId: deactivateGroupRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Deactivate a group Rule
      tags:
        - Group
  '/api/v1/groups/{groupId}':
    delete:
      consumes:
        - application/json
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: deleteGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Remove Group
      tags:
        - Group
    get:
      consumes:
        - application/json
      description: Lists all group rules for your organization.
      operationId: getGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
      security:
        - api_token: []
      summary: List Group Rules
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: >-
        Updates the profile for a group with `OKTA_GROUP` type from your
        organization.
      operationId: updateGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/Group'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
      security:
        - api_token: []
      summary: Update Group
      tags:
        - Group
  '/api/v1/groups/{groupId}/apps':
    get:
      consumes:
        - application/json
      description: Enumerates all applications that are assigned to a group.
      operationId: listAssignedApplicationsForGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - description: Specifies the pagination cursor for the next page of apps
          in: query
          name: after
          type: string
        - default: 20
          description: Specifies the number of app results for a page
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Application'
            type: array
      security:
        - api_token: []
      summary: List Assigned Applications
      tags:
        - Group
  '/api/v1/groups/{groupId}/roles':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listGroupAssignedRoles
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Role'
            type: array
      security:
        - api_token: []
      tags:
        - Group
    post:
      consumes:
        - application/json
      description: Assigns a Role to a Group
      operationId: assignRoleToGroup
      parameters:
        - in: body
          name: assignRoleRequest
          required: true
          schema:
            $ref: '#/definitions/AssignRoleRequest'
        - in: path
          name: groupId
          required: true
          type: string
        - in: query
          name: disableNotifications
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
        '201':
          description: Success
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/{groupId}/roles/{roleId}':
    delete:
      consumes:
        - application/json
      description: Unassigns a Role from a Group
      operationId: removeRoleFromGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Group
    get:
      consumes:
        - application/json
      description: Success
      operationId: getRole
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Role'
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps':
    get:
      consumes:
        - application/json
      description: >-
        Lists all App targets for an `APP_ADMIN` Role assigned to a Group. This
        methods return list may include full Applications or Instances. The
        response for an instance will have an `ID` value, while Application will
        not have an ID.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/CatalogApplication'
            type: array
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: Success
      operationId: addApplicationTargetToAdminRoleGivenToGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}':
    delete:
      consumes:
        - application/json
      description: Remove App Instance Target to App Administrator Role given to a Group
      operationId: removeApplicationTargetFromAdministratorRoleGivenToGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
        - in: path
          name: applicationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Remove App Instance Target to App Administrator Role given to a Group
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: Add App Instance Target to App Administrator Role given to a Group
      operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
        - in: path
          name: applicationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Add App Instance Target to App Administrator Role given to a Group
      tags:
        - Group
  '/api/v1/groups/{groupId}/roles/{roleId}/targets/groups':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listGroupTargetsForGroupRole
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}':
    delete:
      consumes:
        - application/json
      description: ''
      operationId: removeGroupTargetFromGroupAdministratorRoleGivenToGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: targetGroupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: ''
      operationId: addGroupTargetToGroupAdministratorRoleForGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: targetGroupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/{groupId}/users':
    get:
      consumes:
        - application/json
      description: Enumerates all users that are a member of a group.
      operationId: listGroupUsers
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - description: Specifies the pagination cursor for the next page of users
          in: query
          name: after
          type: string
        - default: 1000
          description: Specifies the number of user results in a page
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
        - api_token: []
      summary: List Group Members
      tags:
        - Group
  '/api/v1/groups/{groupId}/users/{userId}':
    delete:
      consumes:
        - application/json
      description: Removes a user from a group with 'OKTA_GROUP' type.
      operationId: removeUserFromGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Remove User from Group
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: Adds a user to a group with 'OKTA_GROUP' type.
      operationId: addUserToGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Add User to Group
      tags:
        - Group
  /api/v1/idps:
    get:
      consumes:
        - application/json
      description: >-
        Enumerates IdPs in your organization with pagination. A subset of IdPs
        can be returned that match a supported filter expression or query.
      operationId: listIdentityProviders
      parameters:
        - description: Searches the name property of IdPs for matching value
          in: query
          name: q
          type: string
        - description: Specifies the pagination cursor for the next page of IdPs
          in: query
          name: after
          type: string
        - default: 20
          description: Specifies the number of IdP results in a page
          format: int32
          in: query
          name: limit
          type: integer
        - description: Filters IdPs by type
          in: query
          name: type
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/IdentityProvider'
            type: array
      security:
        - api_token: []
      summary: List Identity Providers
      tags:
        - IdentityProvider
    post:
      consumes:
        - application/json
      description: Adds a new IdP to your organization.
      operationId: createIdentityProvider
      parameters:
        - in: body
          name: identityProvider
          required: true
          schema:
            $ref: '#/definitions/IdentityProvider'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IdentityProvider'
      security:
        - api_token: []
      summary: Add Identity Provider
      tags:
        - IdentityProvider
  /api/v1/idps/credentials/keys:
    get:
      consumes:
        - application/json
      description: Enumerates IdP key credentials.
      operationId: listIdentityProviderKeys
      parameters:
        - description: Specifies the pagination cursor for the next page of keys
          in: query
          name: after
          type: string
        - default: 20
          description: Specifies the number of key results in a page
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/JsonWebKey'
            type: array
      security:
        - api_token: []
      summary: List Keys
      tags:
        - IdentityProvider
    post:
      consumes:
        - application/json
      description: Adds a new X.509 certificate credential to the IdP key store.
      operationId: createIdentityProviderKey
      parameters:
        - in: body
          name: jsonWebKey
          required: true
          schema:
            $ref: '#/definitions/JsonWebKey'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Add X.509 Certificate Public Key
      tags:
        - IdentityProvider
  '/api/v1/idps/credentials/keys/{keyId}':
    delete:
      consumes:
        - application/json
      description: >-
        Deletes a specific IdP Key Credential by `kid` if it is not currently
        being used by an Active or Inactive IdP.
      operationId: deleteIdentityProviderKey
      parameters:
        - in: path
          name: keyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Delete Key
      tags:
        - IdentityProvider
    get:
      consumes:
        - application/json
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderKey
      parameters:
        - in: path
          name: keyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Get Key
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}':
    delete:
      consumes:
        - application/json
      description: Removes an IdP from your organization.
      operationId: deleteIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Delete Identity Provider
      tags:
        - IdentityProvider
    get:
      consumes:
        - application/json
      description: Fetches an IdP by `id`.
      operationId: getIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IdentityProvider'
      security:
        - api_token: []
      summary: Get Identity Provider
      tags:
        - IdentityProvider
    put:
      consumes:
        - application/json
      description: Updates the configuration for an IdP.
      operationId: updateIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: body
          name: identityProvider
          required: true
          schema:
            $ref: '#/definitions/IdentityProvider'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IdentityProvider'
      security:
        - api_token: []
      summary: Update Identity Provider
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/credentials/csrs':
    get:
      consumes:
        - application/json
      description: Enumerates Certificate Signing Requests for an IdP
      operationId: listCsrsForIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Csr'
            type: array
      security:
        - api_token: []
      summary: List Certificate Signing Requests for IdP
      tags:
        - IdentityProvider
    post:
      consumes:
        - application/json
      description: >-
        Generates a new key pair and returns a Certificate Signing Request for
        it.
      operationId: generateCsrForIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: body
          name: metadata
          required: true
          schema:
            $ref: '#/definitions/CsrMetadata'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Csr'
      security:
        - api_token: []
      summary: Generate Certificate Signing Request for IdP
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/credentials/csrs/{csrId}':
    delete:
      consumes:
        - application/json
      description: >-
        Revoke a Certificate Signing Request and delete the key pair from the
        IdP
      operationId: revokeCsrForIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: csrId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - IdentityProvider
    get:
      consumes:
        - application/json
      description: Gets a specific Certificate Signing Request model by id
      operationId: getCsrForIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: csrId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Csr'
      security:
        - api_token: []
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish':
    post:
      consumes:
        - application/json
      description: >-
        Update the Certificate Signing Request with a signed X.509 certificate
        and add it into the signing key credentials for the IdP.
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: csrId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      tags:
        - IdentityProvider
      x-okta-multi-operation:
        - consumes:
            - application/x-x509-ca-cert
          encoding: base64
          operationId: publishCerCertForIdentityProvider
          parameters:
            - in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/x-x509-ca-cert
          operationId: publishBinaryCerCertForIdentityProvider
          parameters:
            - format: binary
              in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/pkix-cert
          encoding: base64
          operationId: publishDerCertForIdentityProvider
          parameters:
            - in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/pkix-cert
          operationId: publishBinaryDerCertForIdentityProvider
          parameters:
            - format: binary
              in: body
              name: certificate
              required: true
              type: string
        - consumes:
            - application/x-pem-file
          operationId: publishBinaryPemCertForIdentityProvider
          parameters:
            - format: binary
              in: body
              name: certificate
              required: true
              type: string
  '/api/v1/idps/{idpId}/credentials/keys':
    get:
      consumes:
        - application/json
      description: Enumerates signing key credentials for an IdP
      operationId: listIdentityProviderSigningKeys
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/JsonWebKey'
            type: array
      security:
        - api_token: []
      summary: List Signing Key Credentials for IdP
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/credentials/keys/generate':
    post:
      consumes:
        - application/json
      description: >-
        Generates a new X.509 certificate for an IdP signing key credential to
        be used for signing assertions sent to the IdP
      operationId: generateIdentityProviderSigningKey
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - description: expiry of the IdP Key Credential
          format: int32
          in: query
          name: validityYears
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Generate New IdP Signing Key Credential
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/credentials/keys/{keyId}':
    get:
      consumes:
        - application/json
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderSigningKey
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Get Signing Key Credential for IdP
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/credentials/keys/{keyId}/clone':
    post:
      consumes:
        - application/json
      description: >-
        Clones a X.509 certificate for an IdP signing key credential from a
        source IdP to target IdP
      operationId: cloneIdentityProviderKey
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
        - in: query
          name: targetIdpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Clone Signing Key Credential for IdP
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates an inactive IdP.
      operationId: activateIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IdentityProvider'
      security:
        - api_token: []
      summary: Activate Identity Provider
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates an active IdP.
      operationId: deactivateIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IdentityProvider'
      security:
        - api_token: []
      summary: Deactivate Identity Provider
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/users':
    get:
      consumes:
        - application/json
      description: Find all the users linked to an identity provider
      operationId: listIdentityProviderApplicationUsers
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/IdentityProviderApplicationUser'
            type: array
      security:
        - api_token: []
      summary: Find Users
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/users/{userId}':
    delete:
      consumes:
        - application/json
      description: Removes the link between the Okta user and the IdP user.
      operationId: unlinkUserFromIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Unlink User from IdP
      tags:
        - IdentityProvider
    get:
      consumes:
        - application/json
      description: Fetches a linked IdP user by ID
      operationId: getIdentityProviderApplicationUser
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IdentityProviderApplicationUser'
      security:
        - api_token: []
      tags:
        - IdentityProvider
    post:
      consumes:
        - application/json
      description: >-
        Links an Okta user to an existing Social Identity Provider. This does
        not support the SAML2 Identity Provider Type
      operationId: linkUserToIdentityProvider
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - in: body
          name: userIdentityProviderLinkRequest
          required: true
          schema:
            $ref: '#/definitions/UserIdentityProviderLinkRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/IdentityProviderApplicationUser'
      security:
        - api_token: []
      summary: Link a user to a Social IdP without a transaction
      tags:
        - IdentityProvider
  '/api/v1/idps/{idpId}/users/{userId}/credentials/tokens':
    get:
      consumes:
        - application/json
      description: >-
        Fetches the tokens minted by the Social Authentication Provider when the
        user authenticates with Okta via Social Auth.
      operationId: listSocialAuthTokens
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/SocialAuthToken'
            type: array
      security:
        - api_token: []
      summary: Social Authentication Token Operation
      tags:
        - IdentityProvider
  /api/v1/inlineHooks:
    get:
      consumes:
        - application/json
      description: Success
      operationId: listInlineHooks
      parameters:
        - in: query
          name: type
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/InlineHook'
            type: array
      security:
        - api_token: []
      tags:
        - InlineHook
    post:
      consumes:
        - application/json
      description: Success
      operationId: createInlineHook
      parameters:
        - in: body
          name: inlineHook
          required: true
          schema:
            $ref: '#/definitions/InlineHook'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InlineHook'
      security:
        - api_token: []
      tags:
        - InlineHook
  '/api/v1/inlineHooks/{inlineHookId}':
    delete:
      consumes:
        - application/json
      description: >-
        Deletes the Inline Hook matching the provided id. Once deleted, the
        Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks
        with a status of INACTIVE are eligible for deletion.
      operationId: deleteInlineHook
      parameters:
        - in: path
          name: inlineHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - InlineHook
    get:
      consumes:
        - application/json
      description: Gets an inline hook by ID
      operationId: getInlineHook
      parameters:
        - in: path
          name: inlineHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InlineHook'
      security:
        - api_token: []
      tags:
        - InlineHook
    put:
      consumes:
        - application/json
      description: Updates an inline hook by ID
      operationId: updateInlineHook
      parameters:
        - in: path
          name: inlineHookId
          required: true
          type: string
        - in: body
          name: inlineHook
          required: true
          schema:
            $ref: '#/definitions/InlineHook'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InlineHook'
      security:
        - api_token: []
      tags:
        - InlineHook
  '/api/v1/inlineHooks/{inlineHookId}/execute':
    post:
      consumes:
        - application/json
      description: >-
        Executes the Inline Hook matching the provided inlineHookId using the
        request body as the input. This will send the provided data through the
        Channel and return a response if it matches the correct data contract.
        This execution endpoint should only be used for testing purposes.
      operationId: executeInlineHook
      parameters:
        - in: path
          name: inlineHookId
          required: true
          type: string
        - in: body
          name: payloadData
          required: true
          schema:
            $ref: '#/definitions/InlineHookPayload'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InlineHookResponse'
      security:
        - api_token: []
      tags:
        - InlineHook
  '/api/v1/inlineHooks/{inlineHookId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates the Inline Hook matching the provided id
      operationId: activateInlineHook
      parameters:
        - in: path
          name: inlineHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InlineHook'
      security:
        - api_token: []
      tags:
        - InlineHook
  '/api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates the Inline Hook matching the provided id
      operationId: deactivateInlineHook
      parameters:
        - in: path
          name: inlineHookId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InlineHook'
      security:
        - api_token: []
      tags:
        - InlineHook
  /api/v1/logs:
    get:
      consumes:
        - application/json
      description: >-
        The Okta System Log API provides read access to your organization’s
        system log. This API provides more functionality than the Events API
      operationId: getLogs
      parameters:
        - format: date-time
          in: query
          name: since
          type: string
        - format: date-time
          in: query
          name: until
          type: string
        - in: query
          name: filter
          type: string
        - in: query
          name: q
          type: string
        - default: 100
          in: query
          name: limit
          type: integer
        - default: ASCENDING
          in: query
          name: sortOrder
          type: string
        - in: query
          name: after
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/LogEvent'
            type: array
      security:
        - api_token: []
      summary: Fetch a list of events from your Okta organization system log.
      tags:
        - Log
  /api/v1/meta/schemas/user/linkedObjects:
    get:
      consumes:
        - application/json
      description: Success
      operationId: listLinkedObjectDefinitions
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/LinkedObject'
            type: array
      security:
        - api_token: []
      tags:
        - LinkedObject
    post:
      consumes:
        - application/json
      description: Success
      operationId: addLinkedObjectDefinition
      parameters:
        - in: body
          name: linkedObject
          required: true
          schema:
            $ref: '#/definitions/LinkedObject'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/LinkedObject'
      security:
        - api_token: []
      tags:
        - LinkedObject
  '/api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: deleteLinkedObjectDefinition
      parameters:
        - in: path
          name: linkedObjectName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - LinkedObject
    get:
      consumes:
        - application/json
      description: Success
      operationId: getLinkedObjectDefinition
      parameters:
        - in: path
          name: linkedObjectName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LinkedObject'
      security:
        - api_token: []
      tags:
        - LinkedObject
  /api/v1/meta/types/user:
    get:
      consumes:
        - application/json
      description: Fetches all User Types in your org
      operationId: listUserTypes
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/UserType'
            type: array
      security:
        - api_token: []
      tags:
        - UserType
    post:
      consumes:
        - application/json
      description: >-
        Creates a new User Type. A default User Type is automatically created
        along with your org, and you may add another 9 User Types for a maximum
        of 10.
      operationId: createUserType
      parameters:
        - in: body
          name: userType
          required: true
          schema:
            $ref: '#/definitions/UserType'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserType'
      security:
        - api_token: []
      tags:
        - UserType
  '/api/v1/meta/types/user/{typeId}':
    delete:
      consumes:
        - application/json
      description: >-
        Deletes a User Type permanently. This operation is not permitted for the
        default type, nor for any User Type that has existing users
      operationId: deleteUserType
      parameters:
        - in: path
          name: typeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - UserType
    get:
      consumes:
        - application/json
      description: >-
        Fetches a User Type by ID. The special identifier `default` may be used
        to fetch the default User Type.
      operationId: getUserType
      parameters:
        - in: path
          name: typeId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserType'
      security:
        - api_token: []
      tags:
        - UserType
    post:
      consumes:
        - application/json
      description: Updates an existing User Type
      operationId: updateUserType
      parameters:
        - in: path
          name: typeId
          required: true
          type: string
        - in: body
          name: userType
          required: true
          schema:
            $ref: '#/definitions/UserType'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserType'
      security:
        - api_token: []
      tags:
        - UserType
    put:
      consumes:
        - application/json
      description: Replace an existing User Type
      operationId: replaceUserType
      parameters:
        - in: path
          name: typeId
          required: true
          type: string
        - in: body
          name: userType
          required: true
          schema:
            $ref: '#/definitions/UserType'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserType'
      security:
        - api_token: []
      tags:
        - UserType
  /api/v1/policies:
    get:
      consumes:
        - application/json
      description: Gets all policies with the specified type.
      operationId: listPolicies
      parameters:
        - in: query
          name: type
          required: true
          type: string
        - in: query
          name: status
          type: string
        - default: ''
          in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AuthorizationServerPolicy'
            type: array
      security:
        - api_token: []
      tags:
        - Policy
    post:
      consumes:
        - application/json
      description: Creates a policy.
      operationId: createPolicy
      parameters:
        - in: body
          name: policy
          required: true
          schema:
            $ref: '#/definitions/Policy'
        - default: true
          in: query
          name: activate
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Policy'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}':
    delete:
      consumes:
        - application/json
      description: Removes a policy.
      operationId: deletePolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
    get:
      consumes:
        - application/json
      description: Gets a policy.
      operationId: getPolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - default: ''
          in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Policy'
      security:
        - api_token: []
      tags:
        - Policy
    put:
      consumes:
        - application/json
      description: Updates a policy.
      operationId: updatePolicy
      parameters:
        - in: body
          name: policy
          required: true
          schema:
            $ref: '#/definitions/Policy'
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Policy'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates a policy.
      operationId: activatePolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates a policy.
      operationId: deactivatePolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules':
    get:
      consumes:
        - application/json
      description: Enumerates all policy rules.
      operationId: listPolicyRules
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/PolicyRule'
            type: array
      security:
        - api_token: []
      tags:
        - Policy
    post:
      consumes:
        - application/json
      description: Creates a policy rule.
      operationId: createPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: body
          name: policyRule
          required: true
          schema:
            $ref: '#/definitions/PolicyRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PolicyRule'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules/{ruleId}':
    delete:
      consumes:
        - application/json
      description: Removes a policy rule.
      operationId: deletePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Policy
    get:
      consumes:
        - application/json
      description: Gets a policy rule.
      operationId: getPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PolicyRule'
      security:
        - api_token: []
      tags:
        - Policy
    put:
      consumes:
        - application/json
      description: Updates a policy rule.
      operationId: updatePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
        - in: body
          name: policyRule
          required: true
          schema:
            $ref: '#/definitions/PolicyRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PolicyRule'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates a policy rule.
      operationId: activatePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates a policy rule.
      operationId: deactivatePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - Policy
  /api/v1/sessions:
    post:
      consumes:
        - application/json
      description: >-
        Creates a new session for a user with a valid session token. Use this
        API if, for example, you want to set the session cookie yourself instead
        of allowing Okta to set it, or want to hold the session ID in order to
        delete a session via the API instead of visiting the logout URL.
      operationId: createSession
      parameters:
        - in: body
          name: createSessionRequest
          required: true
          schema:
            $ref: '#/definitions/CreateSessionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Session'
      security:
        - api_token: []
      summary: Create Session with Session Token
      tags:
        - Session
  '/api/v1/sessions/{sessionId}':
    delete:
      consumes:
        - application/json
      description: ''
      operationId: endSession
      parameters:
        - in: path
          name: sessionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Close Session
      tags:
        - Session
    get:
      consumes:
        - application/json
      description: Get details about a session.
      operationId: getSession
      parameters:
        - in: path
          name: sessionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Session'
      security:
        - api_token: []
      tags:
        - Session
  '/api/v1/sessions/{sessionId}/lifecycle/refresh':
    post:
      consumes:
        - application/json
      description: ''
      operationId: refreshSession
      parameters:
        - in: path
          name: sessionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Session'
      security:
        - api_token: []
      summary: Refresh Session
      tags:
        - Session
  /api/v1/templates/sms:
    get:
      consumes:
        - application/json
      description: >-
        Enumerates custom SMS templates in your organization. A subset of
        templates can be returned that match a template type.
      operationId: listSmsTemplates
      parameters:
        - in: query
          name: templateType
          type: string
          x-openapi-v3-schema-ref: '#/definitions/SmsTemplateType'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/SmsTemplate'
            type: array
      security:
        - api_token: []
      summary: List SMS Templates
      tags:
        - Template
    post:
      consumes:
        - application/json
      description: Adds a new custom SMS template to your organization.
      operationId: createSmsTemplate
      parameters:
        - in: body
          name: smsTemplate
          required: true
          schema:
            $ref: '#/definitions/SmsTemplate'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SmsTemplate'
      security:
        - api_token: []
      summary: Add SMS Template
      tags:
        - Template
  '/api/v1/templates/sms/{templateId}':
    delete:
      consumes:
        - application/json
      description: Removes an SMS template.
      operationId: deleteSmsTemplate
      parameters:
        - in: path
          name: templateId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Remove SMS Template
      tags:
        - Template
    get:
      consumes:
        - application/json
      description: Fetches a specific template by `id`
      operationId: getSmsTemplate
      parameters:
        - in: path
          name: templateId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SmsTemplate'
      security:
        - api_token: []
      summary: Get SMS Template
      tags:
        - Template
    post:
      consumes:
        - application/json
      description: 'Updates only some of the SMS template properties:'
      operationId: partialUpdateSmsTemplate
      parameters:
        - in: path
          name: templateId
          required: true
          type: string
        - in: body
          name: smsTemplate
          required: true
          schema:
            $ref: '#/definitions/SmsTemplate'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SmsTemplate'
      security:
        - api_token: []
      summary: Partial SMS Template Update
      tags:
        - Template
    put:
      consumes:
        - application/json
      description: Updates the SMS template.
      operationId: updateSmsTemplate
      parameters:
        - in: path
          name: templateId
          required: true
          type: string
        - in: body
          name: smsTemplate
          required: true
          schema:
            $ref: '#/definitions/SmsTemplate'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SmsTemplate'
      security:
        - api_token: []
      summary: Update SMS Template
      tags:
        - Template
  /api/v1/trustedOrigins:
    get:
      consumes:
        - application/json
      description: Success
      operationId: listOrigins
      parameters:
        - in: query
          name: q
          type: string
        - in: query
          name: filter
          type: string
        - in: query
          name: after
          type: string
        - default: -1
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/TrustedOrigin'
            type: array
      security:
        - api_token: []
      tags:
        - TrustedOrigin
    post:
      consumes:
        - application/json
      description: Success
      operationId: createOrigin
      parameters:
        - in: body
          name: trustedOrigin
          required: true
          schema:
            $ref: '#/definitions/TrustedOrigin'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TrustedOrigin'
      security:
        - api_token: []
      tags:
        - TrustedOrigin
  '/api/v1/trustedOrigins/{trustedOriginId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: deleteOrigin
      parameters:
        - in: path
          name: trustedOriginId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - TrustedOrigin
    get:
      consumes:
        - application/json
      description: Success
      operationId: getOrigin
      parameters:
        - in: path
          name: trustedOriginId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TrustedOrigin'
      security:
        - api_token: []
      tags:
        - TrustedOrigin
    put:
      consumes:
        - application/json
      description: Success
      operationId: updateOrigin
      parameters:
        - in: path
          name: trustedOriginId
          required: true
          type: string
        - in: body
          name: trustedOrigin
          required: true
          schema:
            $ref: '#/definitions/TrustedOrigin'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TrustedOrigin'
      security:
        - api_token: []
      tags:
        - TrustedOrigin
  '/api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Success
      operationId: activateOrigin
      parameters:
        - in: path
          name: trustedOriginId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TrustedOrigin'
      security:
        - api_token: []
      tags:
        - TrustedOrigin
  '/api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Success
      operationId: deactivateOrigin
      parameters:
        - in: path
          name: trustedOriginId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TrustedOrigin'
      security:
        - api_token: []
      tags:
        - TrustedOrigin
  /api/v1/users:
    get:
      consumes:
        - application/json
      description: >-
        Lists users in your organization with pagination in most cases.  A
        subset of users can be returned that match a supported filter expression
        or search criteria.
      operationId: listUsers
      parameters:
        - description: 'Finds a user that matches firstName, lastName, and email properties'
          in: query
          name: q
          type: string
        - description: Specifies the pagination cursor for the next page of users
          in: query
          name: after
          type: string
        - default: 10
          description: Specifies the number of results returned
          format: int32
          in: query
          name: limit
          type: integer
        - description: Filters users with a supported expression for a subset of properties
          in: query
          name: filter
          type: string
        - description: >-
            Searches for users with a supported filtering  expression for most
            properties
          in: query
          name: search
          type: string
        - in: query
          name: sortBy
          type: string
        - in: query
          name: sortOrder
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
        - api_token: []
      summary: List Users
      tags:
        - User
    post:
      consumes:
        - application/json
      description: >-
        Creates a new user in your Okta organization with or without
        credentials.
      operationId: createUser
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
        - default: true
          description: Executes activation lifecycle operation when creating the user
          in: query
          name: activate
          type: boolean
        - default: false
          description: >-
            Indicates whether to create a user with a specified authentication
            provider
          in: query
          name: provider
          type: boolean
        - default: ''
          description: >-
            With activate=true, set nextLogin to "changePassword" to have the
            password be EXPIRED, so user must change it the next time they log
            in.
          in: query
          name: nextLogin
          type: string
          x-okta-added-version: 0.14.0
          x-openapi-v3-schema-ref: '#/definitions/UserNextLogin'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      summary: Create User
      tags:
        - User
  '/api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}':
    put:
      consumes:
        - application/json
      operationId: setLinkedObjectForUser
      parameters:
        - in: path
          name: associatedUserId
          required: true
          type: string
        - in: path
          name: primaryRelationshipName
          required: true
          type: string
        - in: path
          name: primaryUserId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}':
    delete:
      consumes:
        - application/json
      description: >-
        Deletes a user permanently.  This operation can only be performed on
        users that have a `DEPROVISIONED` status.  **This action cannot be
        recovered!**
      operationId: deactivateOrDeleteUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          in: query
          name: sendEmail
          type: boolean
          x-okta-added-version: 1.5.0
      produces:
        - application/json
      responses:
        '202':
          description: ACCEPTED
      security:
        - api_token: []
      summary: Delete User
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Fetches a user from your Okta organization.
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      summary: Get User
      tags:
        - User
    post:
      consumes:
        - application/json
      description: >-
        Fetch a user by `id`, `login`, or `login shortname` if the short name is
        unambiguous.
      operationId: partialUpdateUser
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: strict
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      tags:
        - User
    put:
      consumes:
        - application/json
      description: >-
        Update a user's profile and/or credentials using strict-update
        semantics.
      operationId: updateUser
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: strict
          type: boolean
          x-okta-added-version: 1.10.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      summary: Update User
      tags:
        - User
  '/api/v1/users/{userId}/appLinks':
    get:
      consumes:
        - application/json
      description: >-
        Fetches appLinks for all direct or indirect (via group membership)
        assigned applications.
      operationId: listAppLinks
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AppLink'
            type: array
      security:
        - api_token: []
      summary: Get Assigned App Links
      tags:
        - User
  '/api/v1/users/{userId}/clients':
    get:
      consumes:
        - application/json
      description: >-
        Lists all client resources for which the specified user has grants or
        tokens.
      operationId: listUserClients
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2Client'
            type: array
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/clients/{clientId}/grants':
    delete:
      consumes:
        - application/json
      description: Revokes all grants for the specified user and client
      operationId: revokeGrantsForUserAndClient
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Lists all grants for a specified user and client
      operationId: listGrantsForUserAndClient
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: query
          name: expand
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2ScopeConsentGrant'
            type: array
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/clients/{clientId}/tokens':
    delete:
      consumes:
        - application/json
      description: Revokes all refresh tokens issued for the specified User and Client.
      operationId: revokeTokensForUserAndClient
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Lists all refresh tokens issued for the specified User and Client.
      operationId: listRefreshTokensForUserAndClient
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: query
          name: expand
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2RefreshToken'
            type: array
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}':
    delete:
      consumes:
        - application/json
      description: Revokes the specified refresh token.
      operationId: revokeTokenForUserAndClient
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Gets a refresh token issued for the specified User and Client.
      operationId: getRefreshTokenForUserAndClient
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: path
          name: tokenId
          required: true
          type: string
        - in: query
          name: expand
          type: string
        - default: 20
          in: query
          name: limit
          type: integer
        - in: query
          name: after
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2RefreshToken'
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/credentials/change_password':
    post:
      consumes:
        - application/json
      description: >-
        Changes a user's password by validating the user's current password.
        This operation can only be performed on users in `STAGED`, `ACTIVE`,
        `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid password
        credential
      operationId: changePassword
      parameters:
        - in: body
          name: changePasswordRequest
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordRequest'
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: strict
          type: boolean
          x-okta-added-version: 1.10.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserCredentials'
      security:
        - api_token: []
      summary: Change Password
      tags:
        - User
  '/api/v1/users/{userId}/credentials/change_recovery_question':
    post:
      consumes:
        - application/json
      description: >-
        Changes a user's recovery question & answer credential by validating the
        user's current password.  This operation can only be performed on users
        in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid
        password credential
      operationId: changeRecoveryQuestion
      parameters:
        - in: body
          name: userCredentials
          required: true
          schema:
            $ref: '#/definitions/UserCredentials'
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserCredentials'
      security:
        - api_token: []
      summary: Change Recovery Question
      tags:
        - User
  '/api/v1/users/{userId}/credentials/forgot_password':
    post:
      consumes:
        - application/json
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForgotPasswordResponse'
      security:
        - api_token: []
      summary: Forgot Password
      tags:
        - User
      x-okta-multi-operation:
        - description: >-
            Generates a one-time token (OTT) that can be used to reset a user's
            password
          operationId: forgotPasswordGenerateOneTimeToken
          parameters:
            - default: true
              in: query
              name: sendEmail
              type: boolean
        - description: >-
            Sets a new password for a user by validating the user's answer to
            their current recovery question
          operationId: forgotPasswordSetNewPassword
          parameters:
            - in: body
              name: user
              required: true
              schema:
                $ref: '#/definitions/UserCredentials'
            - default: true
              in: query
              name: sendEmail
              type: boolean
  '/api/v1/users/{userId}/factors':
    get:
      consumes:
        - application/json
      description: Enumerates all the enrolled factors for the specified user
      operationId: listFactors
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/UserFactor'
            type: array
      security:
        - api_token: []
      tags:
        - UserFactor
    post:
      consumes:
        - application/json
      description: Enrolls a user with a supported factor.
      operationId: enrollFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - description: Factor
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserFactor'
        - default: false
          in: query
          name: updatePhone
          type: boolean
        - description: id of SMS template (only for SMS factor)
          in: query
          name: templateId
          type: string
        - default: 300
          format: int32
          in: query
          name: tokenLifetimeSeconds
          type: integer
          x-okta-added-version: 1.3.0
        - default: false
          in: query
          name: activate
          type: boolean
          x-okta-added-version: 1.3.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserFactor'
      security:
        - api_token: []
      summary: Enroll Factor
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/catalog':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all the supported factors that can be enrolled for the
        specified user
      operationId: listSupportedFactors
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/UserFactor'
            type: array
      security:
        - api_token: []
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/questions':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all available security questions for a user's `question`
        factor
      operationId: listSupportedSecurityQuestions
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/SecurityQuestion'
            type: array
      security:
        - api_token: []
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/{factorId}':
    delete:
      consumes:
        - application/json
      description: >-
        Unenrolls an existing factor for the specified user, allowing the user
        to enroll a new factor.
      operationId: deleteFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - UserFactor
    get:
      consumes:
        - application/json
      description: Fetches a factor for the specified user
      operationId: getFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserFactor'
      security:
        - api_token: []
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/{factorId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: >-
        The `sms` and `token:software:totp` factor types require activation to
        complete the enrollment process.
      operationId: activateFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ActivateFactorRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserFactor'
      security:
        - api_token: []
      summary: Activate Factor
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}':
    get:
      consumes:
        - application/json
      description: Polls factors verification transaction for status.
      operationId: getFactorTransactionStatus
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
        - in: path
          name: transactionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VerifyUserFactorResponse'
      security:
        - api_token: []
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/{factorId}/verify':
    post:
      consumes:
        - application/json
      description: 'Verifies an OTP for a `token` or `token:hardware` factor'
      operationId: verifyFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
        - in: query
          name: templateId
          type: string
        - default: 300
          format: int32
          in: query
          name: tokenLifetimeSeconds
          type: integer
          x-okta-added-version: 1.3.0
        - in: body
          name: body
          schema:
            $ref: '#/definitions/VerifyFactorRequest'
        - in: header
          name: X-Forwarded-For
          type: string
          x-okta-added-version: 1.11.0
        - in: header
          name: User-Agent
          type: string
          x-okta-added-version: 1.11.0
        - in: header
          name: Accept-Language
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VerifyUserFactorResponse'
      security:
        - api_token: []
      summary: Verify MFA Factor
      tags:
        - UserFactor
  '/api/v1/users/{userId}/grants':
    delete:
      consumes:
        - application/json
      description: Revokes all grants for a specified user
      operationId: revokeUserGrants
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Lists all grants for the specified user
      operationId: listUserGrants
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: scopeId
          type: string
        - in: query
          name: expand
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/OAuth2ScopeConsentGrant'
            type: array
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/grants/{grantId}':
    delete:
      consumes:
        - application/json
      description: Revokes one grant for a specified user
      operationId: revokeUserGrant
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: grantId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Gets a grant for the specified user
      operationId: getUserGrant
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: grantId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OAuth2ScopeConsentGrant'
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/groups':
    get:
      consumes:
        - application/json
      description: Fetches the groups of which the user is a member.
      operationId: listUserGroups
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_token: []
      summary: Get Member Groups
      tags:
        - User
  '/api/v1/users/{userId}/idps':
    get:
      consumes:
        - application/json
      description: Lists the IdPs associated with the user.
      operationId: listUserIdentityProviders
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/IdentityProvider'
            type: array
      security:
        - api_token: []
      summary: Listing IdPs associated with a user
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: >-
        Activates a user.  This operation can only be performed on users with a
        `STAGED` status.  Activation of a user is an asynchronous operation. The
        user will have the `transitioningToStatus` property with a value of
        `ACTIVE` during activation to indicate that the user hasn't completed
        the asynchronous operation.  The user will have a status of `ACTIVE`
        when the activation process is complete.
      operationId: activateUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: true
          description: Sends an activation email to the user if true
          in: query
          name: sendEmail
          required: true
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserActivationToken'
      security:
        - api_token: []
      summary: Activate User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: >-
        Deactivates a user.  This operation can only be performed on users that
        do not have a `DEPROVISIONED` status.  Deactivation of a user is an
        asynchronous operation.  The user will have the `transitioningToStatus`
        property with a value of `DEPROVISIONED` during deactivation to indicate
        that the user hasn't completed the asynchronous operation.  The user
        will have a status of `DEPROVISIONED` when the deactivation process is
        complete.
      operationId: deactivateUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          in: query
          name: sendEmail
          type: boolean
          x-okta-added-version: 1.5.0
      produces:
        - application/json
      responses:
        '200':
          description: OK
      security:
        - api_token: []
      summary: Deactivate User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/expire_password?tempPassword=false':
    post:
      consumes:
        - application/json
      description: >-
        This operation transitions the user to the status of `PASSWORD_EXPIRED`
        so that the user is required to change their password at their next
        login.
      operationId: expirePassword
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      summary: Expire Password
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/expire_password?tempPassword=true':
    post:
      consumes:
        - application/json
      description: >-
        This operation transitions the user to the status of `PASSWORD_EXPIRED`
        and the user's password is reset to a temporary password that is
        returned.
      operationId: expirePasswordAndGetTemporaryPassword
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TempPassword'
      security:
        - api_token: []
      summary: Expire Password
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/reactivate':
    post:
      consumes:
        - application/json
      description: >-
        Reactivates a user.  This operation can only be performed on users with
        a `PROVISIONED` status.  This operation restarts the activation workflow
        if for some reason the user activation was not completed when using the
        activationToken from [Activate User](#activate-user).
      operationId: reactivateUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          description: Sends an activation email to the user if true
          in: query
          name: sendEmail
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserActivationToken'
      security:
        - api_token: []
      summary: Reactivate User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/reset_factors':
    post:
      consumes:
        - application/json
      description: >-
        This operation resets all factors for the specified user. All MFA factor
        enrollments returned to the unenrolled state. The user's status remains
        ACTIVE. This link is present only if the user is currently enrolled in
        one or more MFA factors.
      operationId: resetFactors
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
      security:
        - api_token: []
      summary: Reset Factors
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/reset_password':
    post:
      consumes:
        - application/json
      description: >-
        Generates a one-time token (OTT) that can be used to reset a user's
        password.  The OTT link can be automatically emailed to the user or
        returned to the API caller and distributed using a custom flow.
      operationId: resetPassword
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: sendEmail
          required: true
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetPasswordToken'
      security:
        - api_token: []
      summary: Reset Password
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/suspend':
    post:
      consumes:
        - application/json
      description: >-
        Suspends a user.  This operation can only be performed on users with an
        `ACTIVE` status.  The user will have a status of `SUSPENDED` when the
        process is complete.
      operationId: suspendUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
      security:
        - api_token: []
      summary: Suspend User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/unlock':
    post:
      consumes:
        - application/json
      description: >-
        Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`
        status.  Users will be able to login with their current password.
      operationId: unlockUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Unlock User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/unsuspend':
    post:
      consumes:
        - application/json
      description: >-
        Unsuspends a user and returns them to the `ACTIVE` state.  This
        operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Unsuspend User
      tags:
        - User
  '/api/v1/users/{userId}/linkedObjects/{relationshipName}':
    delete:
      consumes:
        - application/json
      description: >-
        Delete linked objects for a user, relationshipName can be ONLY a primary
        relationship name
      operationId: removeLinkedObjectForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: relationshipName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    get:
      consumes:
        - application/json
      description: >-
        Get linked objects for a user, relationshipName can be a primary or
        associated relationship name
      operationId: getLinkedObjectsForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: relationshipName
          required: true
          type: string
        - in: query
          name: after
          type: string
        - default: -1
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/ResponseLinks'
            type: array
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles':
    get:
      consumes:
        - application/json
      description: Lists all roles assigned to a user.
      operationId: listAssignedRolesForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Role'
            type: array
      security:
        - api_token: []
      tags:
        - User
    post:
      consumes:
        - application/json
      description: Assigns a role to a user.
      operationId: assignRoleToUser
      parameters:
        - in: body
          name: assignRoleRequest
          required: true
          schema:
            $ref: '#/definitions/AssignRoleRequest'
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: disableNotifications
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Role'
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}':
    delete:
      consumes:
        - application/json
      description: Unassigns a role from a user.
      operationId: removeRoleFromUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps':
    get:
      consumes:
        - application/json
      description: >-
        Lists all App targets for an `APP_ADMIN` Role assigned to a User. This
        methods return list may include full Applications or Instances. The
        response for an instance will have an `ID` value, while Application will
        not have an ID.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/CatalogApplication'
            type: array
      security:
        - api_token: []
      tags:
        - User
    put:
      consumes:
        - application/json
      description: Success
      operationId: addAllAppsAsTargetToRole
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    put:
      consumes:
        - application/json
      description: Success
      operationId: addApplicationTargetToAdminRoleForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}':
    delete:
      consumes:
        - application/json
      description: Remove App Instance Target to App Administrator Role given to a User
      operationId: removeApplicationTargetFromAdministratorRoleForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
        - in: path
          name: applicationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Remove App Instance Target to App Administrator Role given to a User
      tags:
        - User
    put:
      consumes:
        - application/json
      description: Add App Instance Target to App Administrator Role given to a User
      operationId: addApplicationTargetToAppAdminRoleForUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: appName
          required: true
          type: string
        - in: path
          name: applicationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      summary: Add App Instance Target to App Administrator Role given to a User
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}/targets/groups':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listGroupTargetsForRole
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: query
          name: after
          type: string
        - default: 20
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: removeGroupTargetFromRole
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
    put:
      consumes:
        - application/json
      description: Success
      operationId: addGroupTargetToRole
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/sessions':
    delete:
      consumes:
        - application/json
      description: >-
        Removes all active identity provider sessions. This forces the user to
        authenticate on the next operation. Optionally revokes OpenID Connect
        and OAuth refresh and access tokens issued to the user.
      operationId: clearUserSessions
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          description: Revoke issued OpenID Connect and OAuth refresh and access tokens
          in: query
          name: oauthTokens
          type: boolean
      produces:
        - application/json
      responses:
        '204':
          description: No Content
      security:
        - api_token: []
      tags:
        - User
definitions:
  AcsEndpoint:
    properties:
      index:
        type: integer
      url:
        type: string
    x-okta-tags:
      - Application
  ActivateFactorRequest:
    properties:
      attestation:
        type: string
      clientData:
        type: string
      passCode:
        type: string
      registrationData:
        type: string
      stateToken:
        type: string
    x-okta-tags:
      - UserFactor
  AppAndInstanceConditionEvaluatorAppOrInstance:
    properties:
      id:
        readOnly: true
        type: string
      name:
        type: string
      type:
        enum:
          - APP_TYPE
          - APP
        type: string
    type: object
    x-okta-tags:
      - Policy
  AppAndInstancePolicyRuleCondition:
    properties:
      exclude:
        items:
          $ref: '#/definitions/AppAndInstanceConditionEvaluatorAppOrInstance'
        type: array
      include:
        items:
          $ref: '#/definitions/AppAndInstanceConditionEvaluatorAppOrInstance'
        type: array
    type: object
    x-okta-tags:
      - Policy
  AppInstancePolicyRuleCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  AppLink:
    properties:
      appAssignmentId:
        readOnly: true
        type: string
      appInstanceId:
        readOnly: true
        type: string
      appName:
        readOnly: true
        type: string
      credentialsSetup:
        readOnly: true
        type: boolean
      hidden:
        readOnly: true
        type: boolean
      id:
        readOnly: true
        type: string
      label:
        readOnly: true
        type: string
      linkUrl:
        readOnly: true
        type: string
      logoUrl:
        readOnly: true
        type: string
      sortOrder:
        readOnly: true
        type: integer
    type: object
    x-okta-tags:
      - User
  AppUser:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/AppUserCredentials'
      externalId:
        readOnly: true
        type: string
      id:
        type: string
      lastSync:
        format: date-time
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      passwordChanged:
        format: date-time
        readOnly: true
        type: string
      profile:
        additionalProperties:
          type: object
        type: object
      scope:
        type: string
      status:
        readOnly: true
        type: string
      statusChanged:
        format: date-time
        readOnly: true
        type: string
      syncState:
        readOnly: true
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: appId
            parentSrc: appId
          - dest: userId
            src: id
          - dest: appUser
            self: true
        operationId: updateApplicationUser
      - alias: delete
        arguments:
          - dest: appId
            parentSrc: appId
          - dest: userId
            src: id
        operationId: deleteApplicationUser
    x-okta-tags:
      - Application
  AppUserCredentials:
    properties:
      password:
        $ref: '#/definitions/AppUserPasswordCredential'
      userName:
        type: string
    type: object
    x-okta-tags:
      - Application
  AppUserPasswordCredential:
    properties:
      value:
        format: password
        type: string
    x-okta-tags:
      - Application
  Application:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      accessibility:
        $ref: '#/definitions/ApplicationAccessibility'
      created:
        format: date-time
        readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/ApplicationCredentials'
      features:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      label:
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      licensing:
        $ref: '#/definitions/ApplicationLicensing'
      name:
        readOnly: true
        type: string
      profile:
        additionalProperties:
          type: object
        type: object
      settings:
        $ref: '#/definitions/ApplicationSettings'
      signOnMode:
        $ref: '#/definitions/ApplicationSignOnMode'
      status:
        enum:
          - ACTIVE
          - INACTIVE
          - DELETED
        readOnly: true
        type: string
      visibility:
        $ref: '#/definitions/ApplicationVisibility'
    type: object
    x-okta-crud:
      - alias: read
        arguments:
          - dest: appId
            src: id
        operationId: getApplication
      - alias: update
        arguments:
          - dest: appId
            src: id
          - dest: application
            self: true
        operationId: updateApplication
      - alias: delete
        arguments:
          - dest: appId
            src: id
        operationId: deleteApplication
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: appId
            src: id
        operationId: activateApplication
      - alias: deactivate
        arguments:
          - dest: appId
            src: id
        operationId: deactivateApplication
      - alias: listApplicationUsers
        arguments:
          - dest: appId
            src: id
        operationId: listApplicationUsers
      - alias: assignUserToApplication
        arguments:
          - dest: appId
            src: id
        operationId: assignUserToApplication
      - alias: getApplicationUser
        arguments:
          - dest: appId
            src: id
        operationId: getApplicationUser
      - alias: createApplicationGroupAssignment
        arguments:
          - dest: appId
            src: id
        operationId: createApplicationGroupAssignment
      - alias: getApplicationGroupAssignment
        arguments:
          - dest: appId
            src: id
        operationId: getApplicationGroupAssignment
      - alias: cloneApplicationKey
        arguments:
          - dest: appId
            src: id
        operationId: cloneApplicationKey
      - alias: getApplicationKey
        arguments:
          - dest: appId
            src: id
        operationId: getApplicationKey
      - alias: listGroupAssignments
        arguments:
          - dest: appId
            src: id
        operationId: listApplicationGroupAssignments
      - alias: listKeys
        arguments:
          - dest: appId
            src: id
        operationId: listApplicationKeys
      - alias: generateKey
        arguments:
          - dest: appId
            src: id
        operationId: generateApplicationKey
      - alias: generateCsr
        arguments:
          - dest: appId
            src: id
        operationId: generateCsrForApplication
      - alias: getCsr
        arguments:
          - dest: appId
            src: id
        operationId: getCsrForApplication
      - alias: revokeCsr
        arguments:
          - dest: appId
            src: id
        operationId: revokeCsrFromApplication
      - alias: listCsrs
        arguments:
          - dest: appId
            src: id
        operationId: listCsrsForApplication
      - alias: publishCerCert
        arguments:
          - dest: appId
            src: id
        operationId: publishCerCert
      - alias: publishBinaryCerCert
        arguments:
          - dest: appId
            src: id
        operationId: publishBinaryCerCert
      - alias: publishDerCert
        arguments:
          - dest: appId
            src: id
        operationId: publishDerCert
      - alias: publishBinaryDerCert
        arguments:
          - dest: appId
            src: id
        operationId: publishBinaryDerCert
      - alias: publishBinaryPemCert
        arguments:
          - dest: appId
            src: id
        operationId: publishBinaryPemCert
      - alias: listOAuth2Tokens
        arguments:
          - dest: appId
            src: id
        operationId: listOAuth2TokensForApplication
      - alias: revokeOAuth2TokenForApplication
        arguments:
          - dest: appId
            src: id
        operationId: revokeOAuth2TokenForApplication
      - alias: getOAuth2Token
        arguments:
          - dest: appId
            src: id
        operationId: getOAuth2TokenForApplication
      - alias: revokeOAuth2Tokens
        arguments:
          - dest: appId
            src: id
        operationId: revokeOAuth2TokensForApplication
      - alias: listScopeConsentGrants
        arguments:
          - dest: appId
            src: id
        operationId: listScopeConsentGrants
      - alias: grantConsentToScope
        arguments:
          - dest: appId
            src: id
        operationId: grantConsentToScope
      - alias: revokeScopeConsentGrant
        arguments:
          - dest: appId
            src: id
        operationId: revokeScopeConsentGrant
      - alias: getScopeConsentGrant
        arguments:
          - dest: appId
            src: id
        operationId: getScopeConsentGrant
    x-okta-tags:
      - Application
    x-openapi-v3-discriminator:
      mapping:
        AUTO_LOGIN: '#/definitions/AutoLoginApplication'
        BASIC_AUTH: '#/definitions/BasicAuthApplication'
        BOOKMARK: '#/definitions/BookmarkApplication'
        BROWSER_PLUGIN: '#/definitions/BrowserPluginApplication'
        OPENID_CONNECT: '#/definitions/OpenIdConnectApplication'
        SAML_1_1: '#/definitions/SamlApplicationV1'
        SAML_2_0: '#/definitions/SamlApplication'
        SECURE_PASSWORD_STORE: '#/definitions/SecurePasswordStoreApplication'
        WS_FEDERATION: '#/definitions/WsFederationApplication'
      propertyName: signOnMode
  ApplicationAccessibility:
    properties:
      errorRedirectUrl:
        type: string
      loginRedirectUrl:
        type: string
      selfService:
        type: boolean
    type: object
    x-okta-tags:
      - Application
  ApplicationCredentials:
    properties:
      signing:
        $ref: '#/definitions/ApplicationCredentialsSigning'
      userNameTemplate:
        $ref: '#/definitions/ApplicationCredentialsUsernameTemplate'
    type: object
    x-okta-tags:
      - Application
  ApplicationCredentialsOAuthClient:
    properties:
      autoKeyRotation:
        type: boolean
      client_id:
        type: string
      client_secret:
        type: string
      token_endpoint_auth_method:
        $ref: '#/definitions/OAuthEndpointAuthenticationMethod'
    x-okta-tags:
      - Application
  ApplicationCredentialsScheme:
    enum:
      - SHARED_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - EDIT_USERNAME_AND_PASSWORD
      - EDIT_PASSWORD_ONLY
      - ADMIN_SETS_CREDENTIALS
    type: string
    x-okta-tags:
      - Application
  ApplicationCredentialsSigning:
    properties:
      kid:
        type: string
      lastRotated:
        format: date-time
        readOnly: true
        type: string
      nextRotation:
        format: date-time
        readOnly: true
        type: string
      rotationMode:
        type: string
      use:
        $ref: '#/definitions/ApplicationCredentialsSigningUse'
    type: object
    x-okta-tags:
      - Application
  ApplicationCredentialsSigningUse:
    enum:
      - sig
    type: string
    x-okta-tags:
      - AuthorizationServer
  ApplicationCredentialsUsernameTemplate:
    properties:
      suffix:
        type: string
      template:
        type: string
      type:
        type: string
    type: object
    x-okta-tags:
      - Application
  ApplicationGroupAssignment:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      priority:
        type: integer
      profile:
        additionalProperties:
          type: object
        type: object
    type: object
    x-okta-crud:
      - alias: delete
        arguments:
          - dest: appId
            parentSrc: appId
          - dest: groupId
            src: id
        operationId: deleteApplicationGroupAssignment
    x-okta-tags:
      - Application
  ApplicationLicensing:
    properties:
      seatCount:
        type: integer
    type: object
    x-okta-tags:
      - Application
  ApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/ApplicationSettingsApplication'
      implicitAssignment:
        type: boolean
      inlineHookId:
        type: string
      notifications:
        $ref: '#/definitions/ApplicationSettingsNotifications'
    type: object
    x-okta-tags:
      - Application
  ApplicationSettingsApplication:
    x-okta-tags:
      - Application
  ApplicationSettingsNotifications:
    properties:
      vpn:
        $ref: '#/definitions/ApplicationSettingsNotificationsVpn'
    type: object
    x-okta-tags:
      - Application
  ApplicationSettingsNotificationsVpn:
    properties:
      helpUrl:
        type: string
      message:
        type: string
      network:
        $ref: '#/definitions/ApplicationSettingsNotificationsVpnNetwork'
    type: object
    x-okta-tags:
      - Application
  ApplicationSettingsNotificationsVpnNetwork:
    properties:
      connection:
        type: string
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Application
  ApplicationSignOnMode:
    enum:
      - BOOKMARK
      - BASIC_AUTH
      - BROWSER_PLUGIN
      - SECURE_PASSWORD_STORE
      - AUTO_LOGIN
      - WS_FEDERATION
      - SAML_2_0
      - OPENID_CONNECT
      - SAML_1_1
    type: string
    x-okta-tags:
      - Application
  ApplicationVisibility:
    properties:
      appLinks:
        additionalProperties:
          type: boolean
        type: object
      autoSubmitToolbar:
        type: boolean
      hide:
        $ref: '#/definitions/ApplicationVisibilityHide'
    type: object
    x-okta-tags:
      - Application
  ApplicationVisibilityHide:
    properties:
      iOS:
        type: boolean
      web:
        type: boolean
    type: object
    x-okta-tags:
      - Application
  AssignRoleRequest:
    properties:
      type:
        $ref: '#/definitions/RoleType'
        readOnly: false
    x-okta-tags:
      - Role
  AuthenticationProvider:
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/AuthenticationProviderType'
    type: object
    x-okta-tags:
      - User
  AuthenticationProviderType:
    enum:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
      - IMPORT
    type: string
    x-okta-tags:
      - User
  AuthorizationServer:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      audiences:
        items:
          type: string
        type: array
      created:
        format: date-time
        readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/AuthorizationServerCredentials'
      description:
        type: string
      id:
        readOnly: true
        type: string
      issuer:
        type: string
      issuerMode:
        enum:
          - ORG_URL
          - CUSTOM_URL
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      status:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: authorizationServer
            self: true
        operationId: createAuthorizationServer
      - alias: read
        arguments: []
        operationId: getAuthorizationServer
      - alias: update
        arguments:
          - dest: authServerId
            src: id
          - dest: authorizationServer
            self: true
        operationId: updateAuthorizationServer
      - alias: delete
        arguments:
          - dest: authServerId
            src: id
          - dest: authorizationServer
            self: true
        operationId: deleteAuthorizationServer
    x-okta-operations:
      - alias: listOAuth2Claims
        arguments:
          - dest: authServerId
            src: id
        operationId: listOAuth2Claims
      - alias: createOAuth2Claim
        arguments:
          - dest: authServerId
            src: id
        operationId: createOAuth2Claim
      - alias: deleteOAuth2Claim
        arguments:
          - dest: authServerId
            src: id
        operationId: deleteOAuth2Claim
      - alias: getOAuth2Claim
        arguments:
          - dest: authServerId
            src: id
        operationId: getOAuth2Claim
      - alias: updateOAuth2Claim
        arguments:
          - dest: authServerId
            src: id
        operationId: updateOAuth2Claim
      - alias: listOAuth2Clients
        arguments:
          - dest: authServerId
            src: id
        operationId: listOAuth2ClientsForAuthorizationServer
      - alias: revokeRefreshTokensForClient
        arguments:
          - dest: authServerId
            src: id
        operationId: revokeRefreshTokensForAuthorizationServerAndClient
      - alias: listRefreshTokensForClient
        arguments:
          - dest: authServerId
            src: id
        operationId: listRefreshTokensForAuthorizationServerAndClient
      - alias: getRefreshTokenForClient
        arguments:
          - dest: authServerId
            src: id
        operationId: getRefreshTokenForAuthorizationServerAndClient
      - alias: revokeRefreshTokenForClient
        arguments:
          - dest: authServerId
            src: id
        operationId: revokeRefreshTokenForAuthorizationServerAndClient
      - alias: listKeys
        arguments:
          - dest: authServerId
            src: id
        operationId: listAuthorizationServerKeys
      - alias: rotateKeys
        arguments:
          - dest: authServerId
            src: id
        operationId: rotateAuthorizationServerKeys
      - alias: activate
        arguments:
          - dest: authServerId
            src: id
        operationId: activateAuthorizationServer
      - alias: deactivate
        arguments:
          - dest: authServerId
            src: id
        operationId: deactivateAuthorizationServer
      - alias: listPolicies
        arguments:
          - dest: authServerId
            src: id
        operationId: listAuthorizationServerPolicies
      - alias: createPolicy
        arguments:
          - dest: authServerId
            src: id
        operationId: createAuthorizationServerPolicy
      - alias: deletePolicy
        arguments:
          - dest: authServerId
            src: id
        operationId: deleteAuthorizationServerPolicy
      - alias: getPolicy
        arguments:
          - dest: authServerId
            src: id
        operationId: getAuthorizationServerPolicy
      - alias: updatePolicy
        arguments:
          - dest: authServerId
            src: id
        operationId: updateAuthorizationServerPolicy
      - alias: listOAuth2Scopes
        arguments:
          - dest: authServerId
            src: id
        operationId: listOAuth2Scopes
      - alias: createOAuth2Scope
        arguments:
          - dest: authServerId
            src: id
        operationId: createOAuth2Scope
      - alias: deleteOAuth2Scope
        arguments:
          - dest: authServerId
            src: id
        operationId: deleteOAuth2Scope
      - alias: getOAuth2Scope
        arguments:
          - dest: authServerId
            src: id
        operationId: getOAuth2Scope
      - alias: updateOAuth2Scope
        arguments:
          - dest: authServerId
            src: id
        operationId: updateOAuth2Scope
    x-okta-tags:
      - AuthorizationServer
  AuthorizationServerCredentials:
    properties:
      signing:
        $ref: '#/definitions/AuthorizationServerCredentialsSigningConfig'
    x-okta-tags:
      - Application
  AuthorizationServerCredentialsRotationMode:
    enum:
      - AUTO
      - MANUAL
    type: string
    x-okta-tags:
      - AuthorizationServer
  AuthorizationServerCredentialsSigningConfig:
    properties:
      kid:
        type: string
      lastRotated:
        format: date-time
        readOnly: true
        type: string
      nextRotation:
        format: date-time
        readOnly: true
        type: string
      rotationMode:
        $ref: '#/definitions/AuthorizationServerCredentialsRotationMode'
      use:
        $ref: '#/definitions/AuthorizationServerCredentialsUse'
    x-okta-tags:
      - AuthorizationServer
  AuthorizationServerCredentialsUse:
    enum:
      - sig
    type: string
    x-okta-tags:
      - AuthorizationServer
  AuthorizationServerPolicy:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      conditions:
        $ref: '#/definitions/PolicyRuleConditions'
      created:
        format: date-time
        readOnly: true
        type: string
      description:
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      priority:
        type: integer
      status:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      system:
        type: boolean
      type:
        $ref: '#/definitions/PolicyType'
    type: object
    x-okta-crud:
      - alias: read
        arguments:
          - dest: policyId
            src: id
        operationId: getAuthorizationServerPolicy
      - alias: updatePolicy
        arguments:
          - dest: policyId
            src: id
        operationId: updateAuthorizationServerPolicy
      - alias: deletePolicy
        arguments:
          - dest: policyId
            src: id
        operationId: deleteAuthorizationServerPolicy
    x-okta-operations:
      - alias: listPolicyRules
        arguments:
          - dest: policyId
            src: id
        operationId: listAuthorizationServerPolicyRules
      - alias: createPolicyRule
        arguments:
          - dest: policyId
            src: id
        operationId: createAuthorizationServerPolicyRule
      - alias: getPolicyRule
        arguments:
          - dest: policyId
            src: id
        operationId: getAuthorizationServerPolicyRule
      - alias: deletePolicyRule
        arguments:
          - dest: policyId
            src: id
        operationId: deleteAuthorizationServerPolicyRule
    x-okta-tags:
      - AuthorizationServer
  AuthorizationServerPolicyRule:
    properties:
      actions:
        $ref: '#/definitions/AuthorizationServerPolicyRuleActions'
      conditions:
        $ref: '#/definitions/AuthorizationServerPolicyRuleConditions'
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      priority:
        type: integer
      status:
        default: ACTIVE
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      system:
        default: false
        type: boolean
      type:
        enum:
          - RESOURCE_ACCESS
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: ruleId
            src: id
          - dest: policyRule
            self: true
          - dest: policyId
            parentSrc: id
        operationId: updateAuthorizationServerPolicyRule
      - alias: deletePolicyRule
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: id
        operationId: deleteAuthorizationServerPolicyRule
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: activatePolicyRule
      - alias: deactivate
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: deactivatePolicyRule
    x-okta-tags:
      - AuthorizationServerPolicy
  AuthorizationServerPolicyRuleActions:
    properties:
      token:
        $ref: '#/definitions/TokenAuthorizationServerPolicyRuleAction'
    type: object
    x-okta-tags:
      - AuthorizationServerPolicy
  AuthorizationServerPolicyRuleConditions:
    properties:
      clients:
        $ref: '#/definitions/ClientPolicyCondition'
      grantTypes:
        $ref: '#/definitions/GrantTypePolicyRuleCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
      scopes:
        $ref: '#/definitions/OAuth2ScopesMediationPolicyRuleCondition'
    type: object
    x-okta-tags:
      - AuthorizationServerPolicy
  AutoLoginApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
      settings:
        $ref: '#/definitions/AutoLoginApplicationSettings'
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  AutoLoginApplicationSettings:
    properties:
      signOn:
        $ref: '#/definitions/AutoLoginApplicationSettingsSignOn'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  AutoLoginApplicationSettingsSignOn:
    properties:
      loginUrl:
        type: string
      redirectUrl:
        type: string
    x-okta-tags:
      - Application
  BasicApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/BasicApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  BasicApplicationSettingsApplication:
    properties:
      authURL:
        type: string
      url:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  BasicAuthApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
      name:
        default: template_basic_auth
      settings:
        $ref: '#/definitions/BasicApplicationSettings'
    x-okta-defined-as:
      name: template_basic_auth
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  BeforeScheduledActionPolicyRuleCondition:
    properties:
      duration:
        $ref: '#/definitions/Duration'
      lifecycleAction:
        $ref: '#/definitions/ScheduledUserLifecycleAction'
    type: object
    x-okta-tags:
      - Policy
  BookmarkApplication:
    properties:
      name:
        default: bookmark
      settings:
        $ref: '#/definitions/BookmarkApplicationSettings'
    x-okta-defined-as:
      name: bookmark
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  BookmarkApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/BookmarkApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  BookmarkApplicationSettingsApplication:
    properties:
      requestIntegration:
        type: boolean
      url:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  BrowserPluginApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
    x-openapi-v3-discriminator:
      mapping:
        template_swa: '#/definitions/SwaApplication'
        template_swa3field: '#/definitions/SwaThreeFieldApplication'
      propertyName: name
  CallUserFactor:
    properties:
      profile:
        $ref: '#/definitions/CallUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  CallUserFactorProfile:
    properties:
      phoneExtension:
        type: string
      phoneNumber:
        type: string
    x-okta-tags:
      - UserFactor
  CatalogApplication:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      category:
        type: string
      description:
        type: string
      displayName:
        type: string
      features:
        items:
          type: string
        type: array
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      signOnModes:
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/CatalogApplicationStatus'
      verificationStatus:
        type: string
      website:
        type: string
    x-okta-tags:
      - Role
  CatalogApplicationStatus:
    enum:
      - ACTIVE
      - INACTIVE
    type: string
    x-okta-tags:
      - Role
  ChangePasswordRequest:
    properties:
      newPassword:
        $ref: '#/definitions/PasswordCredential'
      oldPassword:
        $ref: '#/definitions/PasswordCredential'
    type: object
    x-okta-tags:
      - User
  ClientPolicyCondition:
    properties:
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  ContextPolicyRuleCondition:
    properties:
      expression:
        type: string
    type: object
    x-okta-tags:
      - Policy
  CreateSessionRequest:
    properties:
      sessionToken:
        type: string
    type: object
    x-okta-tags:
      - Session
  CreateUserRequest:
    properties:
      credentials:
        $ref: '#/definitions/UserCredentials'
      groupIds:
        items:
          type: string
        type: array
      profile:
        $ref: '#/definitions/UserProfile'
      type:
        $ref: '#/definitions/UserType'
    type: object
    x-okta-parent: '#/definitions/User'
    x-okta-tags:
      - User
  Csr:
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
      csr:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      kty:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Application
  CsrMetadata:
    properties:
      subject:
        $ref: '#/definitions/CsrMetadataSubject'
      subjectAltNames:
        $ref: '#/definitions/CsrMetadataSubjectAltNames'
    x-okta-tags:
      - Application
  CsrMetadataSubject:
    properties:
      commonName:
        type: string
      countryName:
        type: string
      localityName:
        type: string
      organizationName:
        type: string
      organizationalUnitName:
        type: string
      stateOrProvinceName:
        type: string
    x-okta-tags:
      - Application
  CsrMetadataSubjectAltNames:
    properties:
      dnsNames:
        items:
          type: string
        type: array
    x-okta-tags:
      - Application
  CustomHotpUserFactor:
    properties:
      factorProfileId:
        type: string
      profile:
        $ref: '#/definitions/CustomHotpUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  CustomHotpUserFactorProfile:
    properties:
      sharedSecret:
        type: string
    x-okta-tags:
      - UserFactor
  DevicePolicyRuleCondition:
    properties:
      migrated:
        type: boolean
      platform:
        $ref: '#/definitions/DevicePolicyRuleConditionPlatform'
      rooted:
        type: boolean
      trustLevel:
        enum:
          - ANY
          - TRUSTED
        type: string
    type: object
    x-okta-tags:
      - Policy
  DevicePolicyRuleConditionPlatform:
    properties:
      supportedMDMFrameworks:
        items:
          $ref: '#/definitions/MDMFrameworks'
        type: array
      types:
        items:
          $ref: '#/definitions/Platforms'
        type: array
    type: object
    x-okta-tags:
      - Policy
  Duration:
    properties:
      number:
        type: integer
      unit:
        type: string
    type: object
    x-okta-tags:
      - Policy
  EmailUserFactor:
    properties:
      profile:
        $ref: '#/definitions/EmailUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  EmailUserFactorProfile:
    properties:
      email:
        type: string
    x-okta-tags:
      - UserFactor
  EnabledStatus:
    enum:
      - ENABLED
      - DISABLED
    type: string
    x-okta-tags:
      - Common
  EventHook:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      channel:
        $ref: '#/definitions/EventHookChannel'
      created:
        format: date-time
        readOnly: true
        type: string
      createdBy:
        type: string
      events:
        $ref: '#/definitions/EventSubscriptions'
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      status:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      verificationStatus:
        enum:
          - UNVERIFIED
          - VERIFIED
        type: string
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: eventHook
            self: true
        operationId: createEventHook
      - alias: read
        arguments: []
        operationId: getEventHook
      - alias: update
        arguments:
          - dest: eventHookId
            src: id
          - dest: eventHook
            self: true
        operationId: updateEventHook
      - alias: delete
        arguments:
          - dest: eventHookId
            src: id
        operationId: deleteEventHook
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: eventHookId
            src: id
        operationId: activateEventHook
      - alias: deactivate
        arguments:
          - dest: eventHookId
            src: id
        operationId: deactivateEventHook
      - alias: verify
        arguments:
          - dest: eventHookId
            src: id
        operationId: verifyEventHook
    x-okta-tags:
      - EventHook
  EventHookChannel:
    properties:
      config:
        $ref: '#/definitions/EventHookChannelConfig'
        readOnly: false
      type:
        enum:
          - HTTP
        readOnly: false
        type: string
      version:
        readOnly: false
        type: string
    type: object
    x-okta-tags:
      - EventHook
  EventHookChannelConfig:
    properties:
      authScheme:
        $ref: '#/definitions/EventHookChannelConfigAuthScheme'
        type: object
      headers:
        items:
          $ref: '#/definitions/EventHookChannelConfigHeader'
        type: array
      uri:
        type: string
    type: object
    x-okta-tags:
      - EventHook
  EventHookChannelConfigAuthScheme:
    properties:
      key:
        type: string
      type:
        $ref: '#/definitions/EventHookChannelConfigAuthSchemeType'
      value:
        type: string
    type: object
    x-okta-tags:
      - EventHook
  EventHookChannelConfigAuthSchemeType:
    enum:
      - HEADER
    type: string
    x-okta-tags:
      - EventHook
  EventHookChannelConfigHeader:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
    x-okta-tags:
      - EventHook
  EventSubscriptions:
    properties:
      items:
        items:
          type: string
        type: array
      type:
        enum:
          - EVENT_TYPE
          - FLOW_EVENT
        type: string
    type: object
    x-okta-tags:
      - EventHook
  FactorProvider:
    enum:
      - OKTA
      - RSA
      - GOOGLE
      - SYMANTEC
      - DUO
      - YUBICO
      - CUSTOM
    type: string
    x-okta-tags:
      - UserFactor
  FactorResultType:
    enum:
      - SUCCESS
      - CHALLENGE
      - WAITING
      - FAILED
      - REJECTED
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - PASSCODE_REPLAYED
      - ERROR
      - CANCELLED
    type: string
    x-okta-tags:
      - UserFactor
  FactorStatus:
    enum:
      - PENDING_ACTIVATION
      - ACTIVE
      - INACTIVE
      - NOT_SETUP
      - ENROLLED
      - DISABLED
      - EXPIRED
    type: string
    x-okta-tags:
      - UserFactor
  FactorType:
    enum:
      - call
      - email
      - push
      - question
      - sms
      - 'token:hardware'
      - 'token:hotp'
      - 'token:software:totp'
      - token
      - u2f
      - web
      - webauthn
    type: string
    x-okta-tags:
      - UserFactor
  Feature:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      description:
        type: string
      id:
        readOnly: true
        type: string
      name:
        type: string
      stage:
        $ref: '#/definitions/FeatureStage'
      status:
        $ref: '#/definitions/EnabledStatus'
      type:
        $ref: '#/definitions/FeatureType'
    type: object
    x-okta-crud:
      - alias: read
        arguments: []
        operationId: getFeature
    x-okta-operations:
      - alias: updateLifecycle
        arguments:
          - dest: featureId
            src: id
        operationId: updateFeatureLifecycle
      - alias: getDependents
        arguments:
          - dest: featureId
            src: id
        operationId: listFeatureDependents
      - alias: getDependencies
        arguments:
          - dest: featureId
            src: id
        operationId: listFeatureDependencies
    x-okta-tags:
      - Feature
  FeatureStage:
    properties:
      state:
        $ref: '#/definitions/FeatureStageState'
      value:
        $ref: '#/definitions/FeatureStageValue'
    type: object
    x-okta-tags:
      - Feature
  FeatureStageState:
    enum:
      - OPEN
      - CLOSED
    type: string
    x-okta-tags:
      - Feature
  FeatureStageValue:
    enum:
      - EA
      - BETA
    type: string
    x-okta-tags:
      - Feature
  FeatureType:
    enum:
      - self-service
    type: string
    x-okta-tags:
      - Feature
  ForgotPasswordResponse:
    properties:
      resetPasswordUrl:
        readOnly: true
        type: string
    x-okta-tags:
      - User
  GrantTypePolicyRuleCondition:
    properties:
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  Group:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      lastMembershipUpdated:
        format: date-time
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      objectClass:
        items:
          type: string
        readOnly: true
        type: array
      profile:
        $ref: '#/definitions/GroupProfile'
      type:
        $ref: '#/definitions/GroupType'
        readOnly: true
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: groupId
            src: id
          - dest: group
            self: true
        operationId: updateGroup
      - alias: delete
        arguments:
          - dest: groupId
            src: id
        operationId: deleteGroup
    x-okta-operations:
      - alias: removeUser
        arguments:
          - dest: groupId
            src: id
        operationId: removeUserFromGroup
      - alias: listUsers
        arguments:
          - dest: groupId
            src: id
        operationId: listGroupUsers
      - alias: listApplications
        arguments:
          - dest: groupId
            src: id
        operationId: listAssignedApplicationsForGroup
      - alias: assignRole
        arguments:
          - dest: groupId
            src: id
        operationId: assignRoleToGroup
    x-okta-tags:
      - Group
  GroupCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    x-okta-tags:
      - Policy
  GroupPolicyRuleCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  GroupProfile:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
    x-okta-tags:
      - Group
  GroupRule:
    properties:
      actions:
        $ref: '#/definitions/GroupRuleAction'
      conditions:
        $ref: '#/definitions/GroupRuleConditions'
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/GroupRuleStatus'
        readOnly: true
      type:
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: ruleId
            src: id
          - dest: groupRule
            self: true
        operationId: updateGroupRule
      - alias: delete
        arguments:
          - dest: ruleId
            src: id
        operationId: deleteGroupRule
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: ruleId
            src: id
        operationId: activateGroupRule
      - alias: deactivate
        arguments:
          - dest: ruleId
            src: id
        operationId: deactivateGroupRule
    x-okta-tags:
      - GroupRule
  GroupRuleAction:
    properties:
      assignUserToGroups:
        $ref: '#/definitions/GroupRuleGroupAssignment'
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleConditions:
    properties:
      expression:
        $ref: '#/definitions/GroupRuleExpression'
      people:
        $ref: '#/definitions/GroupRulePeopleCondition'
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleExpression:
    properties:
      type:
        type: string
      value:
        type: string
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleGroupAssignment:
    properties:
      groupIds:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleGroupCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - GroupRule
  GroupRulePeopleCondition:
    properties:
      groups:
        $ref: '#/definitions/GroupRuleGroupCondition'
      users:
        $ref: '#/definitions/GroupRuleUserCondition'
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleStatus:
    enum:
      - ACTIVE
      - INACTIVE
      - INVALID
    type: string
    x-okta-tags:
      - GroupRule
  GroupRuleUserCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - GroupRule
  GroupType:
    enum:
      - OKTA_GROUP
      - APP_GROUP
      - BUILT_IN
    type: string
    x-okta-tags:
      - Group
  HardwareUserFactor:
    properties:
      profile:
        $ref: '#/definitions/HardwareUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  HardwareUserFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-tags:
      - UserFactor
  IdentityProvider:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      issuerMode:
        enum:
          - ORG_URL
          - CUSTOM_URL_DOMAIN
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      policy:
        $ref: '#/definitions/IdentityProviderPolicy'
      protocol:
        $ref: '#/definitions/Protocol'
      status:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      type:
        enum:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
        type: string
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: idpTrust
            self: true
        operationId: createIdentityProvider
      - alias: read
        arguments: []
        operationId: getIdentityProvider
      - alias: update
        arguments:
          - dest: idpId
            src: id
          - dest: idpTrust
            self: true
        operationId: updateIdentityProvider
      - alias: delete
        arguments:
          - dest: idpId
            src: id
        operationId: deleteIdentityProvider
    x-okta-operations:
      - alias: listSigningCsrs
        arguments:
          - dest: idpId
            src: id
        operationId: listCsrsForIdentityProvider
      - alias: generateCsr
        arguments:
          - dest: idpId
            src: id
        operationId: generateCsrForIdentityProvider
      - alias: deleteSigningCsr
        arguments:
          - dest: idpId
            src: id
        operationId: revokeCsrForIdentityProvider
      - alias: getSigningCsr
        arguments:
          - dest: idpId
            src: id
        operationId: getCsrForIdentityProvider
      - alias: listSigningKeys
        arguments:
          - dest: idpId
            src: id
        operationId: listIdentityProviderSigningKeys
      - alias: generateSigningKey
        arguments:
          - dest: idpId
            src: id
        operationId: generateIdentityProviderSigningKey
      - alias: getSigningKey
        arguments:
          - dest: idpId
            src: id
        operationId: getIdentityProviderSigningKey
      - alias: cloneKey
        arguments:
          - dest: idpId
            src: id
        operationId: cloneIdentityProviderKey
      - alias: activate
        arguments:
          - dest: idpId
            src: id
        operationId: activateIdentityProvider
      - alias: deactivate
        arguments:
          - dest: idpId
            src: id
        operationId: deactivateIdentityProvider
      - alias: listUsers
        arguments:
          - dest: idpId
            src: id
        operationId: listIdentityProviderApplicationUsers
      - alias: unlinkUser
        arguments:
          - dest: idpId
            src: id
        operationId: unlinkUserFromIdentityProvider
      - alias: getUser
        arguments:
          - dest: idpId
            src: id
        operationId: getIdentityProviderApplicationUser
      - alias: linkUser
        arguments:
          - dest: idpId
            src: id
        operationId: linkUserToIdentityProvider
      - alias: listSocialAuthTokens
        arguments:
          - dest: idpId
            src: id
        operationId: listSocialAuthTokens
    x-okta-tags:
      - IdentityProvider
  IdentityProviderApplicationUser:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        type: string
      externalId:
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        type: string
      profile:
        additionalProperties:
          type: object
        type: object
    type: object
    x-okta-tags:
      - IdentityProvider
  IdentityProviderCredentials:
    properties:
      client:
        $ref: '#/definitions/IdentityProviderCredentialsClient'
      signing:
        $ref: '#/definitions/IdentityProviderCredentialsSigning'
      trust:
        $ref: '#/definitions/IdentityProviderCredentialsTrust'
    type: object
    x-okta-tags:
      - IdentityProvider
  IdentityProviderCredentialsClient:
    properties:
      client_id:
        type: string
      client_secret:
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  IdentityProviderCredentialsSigning:
    properties:
      kid:
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  IdentityProviderCredentialsTrust:
    properties:
      audience:
        type: string
      issuer:
        type: string
      kid:
        type: string
      revocation:
        enum:
          - CRL
          - DELTA_CRL
          - OCSP
        type: string
      revocationCacheLifetime:
        type: integer
    type: object
    x-okta-tags:
      - IdentityProvider
  IdentityProviderPolicy:
    properties:
      accountLink:
        $ref: '#/definitions/PolicyAccountLink'
      maxClockSkew:
        type: integer
      provisioning:
        $ref: '#/definitions/Provisioning'
      subject:
        $ref: '#/definitions/PolicySubject'
    type: object
    x-okta-parent: '#/definitions/Policy'
    x-okta-tags:
      - Policy
  IdentityProviderPolicyRuleCondition:
    properties:
      idpIds:
        items:
          type: string
        type: array
      provider:
        enum:
          - ANY
          - OKTA
          - SPECIFIC_IDP
        type: string
    type: object
    x-okta-tags:
      - Policy
  InactivityPolicyRuleCondition:
    properties:
      number:
        type: integer
      unit:
        type: string
    type: object
    x-okta-tags:
      - Policy
  InlineHook:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      channel:
        $ref: '#/definitions/InlineHookChannel'
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/InlineHookStatus'
      type:
        $ref: '#/definitions/InlineHookType'
      version:
        type: string
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: inlineHook
            self: true
        operationId: createInlineHook
      - alias: read
        arguments: []
        operationId: getInlineHook
      - alias: update
        arguments:
          - dest: inlineHookId
            src: id
          - dest: inlineHook
            self: true
        operationId: updateInlineHook
      - alias: delete
        arguments:
          - dest: inlineHookId
            src: id
        operationId: deleteInlineHook
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: inlineHookId
            src: id
        operationId: activateInlineHook
      - alias: deactivate
        arguments:
          - dest: inlineHookId
            src: id
        operationId: deactivateInlineHook
      - alias: execute
        arguments:
          - dest: inlineHookId
            src: id
        operationId: executeInlineHook
    x-okta-tags:
      - InlineHook
  InlineHookChannel:
    properties:
      config:
        $ref: '#/definitions/InlineHookChannelConfig'
        readOnly: false
      type:
        enum:
          - HTTP
        readOnly: false
        type: string
      version:
        readOnly: false
        type: string
    type: object
    x-okta-tags:
      - InlineHook
  InlineHookChannelConfig:
    properties:
      authScheme:
        $ref: '#/definitions/InlineHookChannelConfigAuthScheme'
        type: object
      headers:
        items:
          $ref: '#/definitions/InlineHookChannelConfigHeaders'
        type: array
      uri:
        type: string
    type: object
    x-okta-tags:
      - InlineHook
  InlineHookChannelConfigAuthScheme:
    properties:
      key:
        type: string
      type:
        type: string
      value:
        type: string
    type: object
    x-okta-tags:
      - InlineHook
  InlineHookChannelConfigHeaders:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
    x-okta-tags:
      - InlineHook
  InlineHookPayload:
    type: object
    x-okta-extensible: true
    x-okta-tags:
      - InlineHook
  InlineHookResponse:
    properties:
      commands:
        items:
          $ref: '#/definitions/InlineHookResponseCommands'
        type: array
    type: object
    x-okta-tags:
      - InlineHook
  InlineHookResponseCommandValue:
    properties:
      op:
        type: string
      path:
        type: string
      value:
        type: string
    x-okta-tags:
      - InlineHook
  InlineHookResponseCommands:
    properties:
      type:
        type: string
      value:
        items:
          $ref: '#/definitions/InlineHookResponseCommandValue'
        type: array
    x-okta-tags:
      - InlineHook
  InlineHookStatus:
    enum:
      - ACTIVE
      - INACTIVE
    type: string
    x-okta-tags:
      - InlineHook
  InlineHookType:
    enum:
      - com.okta.oauth2.tokens.transform
      - com.okta.import.transform
      - com.okta.saml.tokens.transform
      - com.okta.user.pre-registration
      - com.okta.user.credential.password.import
    type: string
    x-okta-tags:
      - InlineHook
  IonField:
    properties:
      form:
        $ref: '#/definitions/IonForm'
      label:
        type: string
      mutable:
        type: boolean
      name:
        type: string
      required:
        type: boolean
      secret:
        type: boolean
      type:
        type: string
      value:
        additionalProperties:
          type: object
        type: object
      visible:
        type: boolean
    type: object
    x-okta-tags:
      - Ion
  IonForm:
    properties:
      accepts:
        type: string
      href:
        type: string
      method:
        type: string
      name:
        type: string
      produces:
        type: string
      refresh:
        type: integer
      rel:
        items:
          type: string
        type: array
      relatesTo:
        items:
          type: string
        type: array
      value:
        items:
          $ref: '#/definitions/IonField'
        readOnly: true
        type: array
    type: object
    x-okta-tags:
      - Ion
  JsonWebKey:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      alg:
        readOnly: true
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      e:
        readOnly: true
        type: string
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      key_ops:
        items:
          type: string
        readOnly: true
        type: array
      kid:
        readOnly: true
        type: string
      kty:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      'n':
        readOnly: true
        type: string
      status:
        readOnly: true
        type: string
      use:
        readOnly: true
        type: string
      x5c:
        items:
          type: string
        readOnly: false
        type: array
      x5t:
        readOnly: true
        type: string
      'x5t#S256':
        readOnly: true
        type: string
      x5u:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Application
  JwkUse:
    properties:
      use:
        enum:
          - sig
        type: string
    x-okta-tags:
      - Application
  LifecycleExpirationPolicyRuleCondition:
    properties:
      lifecycleStatus:
        type: string
      number:
        type: integer
      unit:
        type: string
    type: object
    x-okta-tags:
      - Policy
  LinkedObject:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      name:
        type: string
      associated:
        $ref: '#/definitions/LinkedObjectDetails'
      primary:
        $ref: '#/definitions/LinkedObjectDetails'
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: linkedObjectDefinition
            self: true
        operationId: addLinkedObjectDefinition
      - alias: read
        arguments: []
        operationId: getLinkedObjectDefinition
      - alias: delete
        arguments:
          - dest: linkedObjectName
            src: name
        operationId: deleteLinkedObjectDefinition
    x-okta-tags:
      - LinkedObject
  LinkedObjectDetails:
    properties:
      description:
        type: string
      name:
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/LinkedObjectDetailsType'
    type: object
    x-okta-tags:
      - LinkedObject
  LinkedObjectDetailsType:
    enum:
      - USER
    type: string
    x-okta-tags:
      - LinkedObject
  LogActor:
    properties:
      alternateId:
        readOnly: true
        type: string
      detail:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      displayName:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogAuthenticationContext:
    properties:
      authenticationProvider:
        $ref: '#/definitions/LogAuthenticationProvider'
        readOnly: true
        type: string
      authenticationStep:
        readOnly: true
        type: integer
      credentialProvider:
        $ref: '#/definitions/LogCredentialProvider'
      credentialType:
        $ref: '#/definitions/LogCredentialType'
      externalSessionId:
        readOnly: true
        type: string
      interface:
        readOnly: true
        type: string
      issuer:
        $ref: '#/definitions/LogIssuer'
        readOnly: true
    type: object
    x-okta-tags:
      - Log
  LogAuthenticationProvider:
    enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - ACTIVE_DIRECTORY
      - LDAP
      - FEDERATION
      - SOCIAL
      - FACTOR_PROVIDER
    type: string
    x-okta-tags:
      - Log
  LogClient:
    properties:
      device:
        readOnly: true
        type: string
      geographicalContext:
        $ref: '#/definitions/LogGeographicalContext'
        readOnly: true
      id:
        readOnly: true
        type: string
      ipAddress:
        readOnly: true
        type: string
      userAgent:
        $ref: '#/definitions/LogUserAgent'
        readOnly: true
      zone:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogCredentialProvider:
    enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - RSA
      - SYMANTEC
      - GOOGLE
      - DUO
      - YUBIKEY
    type: string
    x-okta-tags:
      - Log
  LogCredentialType:
    enum:
      - OTP
      - SMS
      - PASSWORD
      - ASSERTION
      - IWA
      - EMAIL
      - OAUTH2
      - JWT
    type: string
    x-okta-tags:
      - Log
  LogDebugContext:
    properties:
      debugData:
        additionalProperties:
          type: object
        readOnly: true
        type: object
    type: object
    x-okta-tags:
      - Log
  LogEvent:
    properties:
      actor:
        $ref: '#/definitions/LogActor'
        readOnly: true
      authenticationContext:
        $ref: '#/definitions/LogAuthenticationContext'
        readOnly: true
      client:
        $ref: '#/definitions/LogClient'
        readOnly: true
      debugContext:
        $ref: '#/definitions/LogDebugContext'
        readOnly: true
      displayMessage:
        readOnly: true
        type: string
      eventType:
        readOnly: true
        type: string
      legacyEventType:
        readOnly: true
        type: string
      outcome:
        $ref: '#/definitions/LogOutcome'
        readOnly: true
      published:
        format: date-time
        readOnly: true
        type: string
      request:
        $ref: '#/definitions/LogRequest'
        readOnly: true
      securityContext:
        $ref: '#/definitions/LogSecurityContext'
        readOnly: true
      severity:
        $ref: '#/definitions/LogSeverity'
        readOnly: true
      target:
        items:
          $ref: '#/definitions/LogTarget'
        readOnly: true
        type: array
      transaction:
        $ref: '#/definitions/LogTransaction'
        readOnly: true
      uuid:
        readOnly: true
        type: string
      version:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogGeographicalContext:
    properties:
      city:
        readOnly: true
        type: string
      country:
        readOnly: true
        type: string
      geolocation:
        $ref: '#/definitions/LogGeolocation'
        readOnly: true
      postalCode:
        readOnly: true
        type: string
      state:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogGeolocation:
    properties:
      lat:
        format: double
        readOnly: true
        type: number
      lon:
        format: double
        readOnly: true
        type: number
    type: object
    x-okta-tags:
      - Log
  LogIpAddress:
    properties:
      geographicalContext:
        $ref: '#/definitions/LogGeographicalContext'
        readOnly: true
      ip:
        readOnly: true
        type: string
      source:
        readOnly: true
        type: string
      version:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogIssuer:
    properties:
      id:
        readOnly: true
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogOutcome:
    properties:
      reason:
        readOnly: true
        type: string
      result:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogRequest:
    properties:
      ipChain:
        items:
          $ref: '#/definitions/LogIpAddress'
        readOnly: true
        type: array
    type: object
    x-okta-tags:
      - Log
  LogSecurityContext:
    properties:
      asNumber:
        readOnly: true
        type: integer
      asOrg:
        readOnly: true
        type: string
      domain:
        readOnly: true
        type: string
      isProxy:
        readOnly: true
        type: boolean
      isp:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogSeverity:
    enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR
    type: string
    x-okta-tags:
      - Log
  LogTarget:
    properties:
      alternateId:
        readOnly: true
        type: string
      detailEntry:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      displayName:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogTransaction:
    properties:
      detail:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      id:
        readOnly: true
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogUserAgent:
    properties:
      browser:
        readOnly: true
        type: string
      os:
        readOnly: true
        type: string
      rawUserAgent:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  MDMEnrollmentPolicyRuleCondition:
    properties:
      blockNonSafeAndroid:
        type: boolean
      enrollment:
        enum:
          - OMM
          - ANY_OR_NONE
        type: string
    type: object
    x-okta-tags:
      - Policy
  MDMFrameworks:
    enum:
      - authorization_code
      - implicit
      - password
      - refresh_token
      - client_credentials
    type: string
    x-okta-tags:
      - Policy
  OAuth2Actor:
    properties:
      id:
        readOnly: true
        type: string
      type:
        type: string
    type: object
    x-okta-tags:
      - Application
  OAuth2Claim:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      alwaysIncludeInToken:
        type: boolean
      claimType:
        enum:
          - IDENTITY
          - RESOURCE
        type: string
      conditions:
        $ref: '#/definitions/OAuth2ClaimConditions'
      group_filter_type:
        enum:
          - STARTS_WITH
          - EQUALS
          - CONTAINS
          - REGEX
        type: string
      id:
        readOnly: true
        type: string
      name:
        type: string
      status:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      system:
        type: boolean
      value:
        type: string
      valueType:
        enum:
          - EXPRESSION
          - GROUPS
          - SYSTEM
        type: string
    type: object
    x-okta-tags:
      - Application
  OAuth2ClaimConditions:
    properties:
      scopes:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Application
  OAuth2Client:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      client_id:
        readOnly: true
        type: string
      client_name:
        readOnly: true
        type: string
      client_uri:
        readOnly: true
        type: string
      logo_uri:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Application
  OAuth2RefreshToken:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      clientId:
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      createdBy:
        $ref: '#/definitions/OAuth2Actor'
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      issuer:
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      scopes:
        items:
          type: string
        type: array
      status:
        enum:
          - ACTIVE
          - REVOKED
        type: string
      userId:
        type: string
    type: object
    x-okta-tags:
      - Application
  OAuth2Scope:
    properties:
      consent:
        enum:
          - REQUIRED
          - IMPLICIT
          - ADMIN
        type: string
      default:
        type: boolean
      description:
        type: string
      displayName:
        type: string
      id:
        readOnly: true
        type: string
      metadataPublish:
        enum:
          - ALL_CLIENTS
          - NO_CLIENTS
        type: string
      name:
        type: string
      system:
        type: boolean
    type: object
    x-okta-tags:
      - Application
  OAuth2ScopeConsentGrant:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      clientId:
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      createdBy:
        $ref: '#/definitions/OAuth2Actor'
      id:
        readOnly: true
        type: string
      issuer:
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      scopeId:
        type: string
      source:
        $ref: '#/definitions/OAuth2ScopeConsentGrantSource'
      status:
        $ref: '#/definitions/OAuth2ScopeConsentGrantStatus'
      userId:
        type: string
    type: object
    x-okta-tags:
      - Application
  OAuth2ScopeConsentGrantSource:
    enum:
      - END_USER
      - ADMIN
    type: string
    x-okta-tags:
      - Application
  OAuth2ScopeConsentGrantStatus:
    enum:
      - ACTIVE
      - REVOKED
    type: string
    x-okta-tags:
      - Application
  OAuth2ScopesMediationPolicyRuleCondition:
    properties:
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Application
  OAuth2Token:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      clientId:
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      issuer:
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      scopes:
        items:
          type: string
        type: array
      status:
        enum:
          - ACTIVE
          - REVOKED
        type: string
      userId:
        type: string
    type: object
    x-okta-tags:
      - Application
  OAuthApplicationCredentials:
    properties:
      oauthClient:
        $ref: '#/definitions/ApplicationCredentialsOAuthClient'
    x-okta-parent: '#/definitions/ApplicationCredentials'
    x-okta-tags:
      - Application
  OAuthAuthorizationPolicy:
    x-okta-parent: '#/definitions/Policy'
    x-okta-tags:
      - Policy
  OAuthEndpointAuthenticationMethod:
    enum:
      - none
      - client_secret_post
      - client_secret_basic
      - client_secret_jwt
      - private_key_jwt
    type: string
    x-okta-tags:
      - Application
  OAuthGrantType:
    enum:
      - authorization_code
      - implicit
      - password
      - refresh_token
      - client_credentials
    type: string
    x-okta-tags:
      - Application
  OAuthResponseType:
    enum:
      - code
      - token
      - id_token
    type: string
    x-okta-tags:
      - Application
  OktaSignOnPolicy:
    properties:
      conditions:
        $ref: '#/definitions/OktaSignOnPolicyConditions'
    type: object
    x-okta-parent: '#/definitions/Policy'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyConditions:
    properties:
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-parent: '#/definition/PolicyRuleConditions'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRule:
    properties:
      actions:
        $ref: '#/definitions/OktaSignOnPolicyRuleActions'
      conditions:
        $ref: '#/definitions/OktaSignOnPolicyRuleConditions'
      name:
        type: string
    x-okta-parent: '#/definitions/PolicyRule'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleActions:
    properties:
      signon:
        $ref: '#/definitions/OktaSignOnPolicyRuleSignonActions'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleConditions:
    properties:
      authContext:
        $ref: '#/definitions/PolicyRuleAuthContextCondition'
      network:
        $ref: '#/definitions/PolicyNetworkCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleSignonActions:
    properties:
      access:
        enum:
          - ALLOW
          - DENY
        type: string
      factorLifetime:
        type: integer
      factorPromptMode:
        enum:
          - ALWAYS
          - DEVICE
          - SESSION
        type: string
      rememberDeviceByDefault:
        default: false
        type: boolean
      requireFactor:
        default: false
        type: boolean
      session:
        $ref: '#/definitions/OktaSignOnPolicyRuleSignonSessionActions'
    type: object
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleSignonSessionActions:
    properties:
      maxSessionIdleMinutes:
        default: 120
        type: integer
      maxSessionLifetimeMinutes:
        default: 0
        type: integer
      usePersistentCookie:
        default: false
        type: boolean
    type: object
    x-okta-tags:
      - Policy
  OpenIdConnectApplication:
    properties:
      credentials:
        $ref: '#/definitions/OAuthApplicationCredentials'
      name:
        default: oidc_client
      settings:
        $ref: '#/definitions/OpenIdConnectApplicationSettings'
    x-okta-defined-as:
      name: oidc_client
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  OpenIdConnectApplicationConsentMethod:
    enum:
      - REQUIRED
      - TRUSTED
    type: string
    x-okta-tags:
      - Application
  OpenIdConnectApplicationIssuerMode:
    enum:
      - CUSTOM_URL
      - ORG_URL
    type: string
    x-okta-tags:
      - Application
  OpenIdConnectApplicationSettings:
    properties:
      oauthClient:
        $ref: '#/definitions/OpenIdConnectApplicationSettingsClient'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  OpenIdConnectApplicationSettingsClient:
    properties:
      application_type:
        $ref: '#/definitions/OpenIdConnectApplicationType'
      client_uri:
        type: string
      consent_method:
        $ref: '#/definitions/OpenIdConnectApplicationConsentMethod'
      grant_types:
        items:
          $ref: '#/definitions/OAuthGrantType'
        type: array
      initiate_login_uri:
        type: string
      issuer_mode:
        $ref: '#/definitions/OpenIdConnectApplicationIssuerMode'
      jwks:
        $ref: '#/definitions/OpenIdConnectApplicationSettingsClientKeys'
      logo_uri:
        type: string
      policy_uri:
        type: string
      post_logout_redirect_uris:
        items:
          type: string
        type: array
      redirect_uris:
        items:
          type: string
        type: array
      refresh_token:
        $ref: '#/definitions/OpenIdConnectApplicationSettingsRefreshToken'
      response_types:
        items:
          $ref: '#/definitions/OAuthResponseType'
        type: array
      tos_uri:
        type: string
    x-okta-tags:
      - Application
  OpenIdConnectApplicationSettingsClientKeys:
    properties:
      keys:
        items:
          $ref: '#/definitions/JsonWebKey'
        type: array
    x-okta-tags:
      - Application
  OpenIdConnectApplicationSettingsRefreshToken:
    properties:
      leeway:
        type: integer
      rotation_type:
        $ref: '#/definitions/OpenIdConnectRefreshTokenRotationType'
    type: object
    x-okta-tags:
      - Application
  OpenIdConnectApplicationType:
    enum:
      - web
      - native
      - browser
      - service
    type: string
    x-okta-tags:
      - Application
  OpenIdConnectRefreshTokenRotationType:
    enum:
      - rotate
      - static
    type: string
    x-okta-tags:
      - Application
  PasswordCredential:
    properties:
      hash:
        $ref: '#/definitions/PasswordCredentialHash'
      hook:
        $ref: '#/definitions/PasswordCredentialHook'
      value:
        format: password
        type: string
    type: object
    x-okta-tags:
      - User
  PasswordCredentialHash:
    properties:
      algorithm:
        $ref: '#/definitions/PasswordCredentialHashAlgorithm'
      salt:
        type: string
      saltOrder:
        type: string
      value:
        type: string
      workFactor:
        type: integer
    type: object
    x-okta-tags:
      - User
  PasswordCredentialHashAlgorithm:
    enum:
      - BCRYPT
      - SHA-512
      - SHA-256
      - SHA-1
      - MD5
    type: string
    x-okta-tags:
      - User
  PasswordCredentialHook:
    properties:
      type:
        type: string
    type: object
    x-okta-tags:
      - User
  PasswordDictionary:
    properties:
      common:
        $ref: '#/definitions/PasswordDictionaryCommon'
    type: object
    x-okta-tags:
      - Policy
  PasswordDictionaryCommon:
    properties:
      exclude:
        default: false
        type: boolean
    type: object
    x-okta-tags:
      - Policy
  PasswordExpirationPolicyRuleCondition:
    properties:
      number:
        type: integer
      unit:
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicy:
    properties:
      conditions:
        $ref: '#/definitions/PasswordPolicyConditions'
      settings:
        $ref: '#/definitions/PasswordPolicySettings'
    type: object
    x-okta-parent: '#/definitions/Policy'
    x-okta-tags:
      - Policy
  PasswordPolicyAuthenticationProviderCondition:
    properties:
      include:
        items:
          type: string
        type: array
      provider:
        enum:
          - ACTIVE_DIRECTORY
          - ANY
          - LDAP
          - OKTA
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyConditions:
    properties:
      authProvider:
        $ref: '#/definitions/PasswordPolicyAuthenticationProviderCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-parent: '#/definition/PolicyRuleConditions'
    x-okta-tags:
      - Policy
  PasswordPolicyDelegationSettings:
    properties:
      options:
        $ref: '#/definitions/PasswordPolicyDelegationSettingsOptions'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyDelegationSettingsOptions:
    properties:
      skipUnlock:
        type: boolean
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettings:
    properties:
      age:
        $ref: '#/definitions/PasswordPolicyPasswordSettingsAge'
      complexity:
        $ref: '#/definitions/PasswordPolicyPasswordSettingsComplexity'
      lockout:
        $ref: '#/definitions/PasswordPolicyPasswordSettingsLockout'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettingsAge:
    properties:
      expireWarnDays:
        default: 0
        type: integer
      historyCount:
        default: 0
        type: integer
      maxAgeDays:
        default: 0
        type: integer
      minAgeMinutes:
        default: 0
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettingsComplexity:
    properties:
      dictionary:
        $ref: '#/definitions/PasswordDictionary'
      excludeAttributes:
        default: 1
        items:
          type: string
        type: array
      excludeUsername:
        default: true
        type: boolean
      minLength:
        default: 8
        type: integer
      minLowerCase:
        default: 1
        type: integer
      minNumber:
        default: 1
        type: integer
      minSymbol:
        default: 1
        type: integer
      minUpperCase:
        default: 1
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettingsLockout:
    properties:
      autoUnlockMinutes:
        type: integer
      maxAttempts:
        type: integer
      showLockoutFailures:
        type: boolean
      userLockoutNotificationChannels:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryEmail:
    properties:
      properties:
        $ref: '#/definitions/PasswordPolicyRecoveryEmailProperties'
      status:
        enum:
          - ACTIVE
          - INACTIVE
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryEmailProperties:
    properties:
      recoveryToken:
        $ref: '#/definitions/PasswordPolicyRecoveryEmailRecoveryToken'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryEmailRecoveryToken:
    properties:
      tokenLifetimeMinutes:
        default: 10080
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryFactorSettings:
    properties:
      status:
        default: INACTIVE
        enum:
          - ACTIVE
          - INACTIVE
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryFactors:
    properties:
      okta_call:
        $ref: '#/definitions/PasswordPolicyRecoveryFactorSettings'
      okta_email:
        $ref: '#/definitions/PasswordPolicyRecoveryEmail'
      okta_sms:
        $ref: '#/definitions/PasswordPolicyRecoveryFactorSettings'
      recovery_question:
        $ref: '#/definitions/PasswordPolicyRecoveryQuestion'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryQuestion:
    properties:
      properties:
        $ref: '#/definitions/PasswordPolicyRecoveryQuestionProperties'
        readOnly: true
      status:
        enum:
          - ACTIVE
          - INACTIVE
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryQuestionComplexity:
    properties:
      minLength:
        readOnly: true
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryQuestionProperties:
    properties:
      complexity:
        $ref: '#/definitions/PasswordPolicyRecoveryQuestionComplexity'
        readOnly: true
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoverySettings:
    properties:
      factors:
        $ref: '#/definitions/PasswordPolicyRecoveryFactors'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRule:
    properties:
      actions:
        $ref: '#/definitions/PasswordPolicyRuleActions'
        readOnly: false
      conditions:
        $ref: '#/definitions/PasswordPolicyRuleConditions'
        readOnly: false
      name:
        type: string
    type: object
    x-okta-parent: '#/definitions/PolicyRule'
    x-okta-tags:
      - Policy
  PasswordPolicyRuleAction:
    properties:
      access:
        enum:
          - ALLOW
          - DENY
        readOnly: false
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRuleActions:
    properties:
      passwordChange:
        $ref: '#/definitions/PasswordPolicyRuleAction'
      selfServicePasswordReset:
        $ref: '#/definitions/PasswordPolicyRuleAction'
      selfServiceUnlock:
        $ref: '#/definitions/PasswordPolicyRuleAction'
    x-okta-tags:
      - Policy
  PasswordPolicyRuleConditions:
    properties:
      network:
        $ref: '#/definitions/PolicyNetworkCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-tags:
      - Policy
  PasswordPolicySettings:
    properties:
      delegation:
        $ref: '#/definitions/PasswordPolicyDelegationSettings'
      password:
        $ref: '#/definitions/PasswordPolicyPasswordSettings'
      recovery:
        $ref: '#/definitions/PasswordPolicyRecoverySettings'
    type: object
    x-okta-tags:
      - Policy
  Platforms:
    enum:
      - IOS
      - ANDROID
      - OSX
      - WINDOWS
    type: string
    x-okta-tags:
      - Policy
  PlatformConditionEvaluatorPlatform:
    properties:
      os:
        $ref: '#/definitions/PlatformConditionEvaluatorPlatformOperatingSystem'
      type:
        enum:
          - DESKTOP
          - MOBILE
          - OTHER
          - ANY
        type: string
    type: object
    x-okta-tags:
      - Policy
  PlatformConditionEvaluatorPlatformOperatingSystem:
    properties:
      expression:
        type: string
      type:
        enum:
          - ANDROID
          - IOS
          - WINDOWS
          - OSX
          - OTHER
          - ANY
        type: string
      version:
        $ref: '#/definitions/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
    type: object
    x-okta-tags:
      - Policy
  PlatformConditionEvaluatorPlatformOperatingSystemVersion:
    properties:
      matchType:
        enum:
          - EXPRESSION
          - SEMVER
        type: string
      value:
        type: string
    type: object
    x-okta-tags:
      - Policy
  PlatformPolicyRuleCondition:
    properties:
      exclude:
        items:
          $ref: '#/definitions/PlatformConditionEvaluatorPlatform'
        type: array
      include:
        items:
          $ref: '#/definitions/PlatformConditionEvaluatorPlatform'
        type: array
    type: object
    x-okta-tags:
      - Policy
  Policy:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      conditions:
        $ref: '#/definitions/PolicyRuleConditions'
      created:
        format: date-time
        readOnly: true
        type: string
      description:
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      priority:
        type: integer
      status:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      system:
        type: boolean
      type:
        $ref: '#/definitions/PolicyType'
    type: object
    x-okta-crud:
      - alias: read
        arguments:
          - dest: policyId
            src: id
        operationId: getPolicy
      - alias: update
        arguments:
          - dest: policyId
            src: id
          - dest: policy
            self: true
        operationId: updatePolicy
      - alias: delete
        arguments:
          - dest: policyId
            src: id
        operationId: deletePolicy
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: policyId
            src: id
        operationId: activatePolicy
      - alias: deactivate
        arguments:
          - dest: policyId
            src: id
        operationId: deactivatePolicy
      - alias: listPolicyRules
        arguments:
          - dest: policyId
            src: id
        operationId: listPolicyRules
      - alias: createRule
        arguments:
          - dest: policyId
            src: id
        operationId: createPolicyRule
      - alias: getPolicyRule
        arguments:
          - dest: policyId
            src: id
        operationId: getPolicyRule
    x-okta-tags:
      - Policy
    x-openapi-v3-discriminator:
      mapping:
        IDP_DISCOVERY: '#/definitions/IdentityProviderPolicy'
        OAUTH_AUTHORIZATION_POLICY: '#/definitions/OAuthAuthorizationPolicy'
        OKTA_SIGN_ON: '#/definitions/OktaSignOnPolicy'
        PASSWORD: '#/definitions/PasswordPolicy'
      propertyName: type
  PolicyAccountLink:
    properties:
      action:
        enum:
          - AUTO
          - DISABLED
        type: string
      filter:
        $ref: '#/definitions/PolicyAccountLinkFilter'
    type: object
    x-okta-tags:
      - Policy
  PolicyAccountLinkFilter:
    properties:
      groups:
        $ref: '#/definitions/PolicyAccountLinkFilterGroups'
    type: object
    x-okta-tags:
      - Policy
  PolicyAccountLinkFilterGroups:
    properties:
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  PolicyNetworkCondition:
    properties:
      connection:
        enum:
          - ANYWHERE
          - ZONE
        type: string
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  PolicyPeopleCondition:
    properties:
      groups:
        $ref: '#/definitions/GroupCondition'
      users:
        $ref: '#/definitions/UserCondition'
    type: object
    x-okta-tags:
      - Policy
  PolicyRule:
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      priority:
        type: integer
      status:
        default: ACTIVE
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      system:
        default: false
        type: boolean
      type:
        enum:
          - SIGN_ON
          - PASSWORD
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: ruleId
            src: id
          - dest: policyRule
            self: true
          - dest: policyId
            parentSrc: id
        operationId: updatePolicyRule
      - alias: delete
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: deletePolicyRule
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: activatePolicyRule
      - alias: deactivate
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: deactivatePolicyRule
    x-okta-tags:
      - Policy
    x-openapi-v3-discriminator:
      mapping:
        PASSWORD: '#/definitions/PasswordPolicyRule'
        SIGN_ON: '#/definitions/OktaSignOnPolicyRule'
      propertyName: type
  PolicyRuleAuthContextCondition:
    properties:
      authType:
        enum:
          - ANY
          - RADIUS
        type: string
    type: object
    x-okta-tags:
      - Policy
  PolicyRuleConditions:
    properties:
      app:
        $ref: '#/definitions/AppAndInstancePolicyRuleCondition'
      apps:
        $ref: '#/definitions/AppInstancePolicyRuleCondition'
      authContext:
        $ref: '#/definitions/PolicyRuleAuthContextCondition'
      authProvider:
        $ref: '#/definitions/PasswordPolicyAuthenticationProviderCondition'
      beforeScheduledAction:
        $ref: '#/definitions/BeforeScheduledActionPolicyRuleCondition'
      clients:
        $ref: '#/definitions/ClientPolicyCondition'
      context:
        $ref: '#/definitions/ContextPolicyRuleCondition'
      device:
        $ref: '#/definitions/DevicePolicyRuleCondition'
      grantTypes:
        $ref: '#/definitions/GrantTypePolicyRuleCondition'
      groups:
        $ref: '#/definitions/GroupPolicyRuleCondition'
      identityProvider:
        $ref: '#/definitions/IdentityProviderPolicyRuleCondition'
      mdmEnrollment:
        $ref: '#/definitions/MDMEnrollmentPolicyRuleCondition'
      network:
        $ref: '#/definitions/PolicyNetworkCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
      platform:
        $ref: '#/definitions/PlatformPolicyRuleCondition'
      risk:
        $ref: '#/definitions/RiskPolicyRuleCondition'
      riskScore:
        $ref: '#/definitions/RiskScorePolicyRuleCondition'
      scopes:
        $ref: '#/definitions/OAuth2ScopesMediationPolicyRuleCondition'
      userIdentifier:
        $ref: '#/definitions/UserIdentifierPolicyRuleCondition'
      userStatus:
        $ref: '#/definitions/UserStatusPolicyRuleCondition'
      users:
        $ref: '#/definitions/UserPolicyRuleCondition'
    type: object
    x-okta-tags:
      - Policy
  PolicySubject:
    properties:
      filter:
        type: string
      format:
        items:
          type: string
        type: array
      matchAttribute:
        type: string
      matchType:
        $ref: '#/definitions/PolicySubjectMatchType'
      userNameTemplate:
        $ref: '#/definitions/PolicyUserNameTemplate'
    type: object
    x-okta-tags:
      - Policy
  PolicySubjectMatchType:
    enum:
      - USERNAME
      - EMAIL
      - USERNAME_OR_EMAIL
      - CUSTOM_ATTRIBUTE
    type: string
    x-okta-tags:
      - Policy
  PolicyType:
    enum:
      - OAUTH_AUTHORIZATION_POLICY
      - OKTA_SIGN_ON
      - PASSWORD
      - IDP_DISCOVERY
    type: string
    x-okta-tags:
      - Policy
  PolicyUserNameTemplate:
    properties:
      template:
        type: string
    type: object
    x-okta-tags:
      - Policy
  Protocol:
    properties:
      algorithms:
        $ref: '#/definitions/ProtocolAlgorithms'
      credentials:
        $ref: '#/definitions/IdentityProviderCredentials'
      endpoints:
        $ref: '#/definitions/ProtocolEndpoints'
      issuer:
        $ref: '#/definitions/ProtocolEndpoint'
      relayState:
        $ref: '#/definitions/ProtocolRelayState'
      scopes:
        items:
          type: string
        type: array
      settings:
        $ref: '#/definitions/ProtocolSettings'
      type:
        enum:
          - SAML2
          - OIDC
          - OAUTH2
          - MTLS
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  ProtocolAlgorithmType:
    properties:
      signature:
        $ref: '#/definitions/ProtocolAlgorithmTypeSignature'
    type: object
    x-okta-tags:
      - IdentityProvider
  ProtocolAlgorithmTypeSignature:
    properties:
      algorithm:
        type: string
      scope:
        enum:
          - RESPONSE
          - TOKEN
          - ANY
          - REQUEST
          - NONE
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  ProtocolAlgorithms:
    properties:
      request:
        $ref: '#/definitions/ProtocolAlgorithmType'
      response:
        $ref: '#/definitions/ProtocolAlgorithmType'
    type: object
    x-okta-tags:
      - IdentityProvider
  ProtocolEndpoint:
    properties:
      binding:
        enum:
          - HTTP-POST
          - HTTP-REDIRECT
        type: string
      destination:
        type: string
      type:
        enum:
          - INSTANCE
          - ORG
        type: string
      url:
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  ProtocolEndpoints:
    properties:
      acs:
        $ref: '#/definitions/ProtocolEndpoint'
      authorization:
        $ref: '#/definitions/ProtocolEndpoint'
      jwks:
        $ref: '#/definitions/ProtocolEndpoint'
      metadata:
        $ref: '#/definitions/ProtocolEndpoint'
      slo:
        $ref: '#/definitions/ProtocolEndpoint'
      sso:
        $ref: '#/definitions/ProtocolEndpoint'
      token:
        $ref: '#/definitions/ProtocolEndpoint'
      userInfo:
        $ref: '#/definitions/ProtocolEndpoint'
    type: object
    x-okta-tags:
      - IdentityProvider
  ProtocolRelayState:
    properties:
      format:
        $ref: '#/definitions/ProtocolRelayStateFormat'
    type: object
    x-okta-tags:
      - IdentityProvider
  ProtocolRelayStateFormat:
    enum:
      - OPAQUE
      - FROM_URL
    type: string
    x-okta-tags:
      - IdentityProvider
  ProtocolSettings:
    properties:
      nameFormat:
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  Provisioning:
    properties:
      action:
        enum:
          - AUTO
          - CALLOUT
          - DISABLED
        type: string
      conditions:
        $ref: '#/definitions/ProvisioningConditions'
      groups:
        $ref: '#/definitions/ProvisioningGroups'
      profileMaster:
        type: boolean
    type: object
    x-okta-tags:
      - IdentityProvider
  ProvisioningConditions:
    properties:
      deprovisioned:
        $ref: '#/definitions/ProvisioningDeprovisionedCondition'
      suspended:
        $ref: '#/definitions/ProvisioningSuspendedCondition'
    type: object
    x-okta-tags:
      - IdentityProvider
  ProvisioningDeprovisionedCondition:
    properties:
      action:
        enum:
          - NONE
          - REACTIVATE
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  ProvisioningGroups:
    properties:
      action:
        enum:
          - NONE
          - APPEND
          - SYNC
          - ASSIGN
        type: string
      assignments:
        items:
          type: string
        type: array
      filter:
        items:
          type: string
        type: array
      sourceAttributeName:
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  ProvisioningSuspendedCondition:
    properties:
      action:
        enum:
          - NONE
          - UNSUSPEND
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  PushUserFactor:
    properties:
      expiresAt:
        format: date-time
        type: string
        readOnly: true
      factorResult:
        $ref: '#/definitions/FactorResultType'
      profile:
        $ref: '#/definitions/PushUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  PushUserFactorProfile:
    properties:
      credentialId:
        type: string
      deviceToken:
        type: string
      deviceType:
        type: string
      name:
        type: string
      platform:
        type: string
      version:
        type: string
    x-okta-tags:
      - UserFactor
  RecoveryQuestionCredential:
    properties:
      answer:
        type: string
      question:
        type: string
    type: object
    x-okta-tags:
      - User
  ResetPasswordToken:
    properties:
      resetPasswordUrl:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - User
  ResponseLinks:
    properties: {}
    type: object
    x-okta-tags:
      - User
  RiskPolicyRuleCondition:
    properties:
      behaviors:
        items:
          type: string
        type: array
        uniqueItems: true
    type: object
    x-okta-tags:
      - Policy
  RiskScorePolicyRuleCondition:
    properties:
      level:
        type: string
    type: object
    x-okta-tags:
      - Policy
  Role:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      assignmentType:
        $ref: '#/definitions/RoleAssignmentType'
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      description:
        type: string
      id:
        readOnly: true
        type: string
      label:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      status:
        $ref: '#/definitions/RoleStatus'
        readOnly: true
      type:
        $ref: '#/definitions/RoleType'
        type: string
    type: object
    x-okta-operations:
      - alias: addAdminGroupTarget
        arguments:
          - dest: roleId
            src: id
          - dest: groupId
            parentSrc: id
        operationId: addGroupTargetToGroupAdministratorRoleForGroup
      - alias: addAppInstanceTargetToAdminRole
        arguments:
          - dest: roleId
            src: id
          - dest: groupId
            parentSrc: id
        operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
      - alias: addAppTargetToAdminRole
        arguments:
          - dest: roleId
            src: id
          - dest: groupId
            parentSrc: id
        operationId: addApplicationTargetToAdminRoleGivenToGroup
      - alias: addAllAppsAsTargetToRole
        arguments:
          - dest: roleId
            src: id
          - dest: userId
            parentSrc: id
        operationId: addAllAppsAsTargetToRole
      - alias: addAppTargetToAppAdminRoleForUser
        arguments:
          - dest: roleId
            src: id
          - dest: userId
            parentSrc: id
        operationId: addApplicationTargetToAppAdminRoleForUser
      - alias: addAppTargetToAdminRoleForUser
        arguments:
          - dest: roleId
            src: id
          - dest: userId
            parentSrc: id
        operationId: addApplicationTargetToAdminRoleForUser
    x-okta-tags:
      - User
  RoleAssignmentType:
    enum:
      - GROUP
      - USER
    type: string
    x-okta-tags:
      - Role
  RoleStatus:
    enum:
      - ACTIVE
      - INACTIVE
    type: string
    x-okta-tags:
      - User
  RoleType:
    enum:
      - SUPER_ADMIN
      - ORG_ADMIN
      - APP_ADMIN
      - USER_ADMIN
      - HELP_DESK_ADMIN
      - READ_ONLY_ADMIN
      - MOBILE_ADMIN
      - API_ACCESS_MANAGEMENT_ADMIN
      - REPORT_ADMIN
    type: string
    x-okta-tags:
      - Role
  SamlApplication:
    properties:
      settings:
        $ref: '#/definitions/SamlApplicationSettings'
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  SamlApplicationV1:
    properties:
      settings:
        $ref: '#/definitions/SamlApplicationSettings'
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  SamlApplicationSettings:
    properties:
      signOn:
        $ref: '#/definitions/SamlApplicationSettingsSignOn'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SamlApplicationSettingsSignOn:
    properties:
      acsEndpoints:
        items:
          $ref: '#/definitions/AcsEndpoint'
        type: array
      allowMultipleAcsEndpoints:
        type: boolean
      assertionSigned:
        type: boolean
      attributeStatements:
        items:
          $ref: '#/definitions/SamlAttributeStatement'
        type: array
      audience:
        type: string
      audienceOverride:
        type: string
      authnContextClassRef:
        type: string
      defaultRelayState:
        type: string
      destination:
        type: string
      destinationOverride:
        type: string
      digestAlgorithm:
        type: string
      honorForceAuthn:
        type: boolean
      idpIssuer:
        type: string
      recipient:
        type: string
      recipientOverride:
        type: string
      requestCompressed:
        type: boolean
      responseSigned:
        type: boolean
      signatureAlgorithm:
        type: string
      spIssuer:
        type: string
      ssoAcsUrl:
        type: string
      ssoAcsUrlOverride:
        type: string
      subjectNameIdFormat:
        type: string
      subjectNameIdTemplate:
        type: string
    x-okta-tags:
      - Application
  SamlAttributeStatement:
    properties:
      filterType:
        type: string
      filterValue:
        type: string
      name:
        type: string
      namespace:
        type: string
      type:
        type: string
      values:
        items:
          type: string
        type: array
    x-okta-tags:
      - Application
  ScheduledUserLifecycleAction:
    properties:
      status:
        enum:
          - ACTIVE
          - INACTIVE
          - PENDING
          - DELETED
          - EXPIRED_PASSWORD
          - ACTIVATING
          - SUSPENDED
          - DELETING
        type: string
    type: object
    x-okta-tags:
      - Policy
  SchemeApplicationCredentials:
    properties:
      password:
        $ref: '#/definitions/PasswordCredential'
      revealPassword:
        type: boolean
      scheme:
        $ref: '#/definitions/ApplicationCredentialsScheme'
      signing:
        $ref: '#/definitions/ApplicationCredentialsSigning'
      userName:
        type: string
    x-okta-parent: '#/definitions/ApplicationCredentials'
    x-okta-tags:
      - Application
  Scope:
    properties:
      stringValue:
        type: string
      type:
        $ref: '#/definitions/ScopeType'
    type: object
    x-okta-tags:
      - Role
  ScopeType:
    enum:
      - CORS
      - REDIRECT
    type: string
    x-okta-tags:
      - Role
  SecurePasswordStoreApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
      name:
        default: template_sps
      settings:
        $ref: '#/definitions/SecurePasswordStoreApplicationSettings'
    x-okta-defined-as:
      name: template_sps
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  SecurePasswordStoreApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/SecurePasswordStoreApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SecurePasswordStoreApplicationSettingsApplication:
    properties:
      optionalField1:
        type: string
      optionalField1Value:
        type: string
      optionalField2:
        type: string
      optionalField2Value:
        type: string
      optionalField3:
        type: string
      optionalField3Value:
        type: string
      passwordField:
        type: string
      url:
        type: string
      usernameField:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  SecurityQuestion:
    properties:
      answer:
        type: string
      question:
        type: string
      questionText:
        type: string
    x-okta-tags:
      - UserFactor
  SecurityQuestionUserFactor:
    properties:
      profile:
        $ref: '#/definitions/SecurityQuestionUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  SecurityQuestionUserFactorProfile:
    properties:
      answer:
        type: string
      question:
        type: string
      questionText:
        type: string
    x-okta-tags:
      - UserFactor
  Session:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      amr:
        items:
          $ref: '#/definitions/SessionAuthenticationMethod'
        readOnly: true
        type: array
      createdAt:
        format: date-time
        readOnly: true
        type: string
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      idp:
        $ref: '#/definitions/SessionIdentityProvider'
        readOnly: true
      lastFactorVerification:
        format: date-time
        readOnly: true
        type: string
      lastPasswordVerification:
        format: date-time
        readOnly: true
        type: string
      login:
        readOnly: true
        type: string
      status:
        $ref: '#/definitions/SessionStatus'
        readOnly: true
      userId:
        readOnly: true
        type: string
    type: object
    x-okta-crud:
      - alias: read
        arguments:
          - dest: sessionId
            src: id
        operationId: getSession
      - alias: delete
        arguments:
          - dest: sessionId
            src: id
        operationId: endSession
    x-okta-operations:
      - alias: refresh
        arguments:
          - dest: sessionId
            src: id
        operationId: refreshSession
    x-okta-tags:
      - Session
  SessionAuthenticationMethod:
    enum:
      - pwd
      - swk
      - hwk
      - otp
      - sms
      - tel
      - geo
      - fpt
      - kba
      - mfa
    type: string
    x-okta-tags:
      - Session
  SessionIdentityProvider:
    properties:
      id:
        readOnly: true
        type: string
      type:
        $ref: '#/definitions/SessionIdentityProviderType'
        readOnly: true
    type: object
    x-okta-tags:
      - Session
  SessionIdentityProviderType:
    enum:
      - ACTIVE_DIRECTORY
      - LDAP
      - OKTA
      - FEDERATION
      - SOCIAL
    type: string
    x-okta-tags:
      - Session
  SessionStatus:
    enum:
      - ACTIVE
      - MFA_ENROLL
      - MFA_REQUIRED
    type: string
    x-okta-tags:
      - Session
  SmsTemplate:
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      template:
        type: string
      translations:
        $ref: '#/definitions/SmsTemplateTranslations'
      type:
        $ref: '#/definitions/SmsTemplateType'
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: smsTemplate
            self: true
        operationId: createSmsTemplate
      - alias: read
        arguments: []
        operationId: getSmsTemplate
      - alias: update
        arguments:
          - dest: templateId
            src: id
          - dest: smsTemplate
            self: true
        operationId: updateSmsTemplate
      - alias: delete
        arguments:
          - dest: templateId
            src: id
        operationId: deleteSmsTemplate
    x-okta-operations:
      - alias: partialUpdate
        arguments:
          - dest: templateId
            src: id
          - dest: smsTemplate
            self: true
        operationId: partialUpdateSmsTemplate
    x-okta-tags:
      - Template
  SmsTemplateTranslations:
    type: object
    x-okta-extensible: true
    x-okta-tags:
      - Template
  SmsTemplateType:
    enum:
      - SMS_VERIFY_CODE
    type: string
    x-okta-tags:
      - Template
  SmsUserFactor:
    properties:
      profile:
        $ref: '#/definitions/SmsUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  SmsUserFactorProfile:
    properties:
      phoneNumber:
        type: string
    x-okta-tags:
      - UserFactor
  SocialAuthToken:
    properties:
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      scopes:
        items:
          type: string
        type: array
      token:
        type: string
      tokenAuthScheme:
        type: string
      tokenType:
        enum:
          - ACCESS
          - REFRESH
        type: string
    type: object
    x-okta-tags:
      - IdentityProvider
  SwaApplication:
    properties:
      name:
        default: template_swa
      settings:
        $ref: '#/definitions/SwaApplicationSettings'
    x-okta-defined-as:
      name: template_swa
    x-okta-parent: '#/definitions/BrowserPluginApplication'
    x-okta-tags:
      - Application
  SwaApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/SwaApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SwaApplicationSettingsApplication:
    properties:
      buttonField:
        type: string
      loginUrlRegex:
        type: string
      passwordField:
        type: string
      url:
        type: string
      usernameField:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  SwaThreeFieldApplication:
    properties:
      name:
        default: template_swa3field
      settings:
        $ref: '#/definitions/SwaThreeFieldApplicationSettings'
    x-okta-defined-as:
      name: template_swa3field
    x-okta-parent: '#/definitions/BrowserPluginApplication'
    x-okta-tags:
      - Application
  SwaThreeFieldApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/SwaThreeFieldApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SwaThreeFieldApplicationSettingsApplication:
    properties:
      buttonSelector:
        type: string
      extraFieldSelector:
        type: string
      extraFieldValue:
        type: string
      loginUrlRegex:
        type: string
      passwordSelector:
        type: string
      targetURL:
        type: string
      userNameSelector:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  TempPassword:
    properties:
      tempPassword:
        readOnly: true
        type: string
    x-okta-tags:
      - User
  TokenAuthorizationServerPolicyRuleAction:
    properties:
      accessTokenLifetimeMinutes:
        type: integer
      refreshTokenLifetimeMinutes:
        type: integer
      refreshTokenWindowMinutes:
        type: integer
    type: object
    x-okta-tags:
      - AuthorizationServerPolicy
  TokenUserFactor:
    properties:
      profile:
        $ref: '#/definitions/TokenUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  TokenUserFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-tags:
      - UserFactor
  TotpUserFactor:
    properties:
      profile:
        $ref: '#/definitions/TotpUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  TotpUserFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-tags:
      - UserFactor
  TrustedOrigin:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      createdBy:
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      lastUpdatedBy:
        type: string
      name:
        type: string
      origin:
        type: string
      scopes:
        items:
          $ref: '#/definitions/Scope'
        type: array
      status:
        type: string
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: trustedOrigin
            self: true
        operationId: createOrigin
      - alias: read
        arguments: []
        operationId: getOrigin
      - alias: update
        arguments:
          - dest: trustedOriginId
            src: id
          - dest: trustedOrigin
            self: true
        operationId: updateOrigin
      - alias: delete
        arguments:
          - dest: trustedOriginId
            src: id
        operationId: deleteOrigin
    x-okta-tags:
      - TrustedOrigin
  U2fUserFactor:
    properties:
      profile:
        $ref: '#/definitions/U2fUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  U2fUserFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-tags:
      - UserFactor
  User:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      activated:
        format: date-time
        readOnly: true
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/UserCredentials'
      id:
        readOnly: true
        type: string
      lastLogin:
        format: date-time
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      passwordChanged:
        format: date-time
        readOnly: true
        type: string
      profile:
        $ref: '#/definitions/UserProfile'
      status:
        $ref: '#/definitions/UserStatus'
        readOnly: true
      statusChanged:
        format: date-time
        readOnly: true
        type: string
      transitioningToStatus:
        $ref: '#/definitions/UserStatus'
        readOnly: true
      type:
        $ref: '#/definitions/UserType'
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: user
            self: true
        operationId: createUser
      - alias: read
        arguments: []
        operationId: getUser
      - alias: update
        arguments:
          - dest: userId
            src: id
          - dest: user
            self: true
        operationId: updateUser
      - alias: delete
        arguments:
          - dest: userId
            src: id
          - dest: user
            self: true
        operationId: deactivateOrDeleteUser
    x-okta-operations:
      - alias: listAppLinks
        arguments:
          - dest: userId
            src: id
        operationId: listAppLinks
      - alias: changePassword
        arguments:
          - dest: userId
            src: id
        operationId: changePassword
      - alias: changeRecoveryQuestion
        arguments:
          - dest: userId
            src: id
        operationId: changeRecoveryQuestion
      - alias: forgotPasswordSetNewPassword
        arguments:
          - dest: userId
            src: id
        operationId: forgotPasswordSetNewPassword
      - alias: forgotPasswordGenerateOneTimeToken
        arguments:
          - dest: userId
            src: id
        operationId: forgotPasswordGenerateOneTimeToken
      - alias: assignRole
        arguments:
          - dest: userId
            src: id
        operationId: assignRoleToUser
      - alias: removeRole
        arguments:
          - dest: userId
            src: id
        operationId: removeRoleFromUser
      - alias: listGroupTargets
        arguments:
          - dest: userId
            src: id
        operationId: listGroupTargetsForRole
      - alias: removeGroupTarget
        arguments:
          - dest: userId
            src: id
        operationId: removeGroupTargetFromRole
      - alias: addGroupTarget
        arguments:
          - dest: userId
            src: id
        operationId: addGroupTargetToRole
      - alias: listAssignedRoles
        arguments:
          - dest: userId
            src: id
        operationId: listAssignedRolesForUser
      - alias: addAllAppsAsTarget
        arguments:
          - dest: userId
            src: id
        operationId: addAllAppsAsTargetToRole
      - alias: listGroups
        arguments:
          - dest: userId
            src: id
        operationId: listUserGroups
      - alias: listGrants
        arguments:
          - dest: userId
            src: id
        operationId: listUserGrants
      - alias: revokeGrants
        arguments:
          - dest: userId
            src: id
        operationId: revokeUserGrants
      - alias: revokeGrant
        arguments:
          - dest: userId
            src: id
        operationId: revokeUserGrant
      - alias: revokeGrantsForUserAndClient
        arguments:
          - dest: userId
            src: id
        operationId: revokeGrantsForUserAndClient
      - alias: listRefreshTokensForUserAndClient
        arguments:
          - dest: userId
            src: id
        operationId: listRefreshTokensForUserAndClient
      - alias: revokeTokenForUserAndClient
        arguments:
          - dest: userId
            src: id
        operationId: revokeTokenForUserAndClient
      - alias: getRefreshTokenForUserAndClient
        arguments:
          - dest: userId
            src: id
        operationId: getRefreshTokenForUserAndClient
      - alias: revokeTokensForUserAndClient
        arguments:
          - dest: userId
            src: id
        operationId: revokeTokensForUserAndClient
      - alias: listClients
        arguments:
          - dest: userId
            src: id
        operationId: listUserClients
      - alias: activate
        arguments:
          - dest: userId
            src: id
        operationId: activateUser
      - alias: reactivate
        arguments:
          - dest: userId
            src: id
        operationId: reactivateUser
      - alias: deactivate
        arguments:
          - dest: userId
            src: id
        operationId: deactivateUser
      - alias: suspend
        arguments:
          - dest: userId
            src: id
        operationId: suspendUser
      - alias: unsuspend
        arguments:
          - dest: userId
            src: id
        operationId: unsuspendUser
      - alias: resetPassword
        arguments:
          - dest: userId
            src: id
        operationId: resetPassword
      - alias: expirePassword
        arguments:
          - dest: userId
            src: id
        operationId: expirePassword
      - alias: expirePasswordAndGetTemporaryPassword
        arguments:
          - dest: userId
            src: id
        operationId: expirePasswordAndGetTemporaryPassword
      - alias: unlock
        arguments:
          - dest: userId
            src: id
        operationId: unlockUser
      - alias: resetFactors
        arguments:
          - dest: userId
            src: id
        operationId: resetFactors
      - alias: deleteFactor
        arguments:
          - dest: userId
            src: id
        operationId: deleteFactor
      - alias: addToGroup
        arguments:
          - dest: userId
            src: id
        description: Adds a user to a group with 'OKTA_GROUP' type
        operationId: addUserToGroup
      - alias: enrollFactor
        arguments:
          - dest: userId
            src: id
        operationId: enrollFactor
      - alias: listSupportedFactors
        arguments:
          - dest: userId
            src: id
        operationId: listSupportedFactors
      - alias: listFactors
        arguments:
          - dest: userId
            src: id
        operationId: listFactors
      - alias: listSupportedSecurityQuestions
        arguments:
          - dest: userId
            src: id
        operationId: listSupportedSecurityQuestions
      - alias: getFactor
        arguments:
          - dest: userId
            src: id
        operationId: getFactor
      - alias: setLinkedObject
        arguments:
          - dest: associatedUserId
            src: id
        operationId: setLinkedObjectForUser
      - alias: listIdentityProviders
        arguments:
          - dest: userId
            src: id
        operationId: listUserIdentityProviders
      - alias: getLinkedObjects
        arguments:
          - dest: userId
            src: id
        operationId: getLinkedObjectsForUser
      - alias: clearSessions
        arguments:
          - dest: userId
            src: id
        operationId: clearUserSessions
      - alias: removeLinkedObject
        arguments:
          - dest: userId
            src: id
        operationId: removeLinkedObjectForUser
    x-okta-tags:
      - User
  UserActivationToken:
    properties:
      activationToken:
        readOnly: true
        type: string
      activationUrl:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - User
  UserCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    x-okta-tags:
      - Policy
  UserCredentials:
    properties:
      password:
        $ref: '#/definitions/PasswordCredential'
      provider:
        $ref: '#/definitions/AuthenticationProvider'
      recovery_question:
        $ref: '#/definitions/RecoveryQuestionCredential'
    type: object
    x-okta-tags:
      - User
  UserFactor:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      factorType:
        $ref: '#/definitions/FactorType'
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      provider:
        $ref: '#/definitions/FactorProvider'
      status:
        $ref: '#/definitions/FactorStatus'
        readOnly: true
        type: string
      verify:
        $ref: '#/definitions/VerifyFactorRequest'
    type: object
    x-okta-crud:
      - alias: deleteFactor
        arguments:
          - dest: factorId
            src: id
          - dest: userId
            parentSrc: id
        operationId: deleteFactor
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: factorId
            src: id
          - dest: userId
            parentSrc: id
        operationId: activateFactor
      - alias: verify
        arguments:
          - dest: factorId
            src: id
          - dest: userId
            parentSrc: id
        operationId: verifyFactor
    x-okta-tags:
      - UserFactor
    x-openapi-v3-discriminator:
      mapping:
        call: '#/definitions/CallUserFactor'
        email: '#/definitions/EmailUserFactor'
        hotp: '#/definitions/CustomHotpUserFactor'
        push: '#/definitions/PushUserFactor'
        question: '#/definitions/SecurityQuestionUserFactor'
        sms: '#/definitions/SmsUserFactor'
        token: '#/definitions/TokenUserFactor'
        'token:hardware': '#/definitions/HardwareUserFactor'
        'token:software:totp': '#/definitions/TotpUserFactor'
        u2f: '#/definitions/U2fUserFactor'
        web: '#/definitions/WebUserFactor'
        webauthn: '#/definitions/WebAuthnUserFactor'
      propertyName: factorType
  UserIdentifierConditionEvaluatorPattern:
    properties:
      matchType:
        enum:
          - SUFFIX
          - EXPRESSION
          - STARTS_WITH
          - EQUALS
          - CONTAINS
        type: string
      value:
        type: string
    type: object
    x-okta-tags:
      - Policy
  UserIdentifierPolicyRuleCondition:
    properties:
      attribute:
        type: string
      patterns:
        items:
          $ref: '#/definitions/UserIdentifierConditionEvaluatorPattern'
        type: array
      type:
        enum:
          - IDENTIFIER
          - ATTRIBUTE
        type: string
    type: object
    x-okta-tags:
      - Policy
  UserIdentityProviderLinkRequest:
    properties:
      externalId:
        type: string
    type: object
    x-okta-tags:
      - Policy
  UserLifecycleAttributePolicyRuleCondition:
    properties:
      attributeName:
        type: string
      matchingValue:
        type: string
    type: object
    x-okta-tags:
      - Policy
  UserNextLogin:
    enum:
      - changePassword
    type: string
    x-okta-tags:
      - User
  UserPolicyRuleCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      inactivity:
        $ref: '#/definitions/InactivityPolicyRuleCondition'
      include:
        items:
          type: string
        type: array
      lifecycleExpiration:
        $ref: '#/definitions/LifecycleExpirationPolicyRuleCondition'
      passwordExpiration:
        $ref: '#/definitions/PasswordExpirationPolicyRuleCondition'
      userLifecycleAttribute:
        $ref: '#/definitions/UserLifecycleAttributePolicyRuleCondition'
    type: object
    x-okta-tags:
      - Policy
  UserProfile:
    properties:
      city:
        type: string
      costCenter:
        type: string
      countryCode:
        type: string
      department:
        type: string
      displayName:
        type: string
      division:
        type: string
      email:
        type: string
      employeeNumber:
        type: string
      firstName:
        type: string
      honorificPrefix:
        type: string
      honorificSuffix:
        type: string
      lastName:
        type: string
      locale:
        type: string
      login:
        type: string
      manager:
        type: string
      managerId:
        type: string
      middleName:
        type: string
      mobilePhone:
        type: string
      nickName:
        type: string
      organization:
        type: string
      postalAddress:
        type: string
      preferredLanguage:
        type: string
      primaryPhone:
        type: string
      profileUrl:
        type: string
      secondEmail:
        type: string
      state:
        type: string
      streetAddress:
        type: string
      timezone:
        type: string
      title:
        type: string
      userType:
        type: string
      zipCode:
        type: string
    type: object
    x-okta-extensible: true
    x-okta-tags:
      - User
  UserStatus:
    enum:
      - ACTIVE
      - DEPROVISIONED
      - LOCKED_OUT
      - PASSWORD_EXPIRED
      - PROVISIONED
      - RECOVERY
      - STAGED
      - SUSPENDED
    type: string
    x-okta-tags:
      - User
  UserStatusPolicyRuleCondition:
    properties:
      value:
        enum:
          - ACTIVE
          - INACTIVE
          - PENDING
          - DELETED
          - EXPIRED_PASSWORD
          - ACTIVATING
          - SUSPENDED
          - DELETING
        type: string
    type: object
    x-okta-tags:
      - Policy
  UserType:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      createdBy:
        readOnly: true
        type: string
      default:
        readOnly: true
        type: boolean
      description:
        type: string
      displayName:
        type: string
      id:
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      lastUpdatedBy:
        readOnly: true
        type: string
      name:
        type: string
    type: object
    x-okta-crud:
      - alias: create
        arguments:
          - dest: userType
            self: true
        operationId: createUserType
      - alias: update
        arguments:
          - dest: typeId
            src: id
          - dest: userType
            self: true
        operationId: updateUserType
      - alias: read
        arguments:
          - dest: typeId
            src: id
        operationId: getUserType
      - alias: delete
        arguments:
          - dest: typeId
            src: id
        operationId: deleteUserType
    x-okta-operations:
      - alias: replaceUserType
        arguments:
          - dest: roleId
            src: id
        operationId: replaceUserType
    x-okta-tags:
      - User
  VerifyFactorRequest:
    properties:
      activationToken:
        type: string
      answer:
        type: string
      attestation:
        type: string
      clientData:
        type: string
      nextPassCode:
        type: string
      passCode:
        type: string
      registrationData:
        type: string
      stateToken:
        type: string
    x-okta-tags:
      - UserFactor
  VerifyUserFactorResponse:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      factorResult:
        enum:
          - SUCCESS
          - EXPIRED
          - CHALLENGE
          - WAITING
          - FAILED
          - REJECTED
          - TIMEOUT
          - TIME_WINDOW_EXCEEDED
          - PASSCODE_REPLAYED
          - ERROR
        type: string
      factorResultMessage:
        type: string
    type: object
    x-okta-tags:
      - UserFactor
  WebAuthnUserFactor:
    properties:
      profile:
        $ref: '#/definitions/WebAuthnUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  WebAuthnUserFactorProfile:
    properties:
      authenticatorName:
        type: string
      credentialId:
        type: string
    x-okta-tags:
      - UserFactor
  WebUserFactor:
    properties:
      profile:
        $ref: '#/definitions/WebUserFactorProfile'
    x-okta-parent: '#/definitions/UserFactor'
    x-okta-tags:
      - UserFactor
  WebUserFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-tags:
      - UserFactor
  WsFederationApplication:
    properties:
      name:
        default: template_wsfed
      settings:
        $ref: '#/definitions/WsFederationApplicationSettings'
    x-okta-defined-as:
      name: template_wsfed
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  WsFederationApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/WsFederationApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  WsFederationApplicationSettingsApplication:
    properties:
      attributeStatements:
        type: string
      audienceRestriction:
        type: string
      authnContextClassRef:
        type: string
      groupFilter:
        type: string
      groupName:
        type: string
      groupValueFormat:
        type: string
      nameIDFormat:
        type: string
      realm:
        type: string
      siteURL:
        type: string
      usernameAttribute:
        type: string
      wReplyOverride:
        type: boolean
      wReplyURL:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
