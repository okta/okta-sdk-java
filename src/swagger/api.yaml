#
# Copyright 2017 Okta
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

{
  "swagger": "2.0",
  "info": {
    "title": "Okta API",
    "description": "Allows customers to easily access the Okta API",
    "termsOfService": "http://developer.okta.com/terms/",
    "contact": {
      "name": "Okta Developer Team",
      "email": "devex-public@okta.com",
      "url": "http://developer.okta.com/"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "externalDocs": {
    "description": "Find more info here",
    "url": "http://developer.okta.com/docs/api/getting_started/design_principles.html"
  },
  "host": "your-subdomain.okta.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "api_token": {
      "description": "SSWS {API Token}",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "paths": {
    "/api/v1/apps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Enumerates apps added to your organization with pagination. A subset of apps can be returned that match a supported filter expression or query.",
        "operationId": "listAppInstances",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "description": "Specifies the pagination cursor for the next page of apps",
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "description": "Specifies the number of results for a page",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "Filters apps by status, user.id, group.id or credentials.signing.kid expression",
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "description": "Traverses users link relationship and optionally embeds Application User resource",
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "default": false,
            "in": "query",
            "name": "includeNonDeleted",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/PublicAppInstance"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "List Applications",
        "tags": [
          "App"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Adds a new application to your Okta organization.",
        "operationId": "createAppInstance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicAppInstance"
            }
          },
          {
            "default": true,
            "description": "Executes activation lifecycle operation when creating the app",
            "in": "query",
            "name": "activate",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublicAppInstance"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "Add Application",
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/user/types": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listTypes",
        "parameters": [
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "category",
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/CVDAppUserProfile"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/user/types/{typeId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getAppUserType",
        "parameters": [
          {
            "in": "path",
            "name": "typeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CVDAppUserProfile"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/user/types/{typeId}/schemas": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listSchemasForType",
        "parameters": [
          {
            "in": "path",
            "name": "typeId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Schema"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "addSchemaToType",
        "parameters": [
          {
            "in": "path",
            "name": "typeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/user/types/{typeId}/schemas/{schemaId}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateSchemaByType",
        "parameters": [
          {
            "in": "path",
            "name": "typeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "schemaId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublicAppInstance"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicAppInstance"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublicAppInstance"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/catalog/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listGroupCatalogForApp",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGroup"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/catalog/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listUserCatalogForApp",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/connector": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getConnectorSettings",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConnectorSettings"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "upsertConnectorSettings",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectorSettings"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConnectorSettings"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/connector/test": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "testConnectorSettings",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectorSettings"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConnectorSettings"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/credentials/keys": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listAppKeys",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsonWebKeyRSAMediated"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/credentials/keys/generate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "generateKey",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "validityYears",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/credentials/keys/{keyId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getAppKey",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "keyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/credentials/keys/{keyId}/clone": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "cloneKey",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "keyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "targetAid",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listGroupAppAssignments",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/GroupAppAssignment"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/groups/{groupId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteGroupAppAssignment",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getGroupAppAssignment",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupAppAssignment"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "upsertGroupAppAssignment",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupAppAssignment"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupAppAssignment"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivateAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/servercertificate": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listCertificates",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UploadedCertificateMetadata"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/servercertificate/{certificateId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteCertificate",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "certificateId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getCertificate",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "certificateId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadedCertificateMetadata"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/user/imported/schema": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getImportedSchema",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/user/schemas": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listSchemas",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/Schema"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/user/schemas/{schemaId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getSchema",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "schemaId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateSchema",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "schemaId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/user/types": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listTypesForAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/CVDAppUserProfile"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/user/types/effective": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getEffectiveType",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CVDAppUserProfile"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/user/types/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getGroupAppAssignmentUserType",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CVDAppUserProfile"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/user/types/{typeId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getType",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "typeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CVDAppUserProfile"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateType",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "typeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CVDAppUserProfile"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CVDAppUserProfile"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listAppUsers",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "query_scope",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AppUser"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/users/{userId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "upsertAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppUser"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/users/{userId}/credentials/cyclePassword": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "resetSyncedPassword",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/users/{userId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/apps/{appId}/users/{userId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivateAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Enumerates groups in your organization with pagination. A subset of groups can be returned that match a supported filter expression or query.",
        "operationId": "listGroups",
        "parameters": [
          {
            "description": "Searches the name property of groups for matching value",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "description": "Filter expression for groups",
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "description": "Specifies the pagination cursor for the next page of groups",
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "description": "Specifies the number of group results in a page",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGroup"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "List Groups",
        "tags": [
          "Group"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Adds a new group with `OKTA_GROUP` type to your organization.",
        "operationId": "createGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "Add Group",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Lists all group rules for your organization.",
        "operationId": "listRules",
        "parameters": [
          {
            "default": -1,
            "description": "Specifies the number of rule results in a page",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "default": "",
            "description": "Specifies the pagination cursor for the next page of rules",
            "in": "query",
            "name": "after",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/GroupMembershipMediationRule"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "List Group Rules",
        "tags": [
          "Group"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a group rule to dynamically add users to the specified group if they match the condition",
        "operationId": "createRule",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "Create Group Rule",
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules/{ruleId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "removeUsers",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GroupMembershipMediationRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules/{ruleId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/rules/{ruleId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivateRule",
        "parameters": [
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/apps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listApps",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/PublicAppInstance"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/catalog/apps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listCatalogApps",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/PublicAppInstance"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/stats": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getUserGroupStats",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserGroupStats"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listGroupUsers",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/groups/{groupId}/users/{userId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "removeUserFromGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "addUserToGroup",
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/api/v1/idps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listTrusts",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "type",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/IdpTrust"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createTrust",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdpTrust"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTrust"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/credentials/keys": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listIdpKeys",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsonWebKeyRSAMediated"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/credentials/keys/{keyId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteKey",
        "parameters": [
          {
            "in": "path",
            "name": "keyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getIdpKey",
        "parameters": [
          {
            "in": "path",
            "name": "keyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateKey",
        "parameters": [
          {
            "in": "path",
            "name": "keyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/tx/{transactionId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getIdpTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTransaction"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/tx/{transactionId}/cancel": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "cancelIdpTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/tx/{transactionId}/lifecycle/confirm/{userId}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "confirmIdpTransactionUser",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdpTargetUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTransaction"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/tx/{transactionId}/lifecycle/provision": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "handleIdpTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdpTargetUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTransaction"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/tx/{transactionId}/source": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getIdpTransactionSourceUser",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpAppUser"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/tx/{transactionId}/target": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getIdpTransactionTargetUser",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTargetUser"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/tx/{transactionId}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listIdpTransactionMatchedUsers",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteTrust",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getTrust",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTrust"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateTrust",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdpTrust"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTrust"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/credentials/keys": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listSigningKeys",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/JsonWebKeyRSAMediated"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/credentials/keys/generate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "generateSigningKey",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "validityYears",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/credentials/keys/{keyId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getSigningKey",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "keyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonWebKeyRSAMediated"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateIdpAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTrust"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivateIdpAppInstance",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpTrust"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/metadata.xml": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getServiceProviderMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listIdpAppUsers",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/IdpAppUser"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/idps/{idpId}/users/{userId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "unlinkAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getIdpAppUser",
        "parameters": [
          {
            "in": "path",
            "name": "idpId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdpAppUser"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Idp"
        ]
      }
    },
    "/api/v1/meta/schemas/apps/{appId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getAppInstanceProfile",
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProfileDefinition"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Schema"
        ]
      }
    },
    "/api/v1/meta/schemas/user/default": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getUserSchemas",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProfileDefinition"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Schema"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updatePartialUserSchemas",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileDefinition"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProfileDefinition"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Schema"
        ]
      }
    },
    "/api/v1/policies": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "default": "",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicy"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediationPolicy"
            }
          },
          {
            "default": true,
            "in": "query",
            "name": "activate",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicy"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/policies/{policyId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deletePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "default": "",
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicy"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updatePolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediationPolicy"
            }
          },
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicy"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/policies/{policyId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activatePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/policies/{policyId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivatePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/policies/{policyId}/rules": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getPolicyRules",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicyRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "addPolicyRule",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediationPolicyRule"
            }
          },
          {
            "default": true,
            "in": "query",
            "name": "activate",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicyRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/policies/{policyId}/rules/{ruleId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deletePolicyRule",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getPolicyRule",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicyRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updatePolicyRule",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediationPolicyRule"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationPolicyRule"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activatePolicyRule",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivatePolicyRule",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/v1/templates/sms": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listCustomSmsTemplates",
        "parameters": [
          {
            "default": "",
            "in": "query",
            "name": "templateType",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Template"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "saveOrgCustomSmsTemplate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/api/v1/templates/sms/{templateId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteOrgCustomSmsTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Template"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getOrgCustomSmsTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Template"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "partialUpdateCustomSmsTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Template"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateCustomSmsTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "templateId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrgCustomSmsMediationTemplate"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "Template"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Lists users in your organization with pagination in most cases.  A subset of users can be returned that match a supported filter expression or search criteria.",
        "operationId": "listUsers",
        "parameters": [
          {
            "description": "Finds a user that matches firstName, lastName, and email properties",
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "description": "Specifies the pagination cursor for the next page of users",
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "description": "Specifies the number of results returned",
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "description": "Filters users with a supported expression for a subset of properties",
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "format",
            "type": "string"
          },
          {
            "description": "Searches for users with a supported filtering  expression for most properties",
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "List Users",
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new user in your Okta organization with or without credentials.",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputUserWithGroupIds"
            }
          },
          {
            "default": true,
            "description": "Executes activation lifecycle operation when creating the user",
            "in": "query",
            "name": "activate",
            "type": "boolean"
          },
          {
            "default": false,
            "description": "Indicates whether to create a user with a specified authentication provider",
            "in": "query",
            "name": "provider",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "summary": "Create User",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deactivateOrDeleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateUserWithDefaults",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/appLinks": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listAppLinks",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "in": "query",
            "name": "showAll",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/AppLink"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/catalog/apps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listUserCatalogApps",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/PublicAppInstance"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/credentials/change_password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "changePassword",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordCredentials"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/credentials/change_recovery_question": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "changeRecoveryQuestion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/credentials/forgot_password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "forgotPasswordWithRecoveryAnswer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "in": "query",
            "name": "sendEmail",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseCredentialsObject"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listUserFactors",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserFactor"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "enrollFactor",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactorEnrollRequest"
            }
          },
          {
            "default": false,
            "in": "query",
            "name": "updatePhone",
            "type": "boolean"
          },
          {
            "default": "",
            "in": "query",
            "name": "templateId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserFactor"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/authn": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "preAuth",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactorAuthenticationContext"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FactorActionResponse"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/catalog": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listFactorsCatalog",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/FactorCatalogEntry"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/{userFactorId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "resetFactor",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getFactor",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserFactor"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/{userFactorId}/devices/{deviceId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getFactorDevice",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FactorDevice"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/{userFactorId}/devices/{deviceId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateFactorDevice",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactorDeviceActivationRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FactorDevice"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/{userFactorId}/qr/{oneTimeSessionToken}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "generateQRCodeImage",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "oneTimeSessionToken",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/{userFactorId}/resend": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "resendCode",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          },
          {
            "default": "",
            "in": "query",
            "name": "templateId",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserFactor"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/{userFactorId}/transactions/{transactionId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "cancelFactorTransaction",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getFactorTransactionStatus",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FactorVerificationResponse"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/factors/{userFactorId}/verify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "authenticate",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userFactorId",
            "required": true,
            "type": "string"
          },
          {
            "default": "",
            "in": "query",
            "name": "templateId",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactorVerificationRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FactorVerificationResponse"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listUserGroups",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGroup"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/activate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "activateUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "in": "query",
            "name": "sendEmail",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ActivationToken"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/deactivate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "lifecycleDeactivateUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/forgot_password": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "forgotPassword",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "default": true,
            "in": "query",
            "name": "sendEmail",
            "required": true,
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResetPasswordToken"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/reset_factors": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "resetAllFactors",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/suspend": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "suspendUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/unlock": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "unlockUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/lifecycle/unsuspend": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "unsuspendUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listAssignedRoles",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "expand",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/MediationRoleAssignment"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "assignRoleToUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediationRoleAssignment"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationRoleAssignment"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles/{roleId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "unassignRoleFromUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "getRoleForUser",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MediationRoleAssignment"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles/{roleId}/targets/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "listGroupTargetsForRole",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "after",
            "type": "string"
          },
          {
            "default": -1,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGroup"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "removeGroupTargetFromRole",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "operationId": "addGroupTargetToRole",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/{userId}/sessions": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "clearUserSessions",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "api_token": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "ActivationToken": {
      "properties": {
        "activationToken": {
          "type": "string"
        },
        "activationUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Agent": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppFeature": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "featureDisplayName": {
          "type": "string"
        },
        "featureLabel": {
          "type": "string"
        },
        "featureName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppInstanceMediationPolicyRuleCondition": {
      "properties": {
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AppLink": {
      "properties": {
        "appAssignmentId": {
          "type": "string"
        },
        "appInstanceId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "credentialsSetup": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "linkUrl": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        },
        "sortOrder": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AppUser": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/AppUserCredentials"
        },
        "externalId": {
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastSync": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "passwordChanged": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "profile": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "scope": {
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "type": "string"
        },
        "statusChanged": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "syncState": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppUserCredentials": {
      "properties": {
        "password": {
          "$ref": "#/definitions/PasswordCredential"
        },
        "userName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignUserToGroupsMediationAction": {
      "properties": {
        "groupIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuthContextMediationPolicyRuleCondition": {
      "properties": {
        "authType": {
          "enum": [
            "ANY",
            "RADIUS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthProvider": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "enum": [
            "orn:okta:authn:provider:directory:activedirectory",
            "orn:okta:authn:provider:federation",
            "orn:okta:authn:provider:directory:ldap",
            "orn:okta:authn:provider:okta",
            "orn:okta:authn:provider:social",
            "orn:okta:authn:provider:okta:import"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthProviderMediationPolicyRuleCondition": {
      "properties": {
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "provider": {
          "enum": [
            "ANY",
            "OKTA",
            "ACTIVE_DIRECTORY",
            "LDAP"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BaseCredentialsObject": {
      "properties": {},
      "type": "object"
    },
    "CVDAppUserProfile": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "schemas": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "STANDARD",
            "IMPORTED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChangePasswordCredentials": {
      "properties": {
        "newPassword": {
          "$ref": "#/definitions/PasswordCredential"
        },
        "oldPassword": {
          "$ref": "#/definitions/PasswordCredential"
        }
      },
      "type": "object"
    },
    "ClientMediationPolicyCondition": {
      "properties": {
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ConnectorSettings": {
      "properties": {
        "agents": {
          "items": {
            "$ref": "#/definitions/Agent"
          },
          "type": "array"
        },
        "appInstanceId": {
          "type": "string"
        },
        "connectorType": {
          "type": "string"
        },
        "features": {
          "items": {
            "$ref": "#/definitions/AppFeature"
          },
          "type": "array"
        },
        "storeReturnedAppUserFields": {
          "type": "boolean"
        },
        "timeoutSeconds": {
          "type": "integer"
        },
        "userManagementModeType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CredentialsClient": {
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CredentialsSigning": {
      "properties": {
        "kid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CredentialsTrust": {
      "properties": {
        "audience": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "kid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceMediationPolicyRuleCondition": {
      "properties": {
        "platform": {
          "$ref": "#/definitions/DeviceMediationPolicyRuleConditionPlatform"
        },
        "trustLevel": {
          "enum": [
            "ANY",
            "TRUSTED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceMediationPolicyRuleConditionPlatform": {
      "properties": {
        "supportedMDMFrameworks": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "types": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EmbeddedObject": {
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FactorActionResponse": {
      "properties": {
        "allowedFactors": {
          "items": {
            "$ref": "#/definitions/FactorCatalogEntry"
          },
          "type": "array"
        },
        "enrolledFactors": {
          "items": {
            "$ref": "#/definitions/UserFactor"
          },
          "type": "array"
        },
        "nextAction": {
          "enum": [
            "BYPASS",
            "ENROLL",
            "CHALLENGE"
          ],
          "type": "string"
        },
        "policy": {
          "$ref": "#/definitions/FactorActionResponsePolicy"
        }
      },
      "type": "object"
    },
    "FactorActionResponsePolicy": {
      "properties": {
        "allowRememberDevice": {
          "type": "boolean"
        },
        "rememberDeviceByDefault": {
          "type": "boolean"
        },
        "rememberDeviceLifetimeInMinutes": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "FactorAuthenticationContext": {
      "properties": {
        "deviceToken": {
          "type": "string"
        },
        "forceMFA": {
          "type": "boolean"
        },
        "ipAddress": {
          "type": "string"
        },
        "other": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "sessionId": {
          "type": "string"
        },
        "userAgentString": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FactorCatalogEntry": {
      "properties": {},
      "type": "object"
    },
    "FactorDevice": {
      "properties": {
        "id": {
          "type": "string"
        },
        "links": {
          "type": "object"
        },
        "status": {
          "enum": [
            "PENDING_ACTIVATION",
            "ACTIVE",
            "INACTIVE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "FactorDeviceActivationRequest": {
      "properties": {
        "factorId": {
          "type": "string"
        },
        "passCode": {
          "type": "string"
        },
        "rechallengeExistingFactor": {
          "type": "boolean"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FactorEnrollRequest": {
      "properties": {
        "device": {
          "type": "string"
        },
        "deviceType": {
          "enum": [
            "other",
            "any",
            "phone",
            "mobile",
            "hardware",
            "smartphone:ios",
            "smartphone:android",
            "smartphone:windows",
            "smartphone:blackberry",
            "smartphone:unknown",
            "ios",
            "android",
            "windows",
            "unknown"
          ],
          "type": "string"
        },
        "factorType": {
          "type": "string"
        },
        "mfaStateTokenId": {
          "type": "string"
        },
        "profile": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        },
        "provider": {
          "type": "string"
        },
        "rechallengeExistingFactor": {
          "type": "boolean"
        },
        "sessionId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "verify": {
          "$ref": "#/definitions/Verify"
        }
      },
      "type": "object"
    },
    "FactorUpdateRequest": {
      "properties": {
        "profile": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        },
        "userId": {
          "type": "string"
        },
        "verify": {
          "$ref": "#/definitions/Verify"
        }
      },
      "type": "object"
    },
    "FactorVerificationRequest": {
      "properties": {
        "answer": {
          "type": "string"
        },
        "authenticatorData": {
          "type": "string"
        },
        "clientData": {
          "type": "string"
        },
        "customTemplateId": {
          "type": "string"
        },
        "factorId": {
          "type": "string"
        },
        "mfaStateTokenId": {
          "type": "string"
        },
        "nextPassCode": {
          "type": "string"
        },
        "passCode": {
          "type": "string"
        },
        "pushAttempt": {
          "type": "boolean"
        },
        "rememberDevice": {
          "type": "boolean"
        },
        "rememberDeviceAllowed": {
          "type": "boolean"
        },
        "resend": {
          "type": "boolean"
        },
        "sessionId": {
          "type": "string"
        },
        "signatureData": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userResponse": {
          "enum": [
            "APPROVE",
            "REJECT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "FactorVerificationResponse": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "expiresAt": {
          "type": "string"
        },
        "factorResult": {
          "enum": [
            "SUCCESS",
            "CHALLENGE",
            "WAITING",
            "FAILED",
            "REJECTED",
            "TIMEOUT",
            "TIME_WINDOW_EXCEEDED",
            "PASSCODE_REPLAYED",
            "ERROR"
          ],
          "type": "string"
        },
        "factorResultMessage": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GrantTypeMediationPolicyRuleCondition": {
      "properties": {
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GroupAppAssignment": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "profile": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GroupMediationPolicyRuleCondition": {
      "properties": {
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationActions": {
      "properties": {
        "assignUserToGroups": {
          "$ref": "#/definitions/AssignUserToGroupsMediationAction"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationConditions": {
      "properties": {
        "expression": {
          "$ref": "#/definitions/GroupMembershipMediationExpressionCondition"
        },
        "groups": {
          "$ref": "#/definitions/GroupMembershipMediationGroupCondition"
        },
        "people": {
          "$ref": "#/definitions/GroupMembershipMediationPeopleCondition"
        },
        "users": {
          "$ref": "#/definitions/GroupMembershipMediationUserCondition"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationExpressionCondition": {
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationGroupCondition": {
      "properties": {
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationPeopleCondition": {
      "properties": {
        "groups": {
          "$ref": "#/definitions/GroupMembershipMediationGroupCondition"
        },
        "users": {
          "$ref": "#/definitions/GroupMembershipMediationUserCondition"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationRule": {
      "properties": {
        "actions": {
          "$ref": "#/definitions/GroupMembershipMediationActions"
        },
        "conditions": {
          "$ref": "#/definitions/GroupMembershipMediationConditions"
        },
        "created": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "INVALID"
          ],
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GroupMembershipMediationUserCondition": {
      "properties": {
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HashedPassword": {
      "properties": {},
      "type": "object"
    },
    "IdpAppUser": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "externalId": {
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "profile": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdpCredentials": {
      "properties": {
        "client": {
          "$ref": "#/definitions/CredentialsClient"
        },
        "signing": {
          "$ref": "#/definitions/CredentialsSigning"
        },
        "trust": {
          "$ref": "#/definitions/CredentialsTrust"
        }
      },
      "type": "object"
    },
    "IdpTargetUser": {
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "profile": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdpTransaction": {
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "context": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "expiresAt": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "idp": {
          "$ref": "#/definitions/IdpTransactionIdp",
          "readOnly": true
        },
        "sessionToken": {
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "enum": [
            "ACCOUNT_LINK",
            "ACCOUNT_JIT",
            "SUCCESS"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdpTransaction$Idp": {
      "properties": {
        "id": {
          "readOnly": true
        },
        "name": {
          "readOnly": true
        },
        "type": {
          "readOnly": true
        }
      },
      "type": "object"
    },
    "IdpTransactionIdp": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdpTrust": {
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policy": {
          "$ref": "#/definitions/Policy"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "enum": [
            "SAML2",
            "GOOGLE",
            "FACEBOOK",
            "LINKEDIN",
            "MICROSOFT",
            "X509"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InputUserWithGroupIds": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "activated": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/UserCredentials"
        },
        "groupIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "passwordChanged": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile"
        },
        "status": {
          "enum": [
            "STAGED",
            "PROVISIONED",
            "ACTIVE",
            "RECOVERY",
            "PASSWORD_EXPIRED",
            "LOCKED_OUT",
            "DEPROVISIONED",
            "SUSPENDED"
          ],
          "type": "string"
        },
        "statusChanged": {
          "type": "string"
        },
        "transitioningToStatus": {
          "enum": [
            "STAGED",
            "PROVISIONED",
            "ACTIVE",
            "RECOVERY",
            "PASSWORD_EXPIRED",
            "LOCKED_OUT",
            "DEPROVISIONED",
            "SUSPENDED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "IpTrustMediationPolicyRuleCondition": {
      "properties": {
        "trustType": {
          "enum": [
            "ANY",
            "SUSPICIOUS",
            "UNTRUSTED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsonNode": {
      "properties": {},
      "type": "object"
    },
    "JsonWebKeyRSAMediated": {
      "properties": {
        "alg": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "e": {
          "type": "string"
        },
        "expiresAt": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "key_ops": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kid": {
          "readOnly": true,
          "type": "string"
        },
        "kty": {
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "n": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "use": {
          "readOnly": true,
          "type": "string"
        },
        "x5c": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "x5t": {
          "type": "string"
        },
        "x5t#S256": {
          "readOnly": true,
          "type": "string"
        },
        "x5u": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Link": {
      "properties": {
        "hints": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object"
        },
        "href": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LinksUnion": {
      "properties": {},
      "type": "object"
    },
    "MDMEnrollmentMediationPolicyRuleCondition": {
      "properties": {
        "blockNonSafeAndroid": {
          "type": "boolean"
        },
        "enrollment": {
          "enum": [
            "OMM",
            "ANY_OR_NONE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MediationPolicy": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "conditions": {
          "$ref": "#/definitions/MediationPolicyRuleConditions"
        },
        "created": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MediationPolicyRule": {
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "actions": {
          "$ref": "#/definitions/MediationPolicyRuleActions"
        },
        "conditions": {
          "$ref": "#/definitions/MediationPolicyRuleConditions"
        },
        "created": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "INVALID"
          ],
          "type": "string"
        },
        "system": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MediationPolicyRuleActions": {
      "properties": {},
      "type": "object"
    },
    "MediationPolicyRuleConditions": {
      "properties": {
        "apps": {
          "$ref": "#/definitions/AppInstanceMediationPolicyRuleCondition"
        },
        "authContext": {
          "$ref": "#/definitions/AuthContextMediationPolicyRuleCondition"
        },
        "authProvider": {
          "$ref": "#/definitions/AuthProviderMediationPolicyRuleCondition"
        },
        "clients": {
          "$ref": "#/definitions/ClientMediationPolicyCondition"
        },
        "device": {
          "$ref": "#/definitions/DeviceMediationPolicyRuleCondition"
        },
        "grantTypes": {
          "$ref": "#/definitions/GrantTypeMediationPolicyRuleCondition"
        },
        "groups": {
          "$ref": "#/definitions/GroupMediationPolicyRuleCondition"
        },
        "ipTrust": {
          "$ref": "#/definitions/IpTrustMediationPolicyRuleCondition"
        },
        "mdmEnrollment": {
          "$ref": "#/definitions/MDMEnrollmentMediationPolicyRuleCondition"
        },
        "network": {
          "$ref": "#/definitions/NetworkMediationPolicyRuleCondition"
        },
        "people": {
          "$ref": "#/definitions/PeopleMediationPolicyRuleCondition"
        },
        "userStatus": {
          "$ref": "#/definitions/UserStatusMediationPolicyRuleCondition"
        },
        "users": {
          "$ref": "#/definitions/UserMediationPolicyRuleCondition"
        }
      },
      "type": "object"
    },
    "MediationRoleAssignment": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "label": {
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ],
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkMediationPolicyRuleCondition": {
      "properties": {
        "connection": {
          "enum": [
            "ANYWHERE",
            "ON_NETWORK",
            "OFF_NETWORK",
            "ZONE"
          ],
          "type": "string"
        },
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "OrgCustomSmsMediationTemplate": {
      "properties": {
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "translations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PasswordCredential": {
      "properties": {
        "hash": {
          "$ref": "#/definitions/HashedPassword"
        }
      },
      "type": "object"
    },
    "PeopleMediationPolicyRuleCondition": {
      "properties": {
        "groups": {
          "$ref": "#/definitions/GroupMediationPolicyRuleCondition"
        },
        "users": {
          "$ref": "#/definitions/UserMediationPolicyRuleCondition"
        }
      },
      "type": "object"
    },
    "Policy": {
      "properties": {
        "accountLink": {
          "$ref": "#/definitions/PolicyAccountLink"
        },
        "maxClockSkew": {
          "type": "integer"
        },
        "provisioning": {
          "$ref": "#/definitions/Provisioning"
        },
        "subject": {
          "$ref": "#/definitions/PolicySubject"
        }
      },
      "type": "object"
    },
    "PolicyAccountLink": {
      "properties": {
        "action": {
          "enum": [
            "AUTO",
            "CALLOUT",
            "DISABLED"
          ],
          "type": "string"
        },
        "callout": {
          "$ref": "#/definitions/PolicyCallout"
        },
        "filter": {
          "$ref": "#/definitions/PolicyAccountLinkFilter"
        }
      },
      "type": "object"
    },
    "PolicyAccountLinkFilter": {
      "properties": {
        "groups": {
          "$ref": "#/definitions/PolicyAccountLinkFilterGroups"
        }
      },
      "type": "object"
    },
    "PolicyAccountLinkFilterGroups": {
      "properties": {
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PolicyCallout": {
      "properties": {
        "binding": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PolicySubject": {
      "properties": {
        "filter": {
          "type": "string"
        },
        "matchAttribute": {
          "type": "string"
        },
        "matchType": {
          "enum": [
            "USERNAME",
            "EMAIL",
            "USERNAME_OR_EMAIL",
            "CUSTOM_ATTRIBUTE"
          ],
          "type": "string"
        },
        "userNameTemplate": {
          "$ref": "#/definitions/PolicyUserNameTemplate"
        }
      },
      "type": "object"
    },
    "PolicyUserNameTemplate": {
      "properties": {
        "template": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProfileDefinition": {
      "properties": {
        "$schema": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "definitions": {
          "additionalProperties": {
            "$ref": "#/definitions/PublicSchema"
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          },
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Protocol": {
      "properties": {
        "algorithms": {
          "$ref": "#/definitions/ProtocolAlgorithms"
        },
        "credentials": {
          "$ref": "#/definitions/IdpCredentials"
        },
        "endpoints": {
          "$ref": "#/definitions/ProtocolEndpointsList",
          "readOnly": true
        },
        "scopes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "settings": {
          "$ref": "#/definitions/ProtocolSettings"
        },
        "type": {
          "enum": [
            "SAML2",
            "OIDC",
            "OAUTH2",
            "MTLS"
          ],
          "readOnly": true,
          "type": "string"
        },
        "validation": {
          "$ref": "#/definitions/ProtocolValidation"
        }
      },
      "type": "object"
    },
    "Protocol$Endpoint": {
      "properties": {
        "binding": {
          "readOnly": true
        },
        "url": {
          "readOnly": true
        }
      },
      "type": "object"
    },
    "Protocol$EndpointsList": {
      "properties": {
        "authorization": {
          "readOnly": true
        },
        "token": {
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ProtocolAlgorithmType": {
      "properties": {
        "digest": {
          "enum": [
            "NONE",
            "SHA_1",
            "SHA_256"
          ],
          "type": "string"
        },
        "encryption": {
          "enum": [
            "NONE",
            "AES_256_CBC",
            "AES_128_CBC",
            "AES_128_GCM"
          ],
          "type": "string"
        },
        "keyTransport": {
          "enum": [
            "NONE",
            "RSA_OAEP"
          ],
          "type": "string"
        },
        "signature": {
          "$ref": "#/definitions/ProtocolAlgorithmTypeSignature"
        }
      },
      "type": "object"
    },
    "ProtocolAlgorithmTypeSignature": {
      "properties": {
        "algorithm": {
          "type": "string"
        },
        "scope": {
          "enum": [
            "RESPONSE",
            "TOKEN",
            "ANY",
            "REQUEST",
            "NONE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProtocolAlgorithms": {
      "properties": {
        "request": {
          "$ref": "#/definitions/ProtocolAlgorithmType"
        },
        "response": {
          "$ref": "#/definitions/ProtocolAlgorithmType"
        }
      },
      "type": "object"
    },
    "ProtocolEndpoint": {
      "properties": {
        "binding": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "enum": [
            "INSTANCE",
            "ORG"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProtocolEndpointsList": {
      "properties": {
        "acs": {
          "$ref": "#/definitions/ProtocolEndpoint"
        },
        "authorization": {
          "$ref": "#/definitions/ProtocolEndpoint"
        },
        "metadata": {
          "$ref": "#/definitions/ProtocolEndpoint"
        },
        "slo": {
          "$ref": "#/definitions/ProtocolEndpoint"
        },
        "sso": {
          "$ref": "#/definitions/ProtocolEndpoint"
        },
        "token": {
          "$ref": "#/definitions/ProtocolEndpoint"
        }
      },
      "type": "object"
    },
    "ProtocolSettings": {
      "properties": {
        "nameFormat": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProtocolValidation": {
      "properties": {
        "revocation": {
          "enum": [
            "CRL",
            "DELTA_CRL",
            "OCSP"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Provisioning": {
      "properties": {
        "action": {
          "enum": [
            "AUTO",
            "CALLOUT",
            "DISABLED"
          ],
          "type": "string"
        },
        "callout": {
          "$ref": "#/definitions/PolicyCallout"
        },
        "groups": {
          "$ref": "#/definitions/ProvisioningGroups"
        },
        "profileMaster": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ProvisioningGroups": {
      "properties": {
        "action": {
          "enum": [
            "NONE",
            "APPEND",
            "SYNC",
            "ASSIGN"
          ],
          "type": "string"
        },
        "assignments": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "filter": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sourceAttributeName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicAppInstance": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/LinksUnion"
          },
          "readOnly": true,
          "type": "object"
        },
        "accessibility": {
          "$ref": "#/definitions/PublicAppInstanceAccessibility"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/PublicAppInstanceCredentials"
        },
        "features": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "licensing": {
          "$ref": "#/definitions/PublicAppInstanceLicensing"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/PublicAppInstanceSettings"
        },
        "signOnMode": {
          "type": "string"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "DELETED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/PublicAppInstanceVisibility"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceAccessibility": {
      "properties": {
        "errorRedirectUrl": {
          "type": "string"
        },
        "loginRedirectUrl": {
          "type": "string"
        },
        "selfService": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceCredentials": {
      "properties": {
        "password": {
          "$ref": "#/definitions/PasswordCredential"
        },
        "revealPassword": {
          "type": "boolean"
        },
        "scheme": {
          "type": "string"
        },
        "signing": {
          "$ref": "#/definitions/PublicAppInstanceCredentialsSigning"
        },
        "userName": {
          "type": "string"
        },
        "userNameTemplate": {
          "$ref": "#/definitions/PublicAppInstanceCredentialsUsernameTemplate"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceCredentialsSigning": {
      "properties": {
        "kid": {
          "type": "string"
        },
        "lastRotated": {
          "type": "string"
        },
        "nextRotation": {
          "type": "string"
        },
        "rotationMode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceCredentialsUsernameTemplate": {
      "properties": {
        "suffix": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceLicensing": {
      "properties": {
        "seatCount": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceSettings": {
      "properties": {
        "app": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        },
        "manualProvisioning": {
          "type": "boolean"
        },
        "notifications": {
          "$ref": "#/definitions/PublicAppInstanceSettingsNotifications"
        },
        "signOn": {
          "$ref": "#/definitions/PublicSignOnModeMediated"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceSettingsNotifications": {
      "properties": {
        "vpn": {
          "$ref": "#/definitions/PublicAppInstanceSettingsNotificationsVpn"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceSettingsNotificationsVpn": {
      "properties": {
        "helpUrl": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/PublicAppInstanceSettingsNotificationsVpnNetwork"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceSettingsNotificationsVpnNetwork": {
      "properties": {
        "connection": {
          "type": "string"
        },
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceVisibility": {
      "properties": {
        "appLinks": {
          "additionalProperties": {
            "type": "boolean"
          },
          "type": "object"
        },
        "autoSubmitToolbar": {
          "type": "boolean"
        },
        "hide": {
          "$ref": "#/definitions/PublicAppInstanceVisibilityHide"
        }
      },
      "type": "object"
    },
    "PublicAppInstanceVisibilityHide": {
      "properties": {
        "iOS": {
          "type": "boolean"
        },
        "web": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PublicSchema": {
      "properties": {
        "id": {
          "type": "string"
        },
        "properties": {
          "type": "string"
        },
        "required": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PublicSignOnModeMediated": {
      "properties": {},
      "type": "object"
    },
    "RecoveryQuestionCredential": {
      "properties": {
        "question": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResetPasswordToken": {
      "properties": {
        "resetPasswordUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Schema": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UploadedCertificateMetadata": {
      "properties": {
        "certificateId": {
          "type": "string"
        },
        "commonName": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "activated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/UserCredentials"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastLogin": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "passwordChanged": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile"
        },
        "status": {
          "enum": [
            "STAGED",
            "PROVISIONED",
            "ACTIVE",
            "RECOVERY",
            "PASSWORD_EXPIRED",
            "LOCKED_OUT",
            "DEPROVISIONED",
            "SUSPENDED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "statusChanged": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "transitioningToStatus": {
          "enum": [
            "STAGED",
            "PROVISIONED",
            "ACTIVE",
            "RECOVERY",
            "PASSWORD_EXPIRED",
            "LOCKED_OUT",
            "DEPROVISIONED",
            "SUSPENDED"
          ],
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-links": [
        {
          "alias": "listGroups",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "listUserGroups"
        },
        {
          "alias": "activate",
          "arguments": [
            {
              "dest": "userId",
              "src": "id"
            }
          ],
          "operationId": "activateUser"
        }
      ]
    },
    "UserCredentials": {
      "properties": {
        "password": {
          "$ref": "#/definitions/PasswordCredential"
        },
        "provider": {
          "$ref": "#/definitions/AuthProvider",
          "readOnly": true
        },
        "recovery_question": {
          "$ref": "#/definitions/RecoveryQuestionCredential"
        }
      },
      "type": "object"
    },
    "UserFactor": {
      "properties": {},
      "type": "object"
    },
    "UserGroup": {
      "properties": {
        "_embedded": {
          "additionalProperties": {
            "$ref": "#/definitions/EmbeddedObject"
          },
          "readOnly": true,
          "type": "object"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/LinksUnion"
          },
          "readOnly": true,
          "type": "object"
        },
        "created": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "lastMembershipUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "objectClass": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "profile": {
          "$ref": "#/definitions/UserGroupProfile"
        },
        "type": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-okta-links": [
        {
          "alias": "listUsers",
          "arguments": [
            {
              "dest": "groupId",
              "src": "id"
            }
          ],
          "operationId": "listGroupUsers"
        }
      ]
    },
    "UserGroupProfile": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserGroupStats": {
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/Link"
          },
          "readOnly": true,
          "type": "object"
        },
        "appsCount": {
          "type": "integer"
        },
        "groupPushMappingsCount": {
          "type": "integer"
        },
        "usersCount": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "UserMediationPolicyRuleCondition": {
      "properties": {
        "exclude": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "include": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UserProfile": {
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "secondEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserStatusMediationPolicyRuleCondition": {
      "properties": {
        "value": {
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "PENDING",
            "DELETED",
            "EXPIRED_PASSWORD",
            "ACTIVATING",
            "SUSPENDED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Verify": {
      "properties": {
        "activationToken": {
          "type": "string"
        },
        "nextPassCode": {
          "type": "string"
        },
        "passCode": {
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}